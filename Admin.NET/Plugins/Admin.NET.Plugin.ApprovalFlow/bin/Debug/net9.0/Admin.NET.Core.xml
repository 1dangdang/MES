<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Admin.NET.Core</name>
    </assembly>
    <members>
        <member name="T:Admin.NET.Core.CommonValidationAttribute">
            <summary>
            通用接口参数验证特性类
            </summary>
        </member>
        <member name="M:Admin.NET.Core.CommonValidationAttribute.#ctor(System.String[])">
             <summary>
             </summary>
             <param name="conditionPairs">条件对参数，长度必须为偶数<br/>
             奇数字符串参数：动态条件<br/>
             偶数字符串参数：提示消息
             </param>
             <example>
             <code lang="C">
             public class ModelInput {
            
            
                 public string A { get; set; }
            
            
                 [CommonValidation(
                     "A == 1 <value>&amp;&amp;</value> B == null", "当 A == 1时，B不能为空",
                     "C == 2 <value>&amp;&amp;</value> B == null", "当 C == 2时，B不能为空"
                 )]
                 public string B { get; set; }
             }
             </code>
             </example>
        </member>
        <member name="T:Admin.NET.Core.ConstAttribute">
            <summary>
            常量特性
            </summary>
        </member>
        <member name="T:Admin.NET.Core.CustomJsonPropertyAttribute">
            <summary>
            自定义Json转换字段名
            </summary>
        </member>
        <member name="T:Admin.NET.Core.CustomUnifyResultAttribute">
            <summary>
            自定义规范化结果特性
            </summary>
        </member>
        <member name="T:Admin.NET.Core.DataMaskAttribute">
            <summary>
            数据脱敏特性（支持自定义脱敏位置和脱敏字符）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DataMaskAttribute.StartIndex">
            <summary>
            脱敏起始位置（从0开始）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DataMaskAttribute.Length">
            <summary>
            脱敏长度
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DataMaskAttribute.MaskChar">
            <summary>
            脱敏字符（默认*）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DataMaskAttribute.KeepLength">
            <summary>
            是否保留原始长度（默认true）
            </summary>
        </member>
        <member name="M:Admin.NET.Core.DataMaskAttribute.Mask(System.String)">
            <summary>
            执行脱敏处理
            </summary>
        </member>
        <member name="T:Admin.NET.Core.DictAttribute">
            <summary>
            字典值合规性校验特性
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DictAttribute.DictTypeCode">
            <summary>
            字典编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DictAttribute.AllowEmptyStrings">
            <summary>
            是否允许空字符串
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DictAttribute.AllowNullValue">
            <summary>
            允许空值，有值才验证，默认 false
            </summary>
        </member>
        <member name="M:Admin.NET.Core.DictAttribute.#ctor(System.String,System.String)">
            <summary>
            字典值合规性校验特性
            </summary>
            <param name="dictTypeCode"></param>
            <param name="errorMessage"></param>
        </member>
        <member name="M:Admin.NET.Core.DictAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            字典值合规性校验
            </summary>
            <param name="value"></param>
            <param name="validationContext"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.DictAttribute.GetImporterHeaderName(System.Reflection.PropertyInfo,System.String)">
            <summary>
            获取本字段上 [ImporterHeader(Name = "xxx")] 里的Name，如果没有则使用defaultName.
            用于在从excel导入数据时，能让调用者知道是哪个字段验证失败，而不是抛异常
            </summary>
        </member>
        <member name="T:Admin.NET.Core.EnumAttribute">
            <summary>
            枚举值合规性校验特性
            </summary>
        </member>
        <member name="M:Admin.NET.Core.EnumAttribute.#ctor(System.String)">
            <summary>
            枚举值合规性校验特性
            </summary>
            <param name="errorMessage"></param>
        </member>
        <member name="M:Admin.NET.Core.EnumAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            枚举值合规性校验
            </summary>
            <param name="value"></param>
            <param name="validationContext"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.IdempotentAttribute">
            <summary>
            防止重复请求过滤器特性(此特性使用了分布式锁，需确保系统支持分布式锁)
            </summary>
        </member>
        <member name="P:Admin.NET.Core.IdempotentAttribute.IntervalTime">
            <summary>
            请求间隔时间/秒
            </summary>
        </member>
        <member name="P:Admin.NET.Core.IdempotentAttribute.Message">
            <summary>
            错误提示内容
            </summary>
        </member>
        <member name="P:Admin.NET.Core.IdempotentAttribute.CacheKey">
            <summary>
            缓存前缀: Key+请求路由+用户Id+请求参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.IdempotentAttribute.ThrowBah">
            <summary>
            是否直接抛出异常：Ture是，False返回上次请求结果
            </summary>
        </member>
        <member name="P:Admin.NET.Core.IdempotentAttribute.LockPrefix">
            <summary>
            锁前缀
            </summary>
        </member>
        <member name="T:Admin.NET.Core.IdempotentAttribute.ResponseData">
            <summary>
            请求结果数据
            </summary>
        </member>
        <member name="P:Admin.NET.Core.IdempotentAttribute.ResponseData.Type">
            <summary>
            结果类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.IdempotentAttribute.ResponseData.Value">
            <summary>
            请求结果
            </summary>
        </member>
        <member name="T:Admin.NET.Core.IgnoreEnumToDictAttribute">
            <summary>
            忽略枚举类型转字典特性（标记在枚举类型）
            </summary>
        </member>
        <member name="T:Admin.NET.Core.IgnoreTableAttribute">
            <summary>
            忽略表结构初始化特性（标记在实体）
            </summary>
        </member>
        <member name="T:Admin.NET.Core.IgnoreUpdateSeedAttribute">
            <summary>
            忽略更新种子特性（标记在种子类）
            </summary>
        </member>
        <member name="T:Admin.NET.Core.IgnoreUpdateSeedColumnAttribute">
            <summary>
            忽略更新种子列特性（标记在实体属性）
            </summary>
        </member>
        <member name="T:Admin.NET.Core.ImportDictAttribute">
            <summary>
            属性字典配置
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ImportDictAttribute.TypeCode">
            <summary>
            字典Code
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ImportDictAttribute.TargetPropName">
            <summary>
            目标对象名称
            </summary>
        </member>
        <member name="T:Admin.NET.Core.IncreSeedAttribute">
            <summary>
            增量种子特性
            </summary>
        </member>
        <member name="T:Admin.NET.Core.IncreTableAttribute">
            <summary>
            增量表特性
            </summary>
        </member>
        <member name="T:Admin.NET.Core.LogTableAttribute">
            <summary>
            日志表特性
            </summary>
        </member>
        <member name="T:Admin.NET.Core.MaskNewtonsoftJsonConverter">
            <summary>
            字符串掩码
            </summary>
        </member>
        <member name="T:Admin.NET.Core.MaskIdCardNewtonsoftJsonConverter">
            <summary>
            身份证掩码
            </summary>
        </member>
        <member name="T:Admin.NET.Core.MaskEmailNewtonsoftJsonConverter">
            <summary>
            邮箱掩码
            </summary>
        </member>
        <member name="T:Admin.NET.Core.MaskSystemTextJsonConverter">
            <summary>
            字符串掩码
            </summary>
        </member>
        <member name="T:Admin.NET.Core.MaskIdCardSystemTextJsonConverter">
            <summary>
            身份证掩码
            </summary>
        </member>
        <member name="T:Admin.NET.Core.MaskEmailSystemTextJsonConverter">
            <summary>
            邮箱掩码
            </summary>
        </member>
        <member name="T:Admin.NET.Core.MaxValueAttribute">
            <summary>
            最大值校验
            </summary>
        </member>
        <member name="M:Admin.NET.Core.MaxValueAttribute.#ctor(System.Double)">
            <summary>
            最大值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Admin.NET.Core.MaxValueAttribute.IsValid(System.Object)">
            <summary>
            最大值校验
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.MaxValueAttribute.FormatErrorMessage(System.String)">
            <summary>
            错误信息
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.MinValueAttribute">
            <summary>
            最小值校验
            </summary>
        </member>
        <member name="M:Admin.NET.Core.MinValueAttribute.#ctor(System.Double)">
            <summary>
            最小值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Admin.NET.Core.MinValueAttribute.IsValid(System.Object)">
            <summary>
            最小值校验
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.MinValueAttribute.FormatErrorMessage(System.String)">
            <summary>
            错误信息
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.NotEmptyAttribute">
            <summary>
            校验集合不能为空
            </summary>
        </member>
        <member name="M:Admin.NET.Core.NotEmptyAttribute.IsValid(System.Object)">
            <summary>
            校验集合不能为空
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.NotEmptyAttribute.FormatErrorMessage(System.String)">
            <summary>
            错误信息
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.OwnerOrgAttribute">
            <summary>
            所属机构数据权限
            </summary>
        </member>
        <member name="T:Admin.NET.Core.OwnerUserAttribute">
            <summary>
            所属用户数据权限
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SeedDataAttribute">
            <summary>
            种子数据特性
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SeedDataAttribute.Order">
            <summary>
            排序（越大越后执行）
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysTableAttribute">
            <summary>
            系统表特性
            </summary>
        </member>
        <member name="T:Admin.NET.Core.ThemeAttribute">
            <summary>
            枚举拓展主题样式
            </summary>
        </member>
        <member name="M:Admin.NET.Core.CacheSetup.AddCache(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            缓存注册（新生命Redis组件）
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Admin.NET.Core.SqlSugarCache">
            <summary>
            SqlSugar二级缓存
            </summary>
        </member>
        <member name="F:Admin.NET.Core.SqlSugarCache._cache">
            <summary>
            系统缓存服务
            </summary>
        </member>
        <member name="T:Admin.NET.Core.AlipayConst">
            <summary>
            支付宝支付常量
            </summary>
        </member>
        <member name="F:Admin.NET.Core.AlipayConst.BizScene">
            <summary>
            单笔无密转账【业务场景】固定值
            </summary>
        </member>
        <member name="F:Admin.NET.Core.AlipayConst.ProductCode">
            <summary>
            单笔无密转账【销售产品码】固定值
            </summary>
        </member>
        <member name="F:Admin.NET.Core.AlipayConst.TradeStatus">
            <summary>
            交易状态参数名
            </summary>
        </member>
        <member name="F:Admin.NET.Core.AlipayConst.TradeSuccess">
            <summary>
            交易成功标识
            </summary>
        </member>
        <member name="F:Admin.NET.Core.AlipayConst.GrantType">
            <summary>
            授权类型
            </summary>
        </member>
        <member name="T:Admin.NET.Core.CacheConst">
            <summary>
            缓存相关常量
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheConst.KeyUserButton">
            <summary>
            用户权限缓存（按钮集合）
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheConst.KeyUserOrg">
            <summary>
            用户机构缓存
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheConst.KeyRoleMaxDataScope">
            <summary>
            角色最大数据范围缓存
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheConst.KeyUserOnline">
            <summary>
            在线用户缓存
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheConst.KeyVerCode">
            <summary>
            图形验证码缓存
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheConst.KeyPhoneVerCode">
            <summary>
            手机验证码缓存
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheConst.KeyPasswordErrorTimes">
            <summary>
            密码错误次数缓存
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheConst.KeyTenant">
            <summary>
            租户缓存
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheConst.KeyConst">
            <summary>
            常量下拉框
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheConst.KeyAll">
            <summary>
            所有缓存关键字集合
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheConst.SqlSugar">
            <summary>
            SqlSugar二级缓存
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheConst.KeyOpenAccess">
            <summary>
            开放接口身份缓存
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheConst.KeyOpenAccessNonce">
            <summary>
            开放接口身份随机数缓存
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheConst.KeyBlacklist">
            <summary>
            登录黑名单
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheConst.KeyConfig">
            <summary>
            系统配置缓存
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheConst.KeyTenantConfig">
            <summary>
            系统租户配置缓存
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheConst.KeyUserConfig">
            <summary>
            系统用户配置缓存
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheConst.KeyDict">
            <summary>
            系统字典缓存
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheConst.KeyTenantDict">
            <summary>
            系统租户字典缓存
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheConst.KeyIdempotent">
            <summary>
            重复请求(幂等)字典缓存
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheConst.KeyExcelTemp">
            <summary>
            Excel临时文件缓存
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheConst.KeySysUpdateLog">
            <summary>
            系统更新命令日志缓存
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheConst.KeySysUpdateInterval">
            <summary>
            系统更新间隔标记缓存
            </summary>
        </member>
        <member name="T:Admin.NET.Core.ClaimConst">
            <summary>
            Claim相关常量
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ClaimConst.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ClaimConst.Account">
            <summary>
            账号
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ClaimConst.RealName">
            <summary>
            真实姓名
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ClaimConst.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ClaimConst.AccountType">
            <summary>
            账号类型
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ClaimConst.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ClaimConst.OrgId">
            <summary>
            组织机构Id
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ClaimConst.OrgName">
            <summary>
            组织机构名称
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ClaimConst.OrgType">
            <summary>
            组织机构类型
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ClaimConst.OpenId">
            <summary>
            微信OpenId
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ClaimConst.LoginMode">
            <summary>
            登录模式PC、APP
            </summary>
        </member>
        <member name="T:Admin.NET.Core.CommonConst">
            <summary>
            通用常量
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CommonConst.SysLogCategoryName">
            <summary>
            日志分组名称
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CommonConst.AddExLog">
            <summary>
            事件-增加异常日志
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CommonConst.SendErrorMail">
            <summary>
            事件-发送异常邮件
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CommonConst.DefaultBaseRoleName">
            <summary>
            默认基本角色名称
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CommonConst.DefaultBaseRoleCode">
            <summary>
            默认基本角色编码
            </summary>
        </member>
        <member name="T:Admin.NET.Core.ConfigConst">
            <summary>
            配置常量
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ConfigConst.SysDemoEnv">
            <summary>
            演示环境
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ConfigConst.SysPassword">
            <summary>
            默认密码
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ConfigConst.SysPasswordMaxErrorTimes">
            <summary>
            密码最大错误次数
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ConfigConst.SysLogRetentionDays">
            <summary>
            日志保留天数
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ConfigConst.SysOpLog">
            <summary>
            记录操作日志
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ConfigConst.SysSingleLogin">
            <summary>
            单设备登录
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ConfigConst.SysLoginOutReminder">
            <summary>
            登入登出提醒
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ConfigConst.SysHideTenantLogin">
            <summary>
            登陆时隐藏租户
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ConfigConst.SysSecondVer">
            <summary>
            登录二次验证
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ConfigConst.SysCaptcha">
            <summary>
            图形验证码
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ConfigConst.SysTokenExpire">
            <summary>
            Token过期时间
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ConfigConst.SysRefreshTokenExpire">
            <summary>
            RefreshToken过期时间
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ConfigConst.SysErrorMail">
            <summary>
            发送异常日志邮件
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ConfigConst.SysDomainLogin">
            <summary>
            域登录验证
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ConfigConst.SysValidationLog">
            <summary>
            数据校验日志
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ConfigConst.SysRegionSyncLevel">
            <summary>
            行政区域同步层级 1-省级,2-市级,3-区县级,4-街道级,5-村级
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ConfigConst.SysDefaultGroup">
            <summary>
            Default 分组
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ConfigConst.AlipayAuthPageUrl">
            <summary>
            支付宝授权页面地址
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SqlSugarConst">
            <summary>
            SqlSugar相关常量
            </summary>
        </member>
        <member name="F:Admin.NET.Core.SqlSugarConst.MainConfigId">
            <summary>
            默认主数据库标识（默认租户）
            </summary>
        </member>
        <member name="F:Admin.NET.Core.SqlSugarConst.LogConfigId">
            <summary>
            默认日志数据库标识
            </summary>
        </member>
        <member name="F:Admin.NET.Core.SqlSugarConst.PrimaryKey">
            <summary>
            默认表主键
            </summary>
        </member>
        <member name="F:Admin.NET.Core.SqlSugarConst.DefaultTenantId">
            <summary>
            默认租户Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.EntityBaseId">
            <summary>
            框架实体基类Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EntityBaseId.Id">
            <summary>
            雪花Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.EntityBase">
            <summary>
            框架实体基类
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EntityBase.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EntityBase.UpdateTime">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EntityBase.CreateUserId">
            <summary>
            创建者Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EntityBase.CreateUserName">
            <summary>
            创建者姓名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EntityBase.UpdateUserId">
            <summary>
            修改者Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EntityBase.UpdateUserName">
            <summary>
            修改者姓名
            </summary>
        </member>
        <member name="T:Admin.NET.Core.EntityBaseDel">
            <summary>
            框架实体基类（删除标志）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EntityBaseDel.IsDelete">
            <summary>
            软删除
            </summary>
        </member>
        <member name="T:Admin.NET.Core.EntityBaseOrg">
            <summary>
            机构实体基类（数据权限）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EntityBaseOrg.OrgId">
            <summary>
            机构Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.EntityBaseOrgDel">
            <summary>
            机构实体基类（数据权限、删除标志）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EntityBaseOrgDel.OrgId">
            <summary>
            机构Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.EntityBaseTenant">
            <summary>
            租户实体基类
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EntityBaseTenant.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.EntityBaseTenantDel">
            <summary>
            租户实体基类（删除标志）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EntityBaseTenantDel.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.EntityBaseTenantId">
            <summary>
            租户实体基类Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EntityBaseTenantId.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.EntityBaseTenantOrg">
            <summary>
            租户机构实体基类（数据权限）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EntityBaseTenantOrg.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.EntityBaseTenantOrgDel">
            <summary>
            租户机构实体基类（数据权限、删除标志）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EntityBaseTenantOrgDel.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.IDeletedFilter">
            <summary>
            假删除接口过滤器
            </summary>
        </member>
        <member name="P:Admin.NET.Core.IDeletedFilter.IsDelete">
            <summary>
            软删除
            </summary>
        </member>
        <member name="T:Admin.NET.Core.ITenantIdFilter">
            <summary>
            租户Id接口过滤器
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ITenantIdFilter.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.IOrgIdFilter">
            <summary>
            机构Id接口过滤器
            </summary>
        </member>
        <member name="P:Admin.NET.Core.IOrgIdFilter.OrgId">
            <summary>
            机构Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysAlipayAuthInfo">
            <summary>
            支付宝授权记录表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayAuthInfo.AppId">
            <summary>
            商户AppId
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayAuthInfo.OpenId">
            <summary>
            开放ID
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayAuthInfo.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayAuthInfo.Gender">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayAuthInfo.Age">
            <summary>
            年龄
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayAuthInfo.Mobile">
            <summary>
            手机号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayAuthInfo.DisplayName">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayAuthInfo.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayAuthInfo.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayAuthInfo.Avatar">
            <summary>
            头像
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayAuthInfo.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayAuthInfo.UserNation">
            <summary>
            用户民族
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayAuthInfo.TaobaoId">
            <summary>
            淘宝ID
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayAuthInfo.Phone">
            <summary>
            电话
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayAuthInfo.PersonBirthday">
            <summary>
            生日
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayAuthInfo.Profession">
            <summary>
            职业
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayAuthInfo.Province">
            <summary>
            省份
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayAuthInfo.UserStatus">
            <summary>
            用户状态
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayAuthInfo.Degree">
            <summary>
            学历
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayAuthInfo.UserType">
            <summary>
            用户类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayAuthInfo.Zip">
            <summary>
            邮编
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayAuthInfo.Address">
            <summary>
            地址
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysAlipayTransaction">
            <summary>
            支付宝交易记录表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayTransaction.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayTransaction.TradeNo">
            <summary>
            交易号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayTransaction.OutTradeNo">
            <summary>
            商户订单号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayTransaction.TotalAmount">
            <summary>
            交易金额
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayTransaction.TradeStatus">
            <summary>
            交易状态
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayTransaction.FinishTime">
            <summary>
            交易完成时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayTransaction.Subject">
            <summary>
            交易标题
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayTransaction.Body">
            <summary>
            交易描述
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayTransaction.BuyerLogonId">
            <summary>
            买家支付宝账号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayTransaction.BuyerUserId">
            <summary>
            买家支付宝用户ID
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayTransaction.SellerUserId">
            <summary>
            卖家支付宝用户ID
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayTransaction.AppId">
            <summary>
            商户AppId
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayTransaction.ExtendInfo">
            <summary>
            交易扩展信息
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayTransaction.ErrorInfo">
            <summary>
            交易异常信息
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysAlipayTransaction.Remark">
            <summary>
            交易备注
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysCodeGen">
            <summary>
            代码生成表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGen.AuthorName">
            <summary>
            作者姓名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGen.TablePrefix">
            <summary>
            是否移除表前缀
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGen.GenerateType">
            <summary>
            生成方式
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGen.ConfigId">
            <summary>
            库定位器名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGen.DbNickName">
            <summary>
            库名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGen.DbName">
            <summary>
            数据库名(保留字段)
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGen.DbType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGen.ConnectionString">
            <summary>
            数据库链接
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGen.TableName">
            <summary>
            数据库表名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGen.NameSpace">
            <summary>
            命名空间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGen.BusName">
            <summary>
            业务名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGen.TableUniqueConfig">
            <summary>
            表唯一字段配置
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGen.GenerateMenu">
            <summary>
            是否生成菜单
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGen.MenuIcon">
            <summary>
            菜单图标
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGen.MenuPid">
            <summary>
            菜单编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGen.PagePath">
            <summary>
            页面目录
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGen.PrintType">
            <summary>
            支持打印类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGen.PrintName">
            <summary>
            打印模版名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGen.TableUniqueList">
            <summary>
            表唯一字段列表
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysCodeGenConfig">
            <summary>
            代码生成字段配置表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.CodeGenId">
            <summary>
            代码生成主表Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.ColumnName">
            <summary>
            数据库字段名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.ColumnKey">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.PropertyName">
            <summary>
            实体属性名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.ColumnLength">
            <summary>
            字段数据长度
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.ColumnComment">
            <summary>
            字段描述
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.DataType">
            <summary>
            数据库中类型（物理类型）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.NetType">
            <summary>
            .NET数据类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.DefaultValue">
            <summary>
            字段数据默认值
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.EffectType">
            <summary>
            作用类型（字典）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.FkConfigId">
            <summary>
            外键库标识
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.FkEntityName">
            <summary>
            外键实体名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.FkTableName">
            <summary>
            外键表名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.FkDisplayColumns">
            <summary>
            外键显示字段
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.FkLinkColumnName">
            <summary>
            外键链接字段
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.FkColumnNetType">
            <summary>
            外键显示字段.NET类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.PidColumn">
            <summary>
            父级字段
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.DictTypeCode">
            <summary>
            字典编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.QueryType">
            <summary>
            查询方式
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.WhetherQuery">
            <summary>
            是否是查询条件
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.WhetherRetract">
            <summary>
            列表是否缩进（字典）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.WhetherRequired">
            <summary>
            是否必填（字典）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.WhetherSortable">
            <summary>
            是否可排序（字典）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.WhetherTable">
            <summary>
            列表显示
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.WhetherAddUpdate">
            <summary>
            增改
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.WhetherImport">
            <summary>
            导入
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.WhetherCommon">
            <summary>
            是否通用字段
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysCodeGenConfig.OrderNo">
            <summary>
            排序
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysConfig">
            <summary>
            系统配置参数表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysConfig.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysConfig.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysConfig.Value">
            <summary>
            参数值
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysConfig.SysFlag">
            <summary>
            是否是内置参数（Y-是，N-否）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysConfig.GroupCode">
            <summary>
            分组编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysConfig.OrderNo">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysConfig.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysDictData">
            <summary>
            系统字典值表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysDictData.DictTypeId">
            <summary>
            字典类型Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysDictData.DictType">
            <summary>
            字典类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysDictData.Label">
            <summary>
            显示文本
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysDictData.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysDictData.Code">
            <summary>
            编码
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:Admin.NET.Core.SysDictData.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysDictData.TagType">
            <summary>
            显示样式-标签颜色
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysDictData.StyleSetting">
            <summary>
            显示样式-Style(控制显示样式)
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysDictData.ClassSetting">
            <summary>
            显示样式-Class(控制显示样式)
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysDictData.OrderNo">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysDictData.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysDictData.ExtData">
            <summary>
            拓展数据(保存业务功能的配置项)
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysDictData.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysDictDataTenant">
            <summary>
            系统租户字典值表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysDictDataTenant.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysDictType">
            <summary>
            系统字典类型表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysDictType.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysDictType.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysDictType.OrderNo">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysDictType.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysDictType.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysDictType.SysFlag">
            <summary>
            是否是内置字典（Y-是，N-否）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysDictType.IsTenant">
            <summary>
            是否是租户字典（Y-是，N-否）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysDictType.Children">
            <summary>
            字典值集合
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysFile">
            <summary>
            系统文件表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysFile.Provider">
            <summary>
            提供者
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysFile.BucketName">
            <summary>
            仓储名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysFile.FileName">
            <summary>
            文件名称（源文件名）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysFile.Suffix">
            <summary>
            文件后缀
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysFile.FilePath">
            <summary>
            存储路径
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysFile.SizeKb">
            <summary>
            文件大小KB
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysFile.SizeInfo">
            <summary>
            文件大小信息-计算后的
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysFile.Url">
            <summary>
            外链地址-OSS上传后生成外链地址方便前端预览
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysFile.FileMd5">
            <summary>
            文件MD5
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysFile.FileType">
            <summary>
            文件类别
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysFile.FileAlias">
            <summary>
            文件别名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysFile.IsPublic">
            <summary>
            是否公开
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysFile.DataId">
            <summary>
            业务数据Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysJobCluster">
            <summary>
            系统作业集群表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobCluster.ClusterId">
            <summary>
            作业集群Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobCluster.Description">
            <summary>
            描述信息
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobCluster.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobCluster.UpdatedTime">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysJobDetail">
            <summary>
            系统作业信息表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobDetail.JobId">
            <summary>
            作业Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobDetail.GroupName">
            <summary>
            组名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobDetail.JobType">
            <summary>
            作业类型FullName
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobDetail.AssemblyName">
            <summary>
            程序集Name
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobDetail.Description">
            <summary>
            描述信息
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobDetail.Concurrent">
            <summary>
            是否并行执行
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobDetail.IncludeAnnotation">
            <summary>
            是否扫描特性触发器
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobDetail.Properties">
            <summary>
            额外数据
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobDetail.UpdatedTime">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobDetail.CreateType">
            <summary>
            作业创建类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobDetail.ScriptCode">
            <summary>
            脚本代码
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysJobTrigger">
            <summary>
            系统作业触发器表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTrigger.TriggerId">
            <summary>
            触发器Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTrigger.JobId">
            <summary>
            作业Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTrigger.TriggerType">
            <summary>
            触发器类型FullName
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTrigger.AssemblyName">
            <summary>
            程序集Name
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTrigger.Args">
            <summary>
            参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTrigger.Description">
            <summary>
            描述信息
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTrigger.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTrigger.StartTime">
            <summary>
            起始时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTrigger.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTrigger.LastRunTime">
            <summary>
            最近运行时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTrigger.NextRunTime">
            <summary>
            下一次运行时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTrigger.NumberOfRuns">
            <summary>
            触发次数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTrigger.MaxNumberOfRuns">
            <summary>
            最大触发次数（0:不限制，n:N次）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTrigger.NumberOfErrors">
            <summary>
            出错次数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTrigger.MaxNumberOfErrors">
            <summary>
            最大出错次数（0:不限制，n:N次）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTrigger.NumRetries">
            <summary>
            重试次数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTrigger.RetryTimeout">
            <summary>
            重试间隔时间（ms）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTrigger.StartNow">
            <summary>
            是否立即启动
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTrigger.RunOnStart">
            <summary>
            是否启动时执行一次
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTrigger.ResetOnlyOnce">
            <summary>
            是否在启动时重置最大触发次数等于一次的作业
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTrigger.UpdatedTime">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysJobTriggerRecord">
            <summary>
            系统作业触发器运行记录表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTriggerRecord.JobId">
            <summary>
            作业Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTriggerRecord.TriggerId">
            <summary>
            触发器Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTriggerRecord.NumberOfRuns">
            <summary>
            当前运行次数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTriggerRecord.LastRunTime">
            <summary>
            最近运行时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTriggerRecord.NextRunTime">
            <summary>
            下一次运行时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTriggerRecord.Status">
            <summary>
            触发器状态
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTriggerRecord.Result">
            <summary>
            本次执行结果
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTriggerRecord.ElapsedTime">
            <summary>
            本次执行耗时
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysJobTriggerRecord.CreatedTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysLdap">
            <summary>
            系统域登录信息配置表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLdap.Host">
            <summary>
            主机
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLdap.Port">
            <summary>
            端口
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLdap.BaseDn">
            <summary>
            用户搜索基准
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLdap.BindDn">
            <summary>
            绑定DN(有管理权限制的用户)
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLdap.BindPass">
            <summary>
            绑定密码(有管理权限制的用户密码)
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLdap.AuthFilter">
            <summary>
            用户过滤规则
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLdap.Version">
            <summary>
            Ldap版本
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLdap.BindAttrAccount">
            <summary>
            绑定域账号字段属性值
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLdap.BindAttrEmployeeId">
            <summary>
            绑定用户EmployeeId属性值
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLdap.BindAttrCode">
            <summary>
            绑定Code属性值
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLdap.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysLogDiff">
            <summary>
            系统差异日志表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogDiff.DiffData">
            <summary>
            差异数据
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogDiff.Sql">
            <summary>
            Sql
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogDiff.Parameters">
            <summary>
            参数  手动传入的参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogDiff.BusinessData">
            <summary>
            业务对象
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogDiff.DiffType">
            <summary>
            差异操作
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogDiff.Elapsed">
            <summary>
            耗时
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysLogEx">
            <summary>
            系统异常日志表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogEx.HttpMethod">
            <summary>
            请求方式
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogEx.RequestUrl">
            <summary>
            请求地址
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogEx.RequestParam">
            <summary>
            请求参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogEx.ReturnResult">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogEx.EventId">
            <summary>
            事件Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogEx.ThreadId">
            <summary>
            线程Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogEx.TraceId">
            <summary>
            请求跟踪Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogEx.Exception">
            <summary>
            异常信息
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogEx.Message">
            <summary>
            日志消息Json
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysLogOp">
            <summary>
            系统操作日志表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogOp.HttpMethod">
            <summary>
            请求方式
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogOp.RequestUrl">
            <summary>
            请求地址
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogOp.RequestParam">
            <summary>
            请求参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogOp.ReturnResult">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogOp.EventId">
            <summary>
            事件Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogOp.ThreadId">
            <summary>
            线程Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogOp.TraceId">
            <summary>
            请求跟踪Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogOp.Exception">
            <summary>
            异常信息
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogOp.Message">
            <summary>
            日志消息Json
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysLogVis">
            <summary>
            系统访问日志表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogVis.ControllerName">
            <summary>
            模块名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogVis.ActionName">
             <summary>
             方法名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogVis.DisplayTitle">
             <summary>
             显示名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogVis.Status">
            <summary>
            执行状态
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogVis.RemoteIp">
            <summary>
            IP地址
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogVis.Location">
            <summary>
            登录地点
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogVis.Longitude">
            <summary>
            经度
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogVis.Latitude">
            <summary>
            维度
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogVis.Browser">
            <summary>
            浏览器
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogVis.Os">
            <summary>
            操作系统
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogVis.Elapsed">
            <summary>
            操作用时
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogVis.LogDateTime">
            <summary>
            日志时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogVis.LogLevel">
            <summary>
            日志级别
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogVis.Account">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysLogVis.RealName">
            <summary>
            真实姓名
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysMenu">
            <summary>
            系统菜单表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysMenu.Pid">
            <summary>
            父Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysMenu.Type">
            <summary>
            菜单类型（1目录 2菜单 3按钮）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysMenu.Name">
            <summary>
            路由名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysMenu.Path">
            <summary>
            路由地址
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysMenu.Component">
            <summary>
            组件路径
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysMenu.Redirect">
            <summary>
            重定向
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysMenu.Permission">
            <summary>
            权限标识
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysMenu.Title">
            <summary>
            菜单名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysMenu.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysMenu.IsIframe">
            <summary>
            是否内嵌
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysMenu.OutLink">
            <summary>
            外链链接
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysMenu.IsHide">
            <summary>
            是否隐藏
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysMenu.IsKeepAlive">
            <summary>
            是否缓存
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysMenu.IsAffix">
            <summary>
            是否固定
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysMenu.OrderNo">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysMenu.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysMenu.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysMenu.Children">
            <summary>
            菜单子项
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysNotice">
            <summary>
            系统通知公告表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysNotice.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysNotice.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysNotice.Type">
            <summary>
            类型（1通知 2公告）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysNotice.PublicUserId">
            <summary>
            发布人Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysNotice.PublicUserName">
            <summary>
            发布人姓名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysNotice.PublicOrgId">
            <summary>
            发布机构Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysNotice.PublicOrgName">
            <summary>
            发布机构名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysNotice.PublicTime">
            <summary>
            发布时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysNotice.CancelTime">
            <summary>
            撤回时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysNotice.Status">
            <summary>
            状态（0草稿 1发布 2撤回 3删除）
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysNoticeUser">
            <summary>
            系统通知公告用户表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysNoticeUser.NoticeId">
            <summary>
            通知公告Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysNoticeUser.SysNotice">
            <summary>
            通知公告
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysNoticeUser.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysNoticeUser.ReadTime">
            <summary>
            阅读时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysNoticeUser.ReadStatus">
            <summary>
            状态（0未读 1已读）
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysOnlineUser">
            <summary>
            系统在线用户表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOnlineUser.ConnectionId">
            <summary>
            连接Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOnlineUser.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOnlineUser.UserName">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOnlineUser.RealName">
            <summary>
            真实姓名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOnlineUser.Time">
            <summary>
            连接时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOnlineUser.Ip">
            <summary>
            连接IP
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOnlineUser.Browser">
            <summary>
            浏览器
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOnlineUser.Os">
            <summary>
            操作系统
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysOpenAccess">
            <summary>
            开放接口身份表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOpenAccess.AccessKey">
            <summary>
            身份标识
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOpenAccess.AccessSecret">
            <summary>
            密钥
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOpenAccess.BindTenantId">
            <summary>
            绑定租户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOpenAccess.BindTenant">
            <summary>
            绑定租户
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOpenAccess.BindUserId">
            <summary>
            绑定用户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOpenAccess.BindUser">
            <summary>
            绑定用户
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysOrg">
            <summary>
            系统机构表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOrg.Pid">
            <summary>
            父Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOrg.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOrg.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOrg.Level">
            <summary>
            级别
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOrg.Type">
            <summary>
            机构类型-数据字典
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOrg.DirectorId">
            <summary>
            负责人Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOrg.Director">
            <summary>
            负责人
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOrg.OrderNo">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOrg.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOrg.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOrg.Children">
            <summary>
            机构子项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysOrg.Disabled">
            <summary>
            是否禁止选中
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysPlugin">
            <summary>
            系统动态插件表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysPlugin.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysPlugin.CsharpCode">
            <summary>
            C#代码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysPlugin.AssemblyName">
            <summary>
            程序集名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysPlugin.OrderNo">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysPlugin.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysPlugin.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysPos">
            <summary>
            系统职位表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysPos.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysPos.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysPos.OrderNo">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysPos.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysPos.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysPos.UserList">
            <summary>
            在职人员
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysPrint">
            <summary>
            系统打印模板表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysPrint.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysPrint.Template">
            <summary>
            打印模板
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysPrint.PrintType">
            <summary>
            打印类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysPrint.ClientServiceAddress">
            <summary>
            客户端服务地址
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysPrint.PrintParam">
            <summary>
            打印参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysPrint.OrderNo">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysPrint.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysPrint.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysPrint.PrintDataDemo">
            <summary>
            打印预览测试数据
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysRegion">
            <summary>
            系统行政地区表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRegion.Pid">
            <summary>
            父Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRegion.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRegion.ShortName">
            <summary>
            简称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRegion.MergerName">
            <summary>
            组合名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRegion.Code">
            <summary>
            行政代码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRegion.ZipCode">
            <summary>
            邮政编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRegion.CityCode">
            <summary>
            区号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRegion.Level">
            <summary>
            层级
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRegion.PinYin">
            <summary>
            拼音
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRegion.Lng">
            <summary>
            经度
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRegion.Lat">
            <summary>
            维度
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRegion.OrderNo">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRegion.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRegion.Children">
            <summary>
            机构子项
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysRole">
            <summary>
            系统角色表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRole.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRole.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRole.OrderNo">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRole.DataScope">
            <summary>
            数据范围（1全部数据 2本部门及以下数据 3本部门数据 4仅本人数据 5自定义数据）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRole.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRole.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysRoleMenu">
            <summary>
            系统角色菜单表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRoleMenu.RoleId">
            <summary>
            角色Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRoleMenu.MenuId">
            <summary>
            菜单Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRoleMenu.SysMenu">
            <summary>
            菜单
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysRoleOrg">
            <summary>
            系统角色机构表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRoleOrg.RoleId">
            <summary>
            角色Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRoleOrg.OrgId">
            <summary>
            机构Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysRoleOrg.SysOrg">
            <summary>
            机构
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysSchedule">
            <summary>
            系统日程表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysSchedule.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysSchedule.ScheduleTime">
            <summary>
            日程日期
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysSchedule.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysSchedule.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysSchedule.Content">
            <summary>
            日程内容
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysSchedule.Status">
            <summary>
            完成状态
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysTemplate">
            <summary>
            系统模板表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTemplate.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTemplate.Type">
            <summary>
            分组名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTemplate.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTemplate.GroupName">
            <summary>
            分组名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTemplate.Content">
            <summary>
            模板内容
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTemplate.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTemplate.OrderNo">
            <summary>
            排序
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysTenant">
            <summary>
            系统租户表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenant.UserId">
            <summary>
            租管用户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenant.OrgId">
            <summary>
            机构Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenant.Host">
            <summary>
            域名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenant.TenantType">
            <summary>
            租户类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenant.DbType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenant.Connection">
            <summary>
            数据库连接
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenant.ConfigId">
            <summary>
            数据库标识
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenant.SlaveConnections">
            <summary>
            从库连接/读写分离
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenant.EnableReg">
            <summary>
            启用注册功能
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenant.RegWayId">
            <summary>
            默认注册方案Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenant.Logo">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenant.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenant.ViceTitle">
            <summary>
            副标题
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenant.ViceDesc">
            <summary>
            副描述
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenant.Watermark">
            <summary>
            水印
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenant.Copyright">
            <summary>
            版权信息
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenant.Icp">
            <summary>
            ICP备案号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenant.IcpUrl">
            <summary>
            ICP地址
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenant.OrderNo">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenant.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenant.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysTenantConfig">
            <summary>
            系统租户配置参数表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenantConfig.Value">
            <summary>
            无效字段，用于忽略实体类的Value字段
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysTenantConfigData">
            <summary>
            系统租户配置参数值表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenantConfigData.ConfigId">
            <summary>
            配置项Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenantConfigData.Value">
            <summary>
            参数值
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysTenantMenu">
            <summary>
            系统租户菜单表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenantMenu.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysTenantMenu.MenuId">
            <summary>
            菜单Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysUser">
            <summary>
            系统用户表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.Account">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.RealName">
            <summary>
            真实姓名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.Avatar">
            <summary>
            头像
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.Sex">
            <summary>
            性别-男_1、女_2
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.Age">
            <summary>
            年龄
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.Birthday">
            <summary>
            出生日期
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.Nation">
            <summary>
            民族
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.Phone">
            <summary>
            手机号码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.CardType">
            <summary>
            证件类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.IdCardNum">
            <summary>
            身份证号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.Address">
            <summary>
            地址
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.CultureLevel">
            <summary>
            文化程度
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.PoliticalOutlook">
            <summary>
            政治面貌
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.College">
            <summary>
            毕业院校
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.OfficePhone">
            <summary>
            办公电话
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.EmergencyContact">
            <summary>
            紧急联系人
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.EmergencyPhone">
            <summary>
            紧急联系人电话
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.EmergencyAddress">
            <summary>
            紧急联系人地址
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.Introduction">
            <summary>
            个人简介
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.OrderNo">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.AccountType">
            <summary>
            账号类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.SysOrg">
            <summary>
            直属机构
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.ManagerUserId">
            <summary>
            直属主管Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.ManagerUser">
            <summary>
            直属主管
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.PosId">
            <summary>
            职位Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.SysPos">
            <summary>
            职位
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.JobNum">
            <summary>
            工号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.PosLevel">
            <summary>
            职级
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.PosTitle">
            <summary>
            职称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.Expertise">
            <summary>
            擅长领域
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.OfficeZone">
            <summary>
            办公区域
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.Office">
            <summary>
            办公室
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.JoinDate">
            <summary>
            入职日期
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.LastLoginIp">
            <summary>
            最新登录Ip
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.LastLoginAddress">
            <summary>
            最新登录地点
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.LastLoginTime">
            <summary>
            最新登录时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.LastLoginDevice">
            <summary>
            最新登录设备
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUser.Signature">
            <summary>
            电子签名
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SysUser.ValidateIsSuperAdminAccountType(System.Nullable{Admin.NET.Core.ErrorCodeEnum})">
            <summary>
            验证超级管理员类型，若账号类型为超级管理员则报错
            </summary>
            <param name="errorMsg">自定义错误消息</param>
        </member>
        <member name="M:Admin.NET.Core.SysUser.ValidateIsUserId(System.Int64,System.Nullable{Admin.NET.Core.ErrorCodeEnum})">
            <summary>
            验证用户Id是否相同，若用户Id相同则报错
            </summary>
            <param name="userId">用户Id</param>
            <param name="errorMsg">自定义错误消息</param>
        </member>
        <member name="T:Admin.NET.Core.SysUserConfig">
            <summary>
            系统用户配置参数表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserConfig.Value">
            <summary>
            无效字段，用于忽略实体类的Value字段
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysUserConfigData">
            <summary>
            系统租户配置参数值表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserConfigData.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserConfigData.ConfigId">
            <summary>
            配置项Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserConfigData.Value">
            <summary>
            参数值
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysUserExtOrg">
            <summary>
            系统用户扩展机构表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserExtOrg.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserExtOrg.SysUser">
            <summary>
            用户
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserExtOrg.OrgId">
            <summary>
            机构Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserExtOrg.SysOrg">
            <summary>
            机构
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserExtOrg.PosId">
            <summary>
            职位Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserExtOrg.SysPos">
            <summary>
            职位
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserExtOrg.JobNum">
            <summary>
            工号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserExtOrg.PosLevel">
            <summary>
            职级
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserExtOrg.JoinDate">
            <summary>
            入职日期
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysUserLdap">
            <summary>
            系统用户域配置表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserLdap.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserLdap.Account">
            <summary>
            域账号
            AD域对应sAMAccountName
            Ldap对应uid
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserLdap.UserName">
            <summary>
            域用户名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserLdap.EmployeeId">
            <summary>
            对应EmployeeId(用于数据导入对照)
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserLdap.DeptCode">
            <summary>
            组织代码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserLdap.PwdLastSetTime">
            <summary>
            最后设置密码时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserLdap.Mail">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserLdap.AccountExpiresFlag">
            <summary>
            检查账户是否已过期
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserLdap.DontExpiresFlag">
            <summary>
            密码设置是否永不过期
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserLdap.Dn">
            <summary>
            DN
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysUserMenu">
            <summary>
            系统用户菜单快捷导航表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserMenu.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserMenu.SysUser">
            <summary>
            用户
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserMenu.MenuId">
            <summary>
            菜单Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserMenu.SysMenu">
            <summary>
            菜单
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysUserRegWay">
            <summary>
            系统用户注册方案表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserRegWay.Name">
            <summary>
            方案名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserRegWay.AccountType">
            <summary>
            账号类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserRegWay.RoleId">
            <summary>
            注册用户默认角色
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserRegWay.OrgId">
            <summary>
            注册用户默认机构
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserRegWay.PosId">
            <summary>
            注册用户默认职位
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserRegWay.OrderNo">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserRegWay.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysUserRole">
            <summary>
            系统用户角色表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserRole.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserRole.SysUser">
            <summary>
            用户
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserRole.RoleId">
            <summary>
            角色Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysUserRole.SysRole">
            <summary>
            角色
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysWechatPay">
            <summary>
            系统微信支付表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.MerchantId">
            <summary>
            微信商户号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.AppId">
            <summary>
            服务商AppId
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.OutTradeNumber">
            <summary>
            商户订单号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.TransactionId">
            <summary>
            支付订单号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.TradeType">
            <summary>
            交易类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.TradeState">
            <summary>
            交易状态
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.TradeStateDescription">
            <summary>
            交易状态描述
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.BankType">
            <summary>
            付款银行类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.Total">
            <summary>
            订单总金额
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.PayerTotal">
            <summary>
            用户支付金额
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.SuccessTime">
            <summary>
            支付完成时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.ExpireTime">
            <summary>
            交易结束时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.Description">
            <summary>
            商品描述
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.Scene">
            <summary>
            场景信息
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.Attachment">
            <summary>
            附加数据
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.GoodsTag">
            <summary>
            优惠标记
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.Settlement">
            <summary>
            结算信息
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.NotifyUrl">
            <summary>
            回调通知地址
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.OpenId">
            <summary>
            微信OpenId标识
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.Tags">
            <summary>
            业务标签，用来区分做什么业务
            </summary>
            <remarks>
            Tags标识用来区分这个支付记录对应什么业务从而确定相关联的表名，
            再结合BusinessId保存了对应的业务数据的ID，就可以确定这个支付
            记录与哪一条业务数据相关联
            </remarks>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.BusinessId">
            <summary>
            对应业务的主键
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.QrcodeContent">
            <summary>
            付款二维码内容
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.SysWechatUser">
            <summary>
            关联微信用户
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.SubMerchantId">
            <summary>
            子商户号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.SubAppId">
            <summary>
            子商户AppId
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatPay.SubOpenId">
            <summary>
            子商户唯一标识
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysWechatRefund">
            <summary>
            系统微信支付退款表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatRefund.WechatPayId">
            <summary>
            定单主键
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatRefund.OutRefundNumber">
            <summary>
            商户退款号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatRefund.TransactionId">
            <summary>
            退款订单号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatRefund.Reason">
            <summary>
            退款原因
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatRefund.Channel">
            <summary>
            退款渠道
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatRefund.UserReceivedAccount">
            <summary>
            退款入账账户
            </summary>
            <remarks>
            取当前退款单的退款入账方，有以下几种情况：
            1）退回银行卡：{银行名称}{卡类型}{ 卡尾号}
            2）退回支付用户零钱: 支付用户零钱
            3）退还商户: 商户基本账户商户结算银行账户
            4）退回支付用户零钱通: 支付用户零钱通
            </remarks>
        </member>
        <member name="P:Admin.NET.Core.SysWechatRefund.TradeState">
            <summary>
            退款状态
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatRefund.TradeStateDescription">
            <summary>
            交易状态描述
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatRefund.Refund">
            <summary>
            订单总金额
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatRefund.SuccessTime">
            <summary>
            支完成时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatRefund.NotifyUrl">
            <summary>
            回调通知地址
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatRefund.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysWechatUser">
            <summary>
            系统微信用户表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatUser.UserId">
            <summary>
            系统用户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatUser.SysUser">
            <summary>
            系统用户
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatUser.PlatformType">
            <summary>
            平台类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatUser.OpenId">
            <summary>
            OpenId
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatUser.SessionKey">
            <summary>
            会话密钥
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatUser.UnionId">
            <summary>
            UnionId
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatUser.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatUser.Avatar">
            <summary>
            头像
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatUser.Mobile">
            <summary>
            手机号码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatUser.Sex">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatUser.Language">
            <summary>
            语言
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatUser.City">
            <summary>
            城市
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatUser.Province">
            <summary>
            省
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatUser.Country">
            <summary>
            国家
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatUser.AccessToken">
            <summary>
            AccessToken
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatUser.RefreshToken">
            <summary>
            RefreshToken
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatUser.ExpiresIn">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SysWechatUser.Scope">
            <summary>
            用户授权的作用域，使用逗号分隔
            </summary>
        </member>
        <member name="T:Admin.NET.Core.AccountTypeEnum">
            <summary>
            账号类型枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.AccountTypeEnum.SuperAdmin">
            <summary>
            超级管理员
            </summary>
        </member>
        <member name="F:Admin.NET.Core.AccountTypeEnum.SysAdmin">
            <summary>
            系统管理员
            </summary>
        </member>
        <member name="F:Admin.NET.Core.AccountTypeEnum.NormalUser">
            <summary>
            普通账号
            </summary>
        </member>
        <member name="F:Admin.NET.Core.AccountTypeEnum.Member">
            <summary>
            会员
            </summary>
        </member>
        <member name="T:Admin.NET.Core.AlipayCertTypeEnum">
            <summary>
            参与方的证件类型枚举
            </summary>
        </member>
        <member name="T:Admin.NET.Core.AlipayIdentityTypeEnum">
            <summary>
            参与方的标识类型枚举
            </summary>
        </member>
        <member name="T:Admin.NET.Core.CacheTypeEnum">
            <summary>
            缓存类型枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheTypeEnum.Memory">
            <summary>
            内存缓存
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CacheTypeEnum.Redis">
            <summary>
            Redis缓存
            </summary>
        </member>
        <member name="T:Admin.NET.Core.CardTypeEnum">
            <summary>
            证件类型枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CardTypeEnum.IdCard">
            <summary>
            身份证
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CardTypeEnum.PassportCard">
            <summary>
            护照
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CardTypeEnum.BirthCard">
            <summary>
            出生证
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CardTypeEnum.GatCard">
            <summary>
            港澳台通行证
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CardTypeEnum.ForeignCard">
            <summary>
            外国人居留证
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CardTypeEnum.License">
            <summary>
            营业执照
            </summary>
        </member>
        <member name="T:Admin.NET.Core.CryptogramEnum">
            <summary>
            密码加密枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CryptogramEnum.MD5">
            <summary>
            MD5
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CryptogramEnum.SM2">
            <summary>
            SM2（国密）
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CryptogramEnum.SM4">
            <summary>
            SM4（国密）
            </summary>
        </member>
        <member name="T:Admin.NET.Core.CultureLevelEnum">
            <summary>
            文化程度枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CultureLevelEnum.Level0">
            <summary>
            其他
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CultureLevelEnum.Level1">
            <summary>
            文盲
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CultureLevelEnum.Level2">
            <summary>
            小学
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CultureLevelEnum.Level3">
            <summary>
            初中
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CultureLevelEnum.Level4">
            <summary>
            普通高中
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CultureLevelEnum.Level5">
            <summary>
            技工学校
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CultureLevelEnum.Level6">
            <summary>
            职业教育
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CultureLevelEnum.Level7">
            <summary>
            职业高中
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CultureLevelEnum.Level8">
            <summary>
            中等专科
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CultureLevelEnum.Level9">
            <summary>
            大学专科
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CultureLevelEnum.Level10">
            <summary>
            大学本科
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CultureLevelEnum.Level11">
            <summary>
            硕士研究生
            </summary>
        </member>
        <member name="F:Admin.NET.Core.CultureLevelEnum.Level12">
            <summary>
            博士研究生
            </summary>
        </member>
        <member name="T:Admin.NET.Core.DataOpTypeEnum">
            <summary>
            数据操作类型枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.DataOpTypeEnum.Other">
            <summary>
            其它
            </summary>
        </member>
        <member name="F:Admin.NET.Core.DataOpTypeEnum.Add">
            <summary>
            增加
            </summary>
        </member>
        <member name="F:Admin.NET.Core.DataOpTypeEnum.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:Admin.NET.Core.DataOpTypeEnum.Edit">
            <summary>
            编辑
            </summary>
        </member>
        <member name="F:Admin.NET.Core.DataOpTypeEnum.Update">
            <summary>
            更新
            </summary>
        </member>
        <member name="F:Admin.NET.Core.DataOpTypeEnum.Query">
            <summary>
            查询
            </summary>
        </member>
        <member name="F:Admin.NET.Core.DataOpTypeEnum.Detail">
            <summary>
            详情
            </summary>
        </member>
        <member name="F:Admin.NET.Core.DataOpTypeEnum.Tree">
            <summary>
            树
            </summary>
        </member>
        <member name="F:Admin.NET.Core.DataOpTypeEnum.Import">
            <summary>
            导入
            </summary>
        </member>
        <member name="F:Admin.NET.Core.DataOpTypeEnum.Export">
            <summary>
            导出
            </summary>
        </member>
        <member name="F:Admin.NET.Core.DataOpTypeEnum.Grant">
            <summary>
            授权
            </summary>
        </member>
        <member name="F:Admin.NET.Core.DataOpTypeEnum.Force">
            <summary>
            强退
            </summary>
        </member>
        <member name="F:Admin.NET.Core.DataOpTypeEnum.Clean">
            <summary>
            清空
            </summary>
        </member>
        <member name="T:Admin.NET.Core.DataScopeEnum">
            <summary>
            角色数据范围枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.DataScopeEnum.All">
            <summary>
            全部数据
            </summary>
        </member>
        <member name="F:Admin.NET.Core.DataScopeEnum.DeptChild">
            <summary>
            本部门及以下数据
            </summary>
        </member>
        <member name="F:Admin.NET.Core.DataScopeEnum.Dept">
            <summary>
            本部门数据
            </summary>
        </member>
        <member name="F:Admin.NET.Core.DataScopeEnum.Self">
            <summary>
            仅本人数据
            </summary>
        </member>
        <member name="F:Admin.NET.Core.DataScopeEnum.Define">
            <summary>
            自定义数据
            </summary>
        </member>
        <member name="T:Admin.NET.Core.ElasticSearchAuthTypeEnum">
            <summary>
            ES认证类型枚举
            <para>https://www.elastic.co/guide/en/elasticsearch/client/net-api/current/_options_on_elasticsearchclientsettings.html</para>
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ElasticSearchAuthTypeEnum.Basic">
            <summary>
            BasicAuthentication
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ElasticSearchAuthTypeEnum.ApiKey">
            <summary>
            ApiKey
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ElasticSearchAuthTypeEnum.Base64ApiKey">
            <summary>
            Base64ApiKey
            </summary>
        </member>
        <member name="T:Admin.NET.Core.ErrorCodeEnum">
            <summary>
            系统错误码
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D0008">
            <summary>
            验证码错误
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D0009">
            <summary>
            账号不存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D0010">
            <summary>
            密匙不匹配
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1000">
            <summary>
            密码不正确
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1001">
            <summary>
            非法操作！禁止删除自己
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1002">
            <summary>
            记录不存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1003">
            <summary>
            账号已存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1004">
            <summary>
            旧密码不匹配
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1005">
            <summary>
            测试数据禁止更改admin密码
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1006">
            <summary>
            数据已存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1007">
            <summary>
            数据不存在或含有关联引用，禁止删除
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1008">
            <summary>
            禁止为管理员分配角色
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1009">
            <summary>
            重复数据或记录含有不存在数据
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1010">
            <summary>
            禁止为超级管理员角色分配权限
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1011">
            <summary>
            非法操作，未登录
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1012">
            <summary>
            Id不能为空
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1013">
            <summary>
            所属机构不在自己的数据范围内
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1014">
            <summary>
            禁止删除超级管理员
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1015">
            <summary>
            禁止修改超级管理员状态
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1016">
            <summary>
            没有权限
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1017">
            <summary>
            账号已冻结
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1019">
            <summary>
            该租户下角色菜单权限集为空
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1023">
            <summary>
            禁止删除默认租户
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1024">
            <summary>
            已将其他地方登录账号下线
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1025">
            <summary>
            此角色下面存在账号禁止删除
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1026">
            <summary>
            禁止修改本人账号状态
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1027">
            <summary>
            密码错误次数过多，账号已锁定，请半小时后重试！
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1028">
            <summary>
            新密码不能与旧密码相同
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1029">
            <summary>
            系统默认账号禁止删除
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1030">
            <summary>
            开放接口绑定账号禁止删除
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1031">
            <summary>
            开放接口绑定租户禁止删除
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1032">
            <summary>
            手机号已存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1033">
            <summary>
            此角色下存在注册方案禁止删除
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1034">
            <summary>
            注册功能未开启禁止注册
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1035">
            <summary>
            注册方案不存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1036">
            <summary>
            角色不存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1037">
            <summary>
            禁止注册超级管理员和系统管理员
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1038">
            <summary>
            禁止越权操作系统账户
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D2000">
            <summary>
            父机构不存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D2001">
            <summary>
            当前机构Id不能与父机构Id相同
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D2002">
            <summary>
            已有相同组织机构,编码或名称相同
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D2003">
            <summary>
            没有权限操作机构
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D2004">
            <summary>
            该机构下有用户禁止删除
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D2005">
            <summary>
            附属机构下有用户禁止删除
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D2006">
            <summary>
            只能增加下级机构
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D2007">
            <summary>
            下级机构下有用户禁止删除
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D2008">
            <summary>
            系统默认机构禁止删除
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D2009">
            <summary>
            禁止增加根节点机构
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D2010">
            <summary>
            此机构下存在注册方案禁止删除
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D2011">
            <summary>
            机构不存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D2012">
            <summary>
            系统默认机构禁止修改
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D3000">
            <summary>
            字典类型不存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D3001">
            <summary>
            字典类型已存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D3002">
            <summary>
            字典类型下面有字典值禁止删除
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D3003">
            <summary>
            字典值已存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D3004">
            <summary>
            字典值不存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D3005">
            <summary>
            字典状态错误
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D3006">
            <summary>
            字典编码不能以Enum结尾
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D3007">
            <summary>
            禁止修改枚举类型的字典编码
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D3008">
            <summary>
            禁止迁移枚举字典
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D3009">
            <summary>
            字典已在该租户禁止迁移
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D3010">
            <summary>
            非超管用户禁止操作系统字典
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D3011">
            <summary>
            获取字典值集合入参有误
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D3012">
            <summary>
            禁止修改租户字典状态
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D4000">
            <summary>
            菜单已存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D4001">
            <summary>
            路由地址为空
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D4002">
            <summary>
            打开方式为空
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D4003">
            <summary>
            权限标识格式为空
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D4004">
            <summary>
            权限标识格式错误
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D4005">
            <summary>
            权限不存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D4006">
            <summary>
            父级菜单不能为当前节点，请重新选择父级菜单
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D4007">
            <summary>
            不能移动根节点
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D4008">
            <summary>
            禁止本节点与父节点相同
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D4009">
            <summary>
            路由名称重复
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D4010">
            <summary>
            父节点不能为按钮类型
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D4011">
            <summary>
            租户不能为空
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D4012">
            <summary>
            系统菜单禁止修改
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D4013">
            <summary>
            系统菜单禁止删除
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D5000">
            <summary>
            已存在同名或同编码应用
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D5001">
            <summary>
            默认激活系统只能有一个
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D5002">
            <summary>
            该应用下有菜单禁止删除
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D5003">
            <summary>
            已存在同名或同编码应用
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D6000">
            <summary>
            已存在同名或同编码职位
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D6001">
            <summary>
            该职位下有用户禁止删除
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D6002">
            <summary>
            无权修改本职位
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D6003">
            <summary>
            职位不存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D6004">
            <summary>
            此职位下存在注册方案禁止删除
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D7000">
            <summary>
            通知公告状态错误
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D7001">
            <summary>
            通知公告删除失败
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D7002">
            <summary>
            通知公告编辑失败
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D7003">
            <summary>
            通知公告操作失败，非发布者不能进行操作
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D8000">
            <summary>
            文件不存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D8001">
            <summary>
            不允许的文件类型
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D8002">
            <summary>
            文件超过允许大小
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D8003">
            <summary>
            文件后缀错误
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D8004">
            <summary>
            文件已存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D8005">
            <summary>
            无效的文件名
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D9000">
            <summary>
            已存在同名或同编码参数配置
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D9001">
            <summary>
            禁止删除系统参数
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1100">
            <summary>
            已存在同名任务调度
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1101">
            <summary>
            任务调度不存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1200">
            <summary>
            演示环境禁止修改数据
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1300">
            <summary>
            已存在同名的租户
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1301">
            <summary>
            已存在同名的租户管理员
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1302">
            <summary>
            租户从库配置错误
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1303">
            <summary>
            已存在同名的租户域名
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1304">
            <summary>
            授权菜单存在重复项
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1400">
            <summary>
            该表代码模板已经生成过
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1401">
            <summary>
            数据库配置不存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1501">
            <summary>
            该类型不存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1502">
            <summary>
            该字段不存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1503">
            <summary>
            该类型不是枚举类型
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1504">
            <summary>
            该实体不存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1505">
            <summary>
            父菜单不存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1600">
            <summary>
            父资源不存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1601">
            <summary>
            当前资源Id不能与父资源Id相同
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1602">
            <summary>
            已有相同编码或名称
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1701">
            <summary>
            脚本代码不能为空
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1702">
            <summary>
            脚本代码中的作业类，需要定义 [JobDetail] 特性
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1703">
            <summary>
            作业编号需要与脚本代码中的作业类 [JobDetail('jobId')] 一致
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1704">
            <summary>
            禁止修改作业编号
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1705">
            <summary>
            执行作业失败
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1800">
            <summary>
            已存在同名打印模板
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D1900">
            <summary>
            已存在同名功能或同名程序及插件
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.D2101">
            <summary>
            注册方案名称已存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.T1000">
            <summary>
            已存在同名模板
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.T1001">
            <summary>
            已存在相同编码模板
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.A1001">
            <summary>
            禁止删除存在关联租户的应用
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.A1002">
            <summary>
            禁止删除存在关联菜单的应用
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.A1000">
            <summary>
            找不到系统应用
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.xg1000">
            <summary>
            已存在同名或同编码项目
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.xg1001">
            <summary>
            已存在相同证件号码人员
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.xg1002">
            <summary>
            检测数据不存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.db1000">
            <summary>
            请添加数据列
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.db1001">
            <summary>
            数据表不存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.db1002">
            <summary>
            数据表不存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.db1003">
            <summary>
            实体文件不存在或匹配不到。如果是刚刚生成的实体，请重启服务后再试
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.R2000">
            <summary>
            父节点不存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.R2001">
            <summary>
            当前节点Id不能与父节点Id相同
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.R2002">
            <summary>
            已有相同编码或名称
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.R2003">
            <summary>
            行政区代码只能为6、9或12位
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.R2004">
            <summary>
            父节点不能为自己的子节点
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.R2005">
            <summary>
            同步国家统计局数据异常,请稍后重试
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.Z1001">
            <summary>
            默认租户状态禁止修改
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.Z1002">
            <summary>
            禁止创建此类型的数据库
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.Z1003">
            <summary>
            租户不存在或已禁用
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.Z1004">
            <summary>
            租户库连接不能为空
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.O1000">
            <summary>
            身份标识已存在
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ErrorCodeEnum.SA001">
            <summary>
            禁止非超级管理员操作
            </summary>
        </member>
        <member name="T:Admin.NET.Core.FilterLogicEnum">
            <summary>
            过滤条件
            </summary>
        </member>
        <member name="F:Admin.NET.Core.FilterLogicEnum.And">
            <summary>
            并且
            </summary>
        </member>
        <member name="F:Admin.NET.Core.FilterLogicEnum.Or">
            <summary>
            或者
            </summary>
        </member>
        <member name="F:Admin.NET.Core.FilterLogicEnum.Xor">
            <summary>
            异或
            </summary>
        </member>
        <member name="T:Admin.NET.Core.FilterOperatorEnum">
            <summary>
            过滤逻辑运算符
            </summary>
        </member>
        <member name="F:Admin.NET.Core.FilterOperatorEnum.EQ">
            <summary>
            等于(=)
            </summary>
        </member>
        <member name="F:Admin.NET.Core.FilterOperatorEnum.NEQ">
            <summary>
            不等于(!=)
            </summary>
        </member>
        <member name="F:Admin.NET.Core.FilterOperatorEnum.LT">
            <summary>
            小于<![CDATA[ < ]]>
            </summary>
        </member>
        <member name="F:Admin.NET.Core.FilterOperatorEnum.LTE">
            <summary>
            小于等于<![CDATA[ <= ]]>
            </summary>
        </member>
        <member name="F:Admin.NET.Core.FilterOperatorEnum.GT">
            <summary>
            大于(>)
            </summary>
        </member>
        <member name="F:Admin.NET.Core.FilterOperatorEnum.GTE">
            <summary>
            大于等于(>=)
            </summary>
        </member>
        <member name="F:Admin.NET.Core.FilterOperatorEnum.StartsWith">
            <summary>
            开始包含
            </summary>
        </member>
        <member name="F:Admin.NET.Core.FilterOperatorEnum.EndsWith">
            <summary>
            末尾包含
            </summary>
        </member>
        <member name="F:Admin.NET.Core.FilterOperatorEnum.Contains">
            <summary>
            包含
            </summary>
        </member>
        <member name="T:Admin.NET.Core.FinishStatusEnum">
            <summary>
            完成状态枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.FinishStatusEnum.Finish">
            <summary>
            已完成
            </summary>
        </member>
        <member name="F:Admin.NET.Core.FinishStatusEnum.UnFinish">
            <summary>
            未完成
            </summary>
        </member>
        <member name="T:Admin.NET.Core.GenderEnum">
            <summary>
            性别枚举（GB/T 2261.1-2003）
            </summary>
        </member>
        <member name="F:Admin.NET.Core.GenderEnum.Unknown">
            <summary>
            未知的性别
            </summary>
        </member>
        <member name="F:Admin.NET.Core.GenderEnum.Male">
            <summary>
            男性
            </summary>
        </member>
        <member name="F:Admin.NET.Core.GenderEnum.Female">
            <summary>
            女性
            </summary>
        </member>
        <member name="F:Admin.NET.Core.GenderEnum.Unspecified">
            <summary>
            未说明的性别
            </summary>
        </member>
        <member name="T:Admin.NET.Core.HttpMethodEnum">
            <summary>
            HTTP请求方法枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.HttpMethodEnum.Get">
            <summary>
             HTTP "GET" method.
            </summary>
        </member>
        <member name="F:Admin.NET.Core.HttpMethodEnum.Post">
            <summary>
             HTTP "POST" method.
            </summary>
        </member>
        <member name="F:Admin.NET.Core.HttpMethodEnum.Put">
            <summary>
            HTTP "PUT" method.
            </summary>
        </member>
        <member name="F:Admin.NET.Core.HttpMethodEnum.Delete">
            <summary>
            HTTP "DELETE" method.
            </summary>
        </member>
        <member name="F:Admin.NET.Core.HttpMethodEnum.Patch">
            <summary>
            HTTP "PATCH" method.
            </summary>
        </member>
        <member name="F:Admin.NET.Core.HttpMethodEnum.Head">
            <summary>
            HTTP "HEAD" method.
            </summary>
        </member>
        <member name="F:Admin.NET.Core.HttpMethodEnum.Options">
            <summary>
            HTTP "OPTIONS" method.
            </summary>
        </member>
        <member name="F:Admin.NET.Core.HttpMethodEnum.Trace">
            <summary>
            HTTP "TRACE" method.
            </summary>
        </member>
        <member name="F:Admin.NET.Core.HttpMethodEnum.Connect">
            <summary>
             HTTP "CONNECT" method.
            </summary>
        </member>
        <member name="T:Admin.NET.Core.JobCreateTypeEnum">
            <summary>
            作业创建类型枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.JobCreateTypeEnum.BuiltIn">
            <summary>
            内置
            </summary>
        </member>
        <member name="F:Admin.NET.Core.JobCreateTypeEnum.Script">
            <summary>
            脚本
            </summary>
        </member>
        <member name="F:Admin.NET.Core.JobCreateTypeEnum.Http">
            <summary>
            HTTP请求
            </summary>
        </member>
        <member name="T:Admin.NET.Core.JobStatusEnum">
            <summary>
            岗位状态枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.JobStatusEnum.On">
            <summary>
            在职
            </summary>
        </member>
        <member name="F:Admin.NET.Core.JobStatusEnum.Off">
            <summary>
            离职
            </summary>
        </member>
        <member name="F:Admin.NET.Core.JobStatusEnum.Leave">
            <summary>
            请假
            </summary>
        </member>
        <member name="F:Admin.NET.Core.JobStatusEnum.Other">
            <summary>
            其他
            </summary>
        </member>
        <member name="T:Admin.NET.Core.LoginModeEnum">
            <summary>
            登录模式枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.LoginModeEnum.PC">
            <summary>
            PC模式
            </summary>
        </member>
        <member name="F:Admin.NET.Core.LoginModeEnum.APP">
            <summary>
            APP
            </summary>
        </member>
        <member name="T:Admin.NET.Core.LoginTypeEnum">
            <summary>
            登录类型枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.LoginTypeEnum.Login">
            <summary>
            PC登录
            </summary>
        </member>
        <member name="F:Admin.NET.Core.LoginTypeEnum.Logout">
            <summary>
            PC退出
            </summary>
        </member>
        <member name="F:Admin.NET.Core.LoginTypeEnum.Register">
            <summary>
            PC注册
            </summary>
        </member>
        <member name="T:Admin.NET.Core.MaritalStatusEnum">
            <summary>
            婚姻状况枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.MaritalStatusEnum.UnMarried">
            <summary>
            未婚
            </summary>
        </member>
        <member name="F:Admin.NET.Core.MaritalStatusEnum.Married">
            <summary>
            已婚
            </summary>
        </member>
        <member name="F:Admin.NET.Core.MaritalStatusEnum.Divorce">
            <summary>
            离异
            </summary>
        </member>
        <member name="F:Admin.NET.Core.MaritalStatusEnum.Remarry">
            <summary>
            再婚
            </summary>
        </member>
        <member name="F:Admin.NET.Core.MaritalStatusEnum.Widowed">
            <summary>
            丧偶
            </summary>
        </member>
        <member name="F:Admin.NET.Core.MaritalStatusEnum.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="T:Admin.NET.Core.MenuTypeEnum">
            <summary>
            系统菜单类型枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.MenuTypeEnum.Dir">
            <summary>
            目录
            </summary>
        </member>
        <member name="F:Admin.NET.Core.MenuTypeEnum.Menu">
            <summary>
            菜单
            </summary>
        </member>
        <member name="F:Admin.NET.Core.MenuTypeEnum.Btn">
            <summary>
            按钮
            </summary>
        </member>
        <member name="T:Admin.NET.Core.MessageTypeEnum">
            <summary>
            消息类型枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.MessageTypeEnum.Info">
            <summary>
            普通信息
            </summary>
        </member>
        <member name="F:Admin.NET.Core.MessageTypeEnum.Success">
            <summary>
            成功提示
            </summary>
        </member>
        <member name="F:Admin.NET.Core.MessageTypeEnum.Warning">
            <summary>
            警告提示
            </summary>
        </member>
        <member name="F:Admin.NET.Core.MessageTypeEnum.Error">
            <summary>
            错误提示
            </summary>
        </member>
        <member name="T:Admin.NET.Core.NationEnum">
            <summary>
            民族枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.HanZu">
            <summary>
            汉族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.ZhuangZu">
            <summary>
            壮族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.ManZu">
            <summary>
            满族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.HuiZu">
            <summary>
            回族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.MiaoZu">
            <summary>
            苗族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.WeiWuErZu">
            <summary>
            维吾尔族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.TuJiaZu">
            <summary>
            土家族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.YiZu">
            <summary>
            彝族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.MengGuZu">
            <summary>
            蒙古族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.ZangZu">
            <summary>
            藏族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.BuYiZu">
            <summary>
            布依族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.DongZu">
            <summary>
            侗族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.YaoZu">
            <summary>
            瑶族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.ChaoXianZu">
            <summary>
            朝鲜族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.BaiZu">
            <summary>
            白族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.HaNiZu">
            <summary>
            哈尼族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.HaSaKeZu">
            <summary>
            哈萨克族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.LiZu">
            <summary>
            黎族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.DaiZu">
            <summary>
            傣族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.SheZu">
            <summary>
            畲族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.LiSuZu">
            <summary>
            傈僳族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.GeLaoZu">
            <summary>
            仡佬族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.LaHuZu">
            <summary>
            拉祜族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.DongXiangZu">
            <summary>
            东乡族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.NaXiZu">
            <summary>
            纳西族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.JingPoZu">
            <summary>
            景颇族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.KeErKeZiZu">
            <summary>
            柯尔克孜族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.TuZu">
            <summary>
            土族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.DaWoErZu">
            <summary>
            达斡尔族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.MuLaoZu">
            <summary>
            仫佬族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.QiangZu">
            <summary>
            羌族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.BuLangZu">
            <summary>
            布朗族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.SaLaZu">
            <summary>
            撒拉族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.MaoNanZu">
            <summary>
            毛南族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.GeZu">
            <summary>
            仡族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.XiBoZu">
            <summary>
            锡伯族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.AChangZu">
            <summary>
            阿昌族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.PuMiZu">
            <summary>
            普米族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.TaJiKeZu">
            <summary>
            塔吉克族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.NuZu">
            <summary>
            怒族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.WuZiBieKeZu">
            <summary>
            乌孜别克族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.ELuoSiZu">
            <summary>
            俄罗斯族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.EwenKeZu">
            <summary>
            鄂温克族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.DeAngZu">
            <summary>
            德昂族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.BaoAnZu">
            <summary>
            保安族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.YuGuZu">
            <summary>
            裕固族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.JingZu">
            <summary>
            京族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.TaTaErZu">
            <summary>
            塔塔尔族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.DuLongZu">
            <summary>
            独龙族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.ELunChunZu">
            <summary>
            鄂伦春族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.HeZheZu">
            <summary>
            赫哲族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.MenBaZu">
            <summary>
            门巴族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.LuoBaZu">
            <summary>
            珞巴族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.GaoShanZu">
            <summary>
            高山族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.WaZu">
            <summary>
            佤族
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NationEnum.JiNuoZu">
            <summary>
            基诺族
            </summary>
        </member>
        <member name="T:Admin.NET.Core.NoticeStatusEnum">
            <summary>
            通知公告状态枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NoticeStatusEnum.DRAFT">
            <summary>
            草稿
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NoticeStatusEnum.PUBLIC">
            <summary>
            发布
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NoticeStatusEnum.CANCEL">
            <summary>
            撤回
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NoticeStatusEnum.DELETED">
            <summary>
            删除
            </summary>
        </member>
        <member name="T:Admin.NET.Core.NoticeTypeEnum">
            <summary>
            通知公告状类型枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NoticeTypeEnum.NOTICE">
            <summary>
            通知
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NoticeTypeEnum.ANNOUNCEMENT">
            <summary>
            公告
            </summary>
        </member>
        <member name="T:Admin.NET.Core.NoticeUserStatusEnum">
            <summary>
            通知公告用户状态枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NoticeUserStatusEnum.UNREAD">
            <summary>
            未读
            </summary>
        </member>
        <member name="F:Admin.NET.Core.NoticeUserStatusEnum.READ">
            <summary>
            已读
            </summary>
        </member>
        <member name="T:Admin.NET.Core.PlatformTypeEnum">
            <summary>
            平台类型枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.PlatformTypeEnum.微信公众号">
            <summary>
            微信公众号
            </summary>
        </member>
        <member name="F:Admin.NET.Core.PlatformTypeEnum.微信小程序">
            <summary>
            微信小程序
            </summary>
        </member>
        <member name="F:Admin.NET.Core.PlatformTypeEnum.QQ">
            <summary>
            QQ
            </summary>
        </member>
        <member name="F:Admin.NET.Core.PlatformTypeEnum.Alipay">
            <summary>
            支付宝
            </summary>
        </member>
        <member name="F:Admin.NET.Core.PlatformTypeEnum.Gitee">
            <summary>
            Gitee
            </summary>
        </member>
        <member name="T:Admin.NET.Core.PrintTypeEnum">
            <summary>
            打印类型枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.PrintTypeEnum.Browser">
            <summary>
            浏览器打印
            </summary>
        </member>
        <member name="F:Admin.NET.Core.PrintTypeEnum.Client">
            <summary>
            浏览器打印
            </summary>
        </member>
        <member name="T:Admin.NET.Core.RequestTypeEnum">
            <summary>
            HTTP请求类型
            </summary>
        </member>
        <member name="F:Admin.NET.Core.RequestTypeEnum.Run">
            <summary>
            执行内部方法
            </summary>
        </member>
        <member name="F:Admin.NET.Core.RequestTypeEnum.Get">
            <summary>
            GET
            </summary>
        </member>
        <member name="F:Admin.NET.Core.RequestTypeEnum.Post">
            <summary>
            POST
            </summary>
        </member>
        <member name="F:Admin.NET.Core.RequestTypeEnum.Put">
            <summary>
            PUT
            </summary>
        </member>
        <member name="F:Admin.NET.Core.RequestTypeEnum.Delete">
            <summary>
            DELETE
            </summary>
        </member>
        <member name="T:Admin.NET.Core.StatusEnum">
            <summary>
            通用状态枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.StatusEnum.Enable">
            <summary>
            启用
            </summary>
        </member>
        <member name="F:Admin.NET.Core.StatusEnum.Disable">
            <summary>
            停用
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysUserEventTypeEnum">
            <summary>
            事件类型-系统用户操作枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.SysUserEventTypeEnum.Add">
            <summary>
            增加用户
            </summary>
        </member>
        <member name="F:Admin.NET.Core.SysUserEventTypeEnum.Update">
            <summary>
            更新用户
            </summary>
        </member>
        <member name="F:Admin.NET.Core.SysUserEventTypeEnum.UpdateRole">
            <summary>
            授权用户角色
            </summary>
        </member>
        <member name="F:Admin.NET.Core.SysUserEventTypeEnum.Delete">
            <summary>
            删除用户
            </summary>
        </member>
        <member name="F:Admin.NET.Core.SysUserEventTypeEnum.SetStatus">
            <summary>
            设置用户状态
            </summary>
        </member>
        <member name="F:Admin.NET.Core.SysUserEventTypeEnum.ChangePwd">
            <summary>
            修改密码
            </summary>
        </member>
        <member name="F:Admin.NET.Core.SysUserEventTypeEnum.ResetPwd">
            <summary>
            重置密码
            </summary>
        </member>
        <member name="F:Admin.NET.Core.SysUserEventTypeEnum.UnlockLogin">
            <summary>
            解除登录锁定
            </summary>
        </member>
        <member name="F:Admin.NET.Core.SysUserEventTypeEnum.Register">
            <summary>
            注册用户
            </summary>
        </member>
        <member name="F:Admin.NET.Core.SysUserEventTypeEnum.Login">
            <summary>
            用户登录
            </summary>
        </member>
        <member name="F:Admin.NET.Core.SysUserEventTypeEnum.LoginOut">
            <summary>
            用户退出
            </summary>
        </member>
        <member name="F:Admin.NET.Core.SysUserEventTypeEnum.RefreshToken">
            <summary>
            RefreshToken
            </summary>
        </member>
        <member name="T:Admin.NET.Core.TemplateTypeEnum">
            <summary>
            消息模板类型枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.TemplateTypeEnum.Notice">
            <summary>
            通知公告
            </summary>
        </member>
        <member name="F:Admin.NET.Core.TemplateTypeEnum.SMS">
            <summary>
            短信
            </summary>
        </member>
        <member name="F:Admin.NET.Core.TemplateTypeEnum.Email">
            <summary>
            邮件
            </summary>
        </member>
        <member name="F:Admin.NET.Core.TemplateTypeEnum.Wechat">
            <summary>
            微信
            </summary>
        </member>
        <member name="F:Admin.NET.Core.TemplateTypeEnum.DingTalk">
            <summary>
            钉钉
            </summary>
        </member>
        <member name="F:Admin.NET.Core.TemplateTypeEnum.WeChatWork">
            <summary>
            企业微信
            </summary>
        </member>
        <member name="T:Admin.NET.Core.TenantTypeEnum">
            <summary>
            租户类型枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.TenantTypeEnum.Id">
            <summary>
            Id隔离
            </summary>
        </member>
        <member name="F:Admin.NET.Core.TenantTypeEnum.Db">
            <summary>
            库隔离
            </summary>
        </member>
        <member name="T:Admin.NET.Core.WechatReturnCodeEnum">
            <summary>
            微信开发返回码
            </summary>
        </member>
        <member name="F:Admin.NET.Core.WechatReturnCodeEnum.不合法的凭证类型">
            <summary>
            <para>公众号：不合法的凭证类型</para>
            <para>小程序：暂无生成权限</para>
            </summary>
        </member>
        <member name="F:Admin.NET.Core.WechatReturnCodeEnum.不合法的APPID">
            <summary>
            <para>微信：不合法的APPID</para>
            <para>小程序：生成权限被封禁</para>
            </summary>
        </member>
        <member name="F:Admin.NET.Core.WechatReturnCodeEnum.输入参数有误">
            <summary>
            <para>公众号：输入参数有误</para>
            <para>小程序：参数expire_time填写错误</para>
            </summary>
        </member>
        <member name="F:Admin.NET.Core.WechatReturnCodeEnum.用户拒绝接受消息">
            <summary>[小程序订阅消息]用户拒绝接受消息，如果用户之前曾经订阅过，则表示用户取消了订阅关系</summary>
        </member>
        <member name="F:Admin.NET.Core.WechatReturnCodeEnum.模板参数不准确">
            <summary>[小程序订阅消息]模板参数不准确，可能为空或者不满足规则，errmsg会提示具体是哪个字段出错</summary>
        </member>
        <member name="F:Admin.NET.Core.WechatReturnCodeEnum.客服帐号名长度超过限制">
            <summary>
            客服帐号名长度超过限制(仅允许10个英文字符，不包括@及@后的公众号的微信号)(invalid kf_acount length)
            </summary>
        </member>
        <member name="F:Admin.NET.Core.WechatReturnCodeEnum.客服帐号名包含非法字符">
            <summary>
            客服帐号名包含非法字符(仅允许英文+数字)(illegal character in kf_account)
            </summary>
        </member>
        <member name="F:Admin.NET.Core.WechatReturnCodeEnum.客服帐号个数超过限制">
            <summary>客服帐号个数超过限制(10个客服账号)(kf_account count exceeded)</summary>
        </member>
        <member name="F:Admin.NET.Core.WechatReturnCodeEnum.签名错误">
            <summary>
            小程序为“签名错误”。对应公众号： 87009, “errmsg” : “reply is not exists” //该回复不存在
            </summary>
        </member>
        <member name="T:Admin.NET.Core.YesNoEnum">
            <summary>
            是否枚举
            </summary>
        </member>
        <member name="F:Admin.NET.Core.YesNoEnum.Y">
            <summary>
            是
            </summary>
        </member>
        <member name="F:Admin.NET.Core.YesNoEnum.N">
            <summary>
            否
            </summary>
        </member>
        <member name="T:Admin.NET.Core.AppEventSubscriber">
            <summary>
            事件订阅
            </summary>
        </member>
        <member name="M:Admin.NET.Core.AppEventSubscriber.CreateExLog(Furion.EventBus.EventHandlerExecutingContext)">
            <summary>
            增加异常日志
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.AppEventSubscriber.SendOrderErrorMail(Furion.EventBus.EventHandlerExecutingContext)">
            <summary>
            发送异常邮件
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.AppEventSubscriber.Dispose">
            <summary>
            释放服务作用域
            </summary>
        </member>
        <member name="T:Admin.NET.Core.EventConsumer`1">
            <summary>
            Redis 消息扩展
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Admin.NET.Core.EventConsumer`1._consumerTask">
             <summary>
            
             </summary>
        </member>
        <member name="F:Admin.NET.Core.EventConsumer`1._consumerCts">
             <summary>
            
             </summary>
        </member>
        <member name="P:Admin.NET.Core.EventConsumer`1.Consumer">
            <summary>
            消费者
            </summary>
        </member>
        <member name="E:Admin.NET.Core.EventConsumer`1.Received">
            <summary>
            消息回调
            </summary>
        </member>
        <member name="M:Admin.NET.Core.EventConsumer`1.#ctor(NewLife.Caching.IProducerConsumer{`0})">
            <summary>
            构造函数
            </summary>
            <param name="consumer"></param>
        </member>
        <member name="M:Admin.NET.Core.EventConsumer`1.Start">
            <summary>
            启动
            </summary>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Admin.NET.Core.EventConsumer`1.Stop">
            <summary>
            停止
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.EventConsumer`1.Dispose">
            <summary>
            释放
            </summary>
        </member>
        <member name="M:Admin.NET.Core.EventConsumer`1.Dispose(System.Boolean)">
            <summary>
            释放
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Admin.NET.Core.RabbitMQEventSourceStore">
            <summary>
            RabbitMQ自定义事件源存储器
            </summary>
        </member>
        <member name="F:Admin.NET.Core.RabbitMQEventSourceStore._channelEventSource">
            <summary>
            内存通道事件源存储器
            </summary>
        </member>
        <member name="F:Admin.NET.Core.RabbitMQEventSourceStore._routeKey">
            <summary>
            路由键
            </summary>
        </member>
        <member name="F:Admin.NET.Core.RabbitMQEventSourceStore._connection">
            <summary>
            连接对象
            </summary>
        </member>
        <member name="F:Admin.NET.Core.RabbitMQEventSourceStore._channel">
            <summary>
            通道对象
            </summary>
        </member>
        <member name="M:Admin.NET.Core.RabbitMQEventSourceStore.#ctor(RabbitMQ.Client.ConnectionFactory,System.String,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="factory">连接工厂</param>
            <param name="routeKey">路由键</param>
            <param name="capacity">存储器最多能够处理多少消息，超过该容量进入等待写入</param>
        </member>
        <member name="M:Admin.NET.Core.RabbitMQEventSourceStore.InitEventSourceStore(RabbitMQ.Client.ConnectionFactory,System.String,System.Int32)">
            <summary>
            初始化事件源存储器
            </summary>
            <param name="factory">连接工厂</param>
            <param name="routeKey">路由键</param>
            <param name="capacity">存储器最多能够处理多少消息，超过该容量进入等待写入</param>
        </member>
        <member name="M:Admin.NET.Core.RabbitMQEventSourceStore.WriteAsync(Furion.EventBus.IEventSource,System.Threading.CancellationToken)">
            <summary>
            将事件源写入存储器
            </summary>
            <param name="eventSource">事件源对象</param>
            <param name="cancellationToken">取消任务 Token</param>
            <returns><see cref="T:System.Threading.Tasks.ValueTask"/></returns>
        </member>
        <member name="M:Admin.NET.Core.RabbitMQEventSourceStore.ReadAsync(System.Threading.CancellationToken)">
            <summary>
            从存储器中读取一条事件源
            </summary>
            <param name="cancellationToken">取消任务 Token</param>
            <returns>事件源对象</returns>
        </member>
        <member name="M:Admin.NET.Core.RabbitMQEventSourceStore.Dispose">
            <summary>
            释放非托管资源
            </summary>
        </member>
        <member name="T:Admin.NET.Core.RedisEventSourceStorer">
            <summary>
            Redis自定义事件源存储器
            </summary>
            <remarks>
            在集群部署时，一般每一个消息只由一个服务节点消费一次。
            有些特殊情情要通知到服务器群中的每一个节点(比如需要强制加载某些配置、重点服务等)，
            在这种情况下就要以“broadcast:”开头来定义EventId，
            本系统会把“broadcast:”开头的事件视为“广播消息”保证集群中的每一个服务节点都能消费得到这个消息
            </remarks>
        </member>
        <member name="F:Admin.NET.Core.RedisEventSourceStorer._eventConsumer">
            <summary>
            消费者
            </summary>
        </member>
        <member name="F:Admin.NET.Core.RedisEventSourceStorer._channel">
            <summary>
            内存通道事件源存储器
            </summary>
        </member>
        <member name="M:Admin.NET.Core.RedisEventSourceStorer.#ctor(NewLife.Caching.ICacheProvider,System.String,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="cacheProvider">Redis 连接对象</param>
            <param name="routeKey">路由键</param>
            <param name="capacity">存储器最多能够处理多少消息，超过该容量进入等待写入</param>
        </member>
        <member name="M:Admin.NET.Core.RedisEventSourceStorer.WriteAsync(Furion.EventBus.IEventSource,System.Threading.CancellationToken)">
            <summary>
            将事件源写入存储器
            </summary>
            <param name="eventSource">事件源对象</param>
            <param name="cancellationToken">取消任务 Token</param>
            <returns><see cref="T:System.Threading.Tasks.ValueTask"/></returns>
        </member>
        <member name="M:Admin.NET.Core.RedisEventSourceStorer.ReadAsync(System.Threading.CancellationToken)">
            <summary>
            从存储器中读取一条事件源
            </summary>
            <param name="cancellationToken">取消任务 Token</param>
            <returns>事件源对象</returns>
        </member>
        <member name="M:Admin.NET.Core.RedisEventSourceStorer.Dispose">
            <summary>
            释放非托管资源
            </summary>
        </member>
        <member name="T:Admin.NET.Core.RedisQueue">
            <summary>
            Redis 消息队列
            </summary>
        </member>
        <member name="M:Admin.NET.Core.RedisQueue.GetQueue``1(System.String,System.String)">
            <summary>创建Redis消息队列。默认消费一次，指定消费者group时使用STREAM结构，支持多消费组共享消息</summary>
            <remarks>
            使用队列时，可根据是否设置消费组来决定使用简单队列还是完整队列。 简单队列（如RedisQueue）可用作命令队列，Topic很多，但几乎没有消息。 完整队列（如RedisStream）可用作消息队列，Topic很少，但消息很多，并且支持多消费组。
            </remarks>
            <typeparam name="T"></typeparam>
            <param name="topic">主题</param>
            <param name="group">消费组。未指定消费组时使用简单队列（如RedisQueue），指定消费组时使用完整队列（如RedisStream）</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RedisQueue.GetRedisReliableQueue``1(System.String)">
            <summary>
            获取可信队列，需要确认
            </summary>
            <typeparam name="T"></typeparam>
            <param name="topic"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RedisQueue.RollbackAllAck(System.String,System.Int32)">
            <summary>
            可信队列回滚
            </summary>
            <param name="topic"></param>
            <param name="retryInterval"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RedisQueue.AddReliableQueueList``1(System.String,System.Collections.Generic.List{``0})">
            <summary>
            发送一个数据列表到可信队列
            </summary>
            <param name="topic"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RedisQueue.AddReliableQueue``1(System.String,``0)">
            <summary>
            发送一条数据到可信队列
            </summary>
            <param name="topic"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RedisQueue.GetDelayQueue``1(System.String)">
            <summary>
            获取延迟队列
            </summary>
            <param name="topic"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RedisQueue.AddDelayQueue``1(System.String,``0,System.Int32)">
            <summary>
            发送一条数据到延迟队列
            </summary>
            <param name="topic"></param>
            <param name="value"></param>
            <param name="delay">延迟时间。单位秒</param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RedisQueue.AddDelayQueue``1(System.String,System.Collections.Generic.List{``0},System.Int32)">
            <summary>
            发送数据列表到延迟队列
            </summary>
            <param name="topic"></param>
            <param name="value"></param>
            <param name="delay"></param>
            <typeparam name="T">延迟时间。单位秒</typeparam>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RedisQueue.ReliableTakeOne``1(System.String)">
            <summary>
            在可信队列获取一条数据
            </summary>
            <param name="topic"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RedisQueue.ReliableTakeOneAsync``1(System.String)">
            <summary>
            异步在可信队列获取一条数据
            </summary>
            <param name="topic"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RedisQueue.ReliableTake``1(System.String,System.Int32)">
            <summary>
            在可信队列获取多条数据
            </summary>
            <param name="topic"></param>
            <param name="count"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RedisQueue.BeginCacheLock(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            申请分布式锁
            </summary>
            <param name="key">要锁定的key</param>
            <param name="msTimeout">申请锁等待的时间，单位毫秒</param>
            <param name="msExpire">锁过期时间，超过该时间没有主动是放则自动是放，必须整数秒，单位毫秒</param>
            <param name="throwOnFailure">失败时是否抛出异常,如不抛出异常，可通过判断返回null得知申请锁失败</param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.RetryEventHandlerExecutor">
            <summary>
            事件执行器-超时控制、失败重试熔断等等
            </summary>
        </member>
        <member name="T:Admin.NET.Core.ConsoleLogoSetup">
            <summary>
            控制台logo
            </summary>
        </member>
        <member name="T:Admin.NET.Core.DataTypeExtension">
            <summary>
            基本数据类型扩展（作为NewLife.Core的Utility的补充）
            </summary>
        </member>
        <member name="M:Admin.NET.Core.DataTypeExtension.ToSByte(System.Object,System.SByte)">
            <summary>转为SByte整数，转换失败时返回默认值。</summary>
            <remarks></remarks>
            <param name="value">待转换对象</param>
            <param name="defaultValue">默认值。待转换对象无效时使用</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.DataTypeExtension.ToByte(System.Object,System.Byte)">
            <summary>转为Byte整数，转换失败时返回默认值。</summary>
            <remarks></remarks>
            <param name="value">待转换对象</param>
            <param name="defaultValue">默认值。待转换对象无效时使用</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.DataTypeExtension.ToInt16(System.Object,System.Int16)">
            <summary>转为Int16整数，转换失败时返回默认值。</summary>
            <remarks></remarks>
            <param name="value">待转换对象</param>
            <param name="defaultValue">默认值。待转换对象无效时使用</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.DataTypeExtension.ToUInt16(System.Object,System.UInt16)">
            <summary>转为UInt16整数，转换失败时返回默认值。</summary>
            <remarks></remarks>
            <param name="value">待转换对象</param>
            <param name="defaultValue">默认值。待转换对象无效时使用</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.DataTypeExtension.ToUInt32(System.Object,System.UInt32)">
            <summary>转为UInt32整数，转换失败时返回默认值。</summary>
            <remarks></remarks>
            <param name="value">待转换对象</param>
            <param name="defaultValue">默认值。待转换对象无效时使用</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.DataTypeExtension.ToUInt64(System.Object,System.UInt64)">
            <summary>转为UInt64整数，转换失败时返回默认值。</summary>
            <remarks></remarks>
            <param name="value">待转换对象</param>
            <param name="defaultValue">默认值。待转换对象无效时使用</param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.EnumerableExtension">
            <summary>
            数据集合拓展类
            </summary>
        </member>
        <member name="M:Admin.NET.Core.EnumerableExtension.ToChildList``2(System.Collections.Generic.IEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Boolean)">
            <summary>
            查询有父子关系的数据集
            </summary>
            <param name="list">数据集</param>
            <param name="idExpression">主键ID字段</param>
            <param name="parentIdExpression">父级字段</param>
            <param name="topParentIdValue">顶级节点父级字段值</param>
            <param name="isContainOneself">是否包含顶级节点本身</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.EnumerableExtension.ToChildList``2(System.Collections.Generic.IEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Boolean)">
            <summary>
            查询有父子关系的数据集
            </summary>
            <param name="list">数据集</param>
            <param name="idExpression">主键ID字段</param>
            <param name="parentIdExpression">父级字段</param>
            <param name="topLevelPredicate">顶级节点的选择条件</param>
            <param name="isContainOneself">是否包含顶级节点本身</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.EnumerableExtension.GetPropertyInfo``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            辅助方法，从表达式中提取属性信息并使用临时缓存
            </summary>
        </member>
        <member name="M:Admin.NET.Core.EnumerableExtension.TraverseHierarchy``1(System.Collections.Generic.IEnumerable{``0},System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Collections.Generic.List{``0},System.Boolean)">
            <summary>
            使用队列遍历层级结构
            </summary>
        </member>
        <member name="T:Admin.NET.Core.EnumExtension">
            <summary>
            枚举拓展
            </summary>
        </member>
        <member name="M:Admin.NET.Core.EnumExtension.GetEnumDictionary(System.Type)">
            <summary>
            获取枚举对象Key与名称的字典（缓存）
            </summary>
            <param name="enumType"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.EnumExtension.GetEnumDictionaryItems(System.Type)">
            <summary>
            获取枚举对象Key与名称的字典
            </summary>
            <param name="enumType"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.EnumExtension.GetEnumDescDictionary(System.Type)">
            <summary>
            获取枚举类型key与描述的字典（缓存）
            </summary>
            <param name="enumType"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Admin.NET.Core.EnumExtension.GetEnumDescDictionaryItems(System.Type)">
            <summary>
            获取枚举类型key与描述的字典（没有描述则获取name）
            </summary>
            <param name="enumType"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Admin.NET.Core.EnumExtension.TryToGetEnumType(System.Reflection.Assembly,System.String)">
            <summary>
            从程序集中查找指定枚举类型
            </summary>
            <param name="assembly"></param>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.EnumExtension.LoadEnumTypeDict(System.Reflection.Assembly)">
            <summary>
            从程序集中加载所有枚举类型
            </summary>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.EnumExtension.GetEnumDescription(System.Enum)">
            <summary>
            获取枚举的Description
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.EnumExtension.GetEnumDescription(System.Object)">
            <summary>
            获取枚举的Description
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.EnumExtension.GetTheme(System.Object)">
            <summary>
            获取枚举的Theme
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.EnumExtension.EnumToList(System.Type)">
            <summary>
            将枚举转成枚举信息集合
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.EnumExtension.EnumToList``1(System.Type)">
            <summary>
            枚举ToList
            </summary>
            <typeparam name="T"></typeparam>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.EnumEntity">
            <summary>
            枚举实体
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EnumEntity.Describe">
            <summary>
            枚举的描述
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EnumEntity.Theme">
            <summary>
            枚举的样式
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EnumEntity.Name">
            <summary>
            枚举名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EnumEntity.Value">
            <summary>
            枚举对象的值
            </summary>
        </member>
        <member name="M:Admin.NET.Core.HttpContextExtension.GetClientDeviceInfo(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取设备信息
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.HttpContextExtension.GetClientBrowser(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取浏览器信息
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.HttpContextExtension.GetClientOs(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取操作系统信息
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.ObjectExtension">
            <summary>
            对象拓展
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ObjectExtension.PropertyCache">
            <summary>
            类型属性列表映射表
            </summary>
        </member>
        <member name="F:Admin.NET.Core.ObjectExtension.AttributeCache">
            <summary>
            脱敏特性缓存映射表
            </summary>
        </member>
        <member name="M:Admin.NET.Core.ObjectExtension.HasImplementedRawGeneric(System.Type,System.Type)">
            <summary>
            判断类型是否实现某个泛型
            </summary>
            <param name="type">类型</param>
            <param name="generic">泛型类型</param>
            <returns>bool</returns>
        </member>
        <member name="M:Admin.NET.Core.ObjectExtension.ToQueryString(System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <summary>
            将字典转化为QueryString格式
            </summary>
            <param name="dict"></param>
            <param name="urlEncode"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ObjectExtension.UrlEncode(System.String)">
            <summary>
            将字符串URL编码
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ObjectExtension.ToJson(System.Object)">
            <summary>
            对象序列化成Json字符串
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ObjectExtension.ToObject``1(System.String)">
            <summary>
            Json字符串反序列化成对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ObjectExtension.ParseToLong(System.Object)">
            <summary>
            将object转换为long，若失败则返回0
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ObjectExtension.ParseToLong(System.String,System.Int64)">
            <summary>
            将object转换为long，若失败则返回指定值
            </summary>
            <param name="str"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ObjectExtension.ParseToDouble(System.Object)">
            <summary>
            将object转换为double，若失败则返回0
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ObjectExtension.ParseToDouble(System.Object,System.Double)">
            <summary>
            将object转换为double，若失败则返回指定值
            </summary>
            <param name="str"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ObjectExtension.ParseToDateTime(System.String)">
            <summary>
            将string转换为DateTime，若失败则返回日期最小值
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ObjectExtension.ParseToDateTime(System.String,System.Nullable{System.DateTime})">
            <summary>
            将string转换为DateTime，若失败则返回默认值
            </summary>
            <param name="str"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ObjectExtension.ParseToDateTimeForRep(System.String)">
            <summary>
            将 string 时间日期格式转换成字符串 如 {yyyy} => 2024
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ObjectExtension.IsNullOrEmpty(System.Object)">
            <summary>
            是否有值
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ObjectExtension.Mask(System.String,System.Char)">
            <summary>
            字符串掩码
            </summary>
            <param name="str">字符串</param>
            <param name="mask">掩码符</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ObjectExtension.MaskIdCard(System.String,System.Char)">
            <summary>
            身份证号掩码
            </summary>
            <param name="idCard">身份证号</param>
            <param name="mask">掩码符</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ObjectExtension.MaskEmail(System.String,System.Char)">
            <summary>
            邮箱掩码
            </summary>
            <param name="email">邮箱</param>
            <param name="mask">掩码符</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ObjectExtension.ParseTo``1(System.String)">
            <summary>
            将字符串转为值类型，若没有得到或者错误返回为空
            </summary>
            <typeparam name="T">指定值类型</typeparam>
            <param name="str">传入字符串</param>
            <returns>可空值</returns>
        </member>
        <member name="M:Admin.NET.Core.ObjectExtension.ParseTo(System.String,System.Type)">
            <summary>
            将字符串转为值类型，若没有得到或者错误返回为空
            </summary>
            <param name="str">传入字符串</param>
            <param name="type">目标类型</param>
            <returns>可空值</returns>
        </member>
        <member name="M:Admin.NET.Core.ObjectExtension.CopyTo(System.Object,System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.String[])">
            <summary>
            将一个对象属性值赋给另一个指定对象属性, 只复制相同属性的
            </summary>
            <param name="src">原数据对象</param>
            <param name="target">目标数据对象</param>
            <param name="changeProperties">属性集，键为原属性，值为目标属性</param>
            <param name="unChangeProperties">属性集，目标不修改的属性</param>
        </member>
        <member name="M:Admin.NET.Core.ObjectExtension.DeepCopy``1(``0)">
            <summary>
            深复制
            </summary>
            <typeparam name="T">深复制源对象</typeparam>
            <param name="obj">对象</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ObjectExtension.MaskSensitiveData``1(``0)">
            <summary>
            对带有<see cref="T:Admin.NET.Core.DataMaskAttribute"/>特性字段进行脱敏处理
            </summary>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.FakeDelete``1(SqlSugar.ISugarRepository,``0)">
            <summary>
            实体假删除 _rep.FakeDelete(entity)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="repository"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.FakeDelete``1(SqlSugar.ISqlSugarClient,``0)">
            <summary>
            实体假删除 db.FakeDelete(entity)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.FakeDelete``1(SqlSugar.ISugarRepository,System.Collections.Generic.List{``0})">
            <summary>
            实体集合批量假删除 _rep.FakeDelete(entity)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="repository"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.FakeDelete``1(SqlSugar.ISqlSugarClient,System.Collections.Generic.List{``0})">
            <summary>
            实体集合批量假删除 db.FakeDelete(entity)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.FakeDeleteAsync``1(SqlSugar.ISugarRepository,``0)">
            <summary>
            实体假删除异步 _rep.FakeDeleteAsync(entity)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="repository"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.FakeDeleteAsync``1(SqlSugar.ISqlSugarClient,``0)">
            <summary>
            实体假删除 db.FakeDelete(entity)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.FakeDeleteAsync``1(SqlSugar.ISugarRepository,System.Collections.Generic.List{``0})">
            <summary>
            实体集合批量假删除异步 _rep.FakeDeleteAsync(entity)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="repository"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.FakeDeleteAsync``1(SqlSugar.ISqlSugarClient,System.Collections.Generic.List{``0})">
            <summary>
            实体集合批量假删除 db.FakeDelete(entity)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.OrderBuilder``1(SqlSugar.ISugarQueryable{``0},Admin.NET.Core.BasePageInput,System.String,System.String,System.Boolean)">
            <summary>
            排序方式(默认降序)
            </summary>
            <param name="queryable"></param>
            <param name="pageInput"> </param>
            <param name="prefix"> </param>
            <param name="defaultSortField"> 默认排序字段 </param>
            <param name="descSort"> 是否降序 </param>
            <returns> </returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.UpdateWithDiffLog``1(SqlSugar.ISugarRepository,``0,System.Boolean)">
            <summary>
            更新实体并记录差异日志 _rep.UpdateWithDiffLog(entity)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="repository"></param>
            <param name="entity"></param>
            <param name="ignoreAllNullColumns"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.UpdateWithDiffLog``1(SqlSugar.ISqlSugarClient,``0,System.Boolean)">
            <summary>
            更新实体并记录差异日志 _rep.UpdateWithDiffLog(entity)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="entity"></param>
            <param name="ignoreAllNullColumns"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.UpdateWithDiffLogAsync``1(SqlSugar.ISugarRepository,``0,System.Boolean)">
            <summary>
            更新实体并记录差异日志 _rep.UpdateWithDiffLogAsync(entity)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="repository"></param>
            <param name="entity"></param>
            <param name="ignoreAllNullColumns"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.UpdateWithDiffLogAsync``1(SqlSugar.ISqlSugarClient,``0,System.Boolean)">
            <summary>
            更新实体并记录差异日志 _rep.UpdateWithDiffLogAsync(entity)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="entity"></param>
            <param name="ignoreAllNullColumns"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.InsertWithDiffLog``1(SqlSugar.ISugarRepository,``0)">
            <summary>
            新增实体并记录差异日志 _rep.InsertWithDiffLog(entity)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="repository"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.InsertWithDiffLog``1(SqlSugar.ISqlSugarClient,``0)">
            <summary>
            新增实体并记录差异日志 _rep.InsertWithDiffLog(entity)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.InsertWithDiffLogAsync``1(SqlSugar.ISugarRepository,``0)">
            <summary>
            新增实体并记录差异日志 _rep.InsertWithDiffLogAsync(entity)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="repository"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.InsertWithDiffLogAsync``1(SqlSugar.ISqlSugarClient,``0)">
            <summary>
            新增实体并记录差异日志 _rep.InsertWithDiffLog(entity)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.AS``1(SqlSugar.ISugarQueryable{``0})">
            <summary>
            多库查询
            </summary>
            <param name="queryable"></param>
            <returns> </returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.AS``2(SqlSugar.ISugarQueryable{``0,``1})">
            <summary>
            多库查询
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="queryable"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.AS``1(SqlSugar.IUpdateable{``0})">
            <summary>
            多库更新
            </summary>
            <param name="updateable"></param>
            <returns> </returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.AS``1(SqlSugar.IInsertable{``0})">
            <summary>
            多库新增
            </summary>
            <param name="insertable"></param>
            <returns> </returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.AS``1(SqlSugar.IDeleteable{``0})">
            <summary>
            多库删除
            </summary>
            <param name="deleteable"></param>
            <returns> </returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.GetTableInfo``1">
            <summary>
            根据实体类型获取表信息
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.RunWithoutFilter(SqlSugar.ISugarRepository,System.Action)">
            <summary>
            禁用过滤器-适用于更新和删除操作（只对当前请求有效，禁止使用异步）
            </summary>
            <param name="repository"></param>
            <param name="action">禁止异步</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.IgnoreTenant``1(SqlSugar.ISugarQueryable{``0},System.Boolean)">
            <summary>
            忽略租户
            </summary>
            <param name="queryable"></param>
            <param name="ignore">是否忽略 默认true</param>
            <returns> </returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.OnlyUpdateColumn``2(SqlSugar.IUpdateable{``0})">
            <summary>
            只更新某些列
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="R"></typeparam>
            <param name="updateable"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.OnlyNavUpdateColumn``2(``0,``1)">
            <summary>
            导航只更新（主表）某些列
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="R"></typeparam>
            <param name="t"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RepositoryExtension.BulkListQuery``2(SqlSugar.ISugarQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,SqlSugar.SingleColumnEntity{``1},System.Boolean}},System.Collections.Generic.IEnumerable{``1},System.Threading.CancellationToken)">
            <summary>
            批量列表in查询
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="queryable"></param>
            <param name="exp"></param>
            <param name="queryList"></param>
            <param name="stoppingToken"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.RequestExtension.GetOrigin(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            获取请求地址源
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.SqlSugarExtension">
            <summary>
            Sqlsugar 动态查询扩展方法
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarExtension.ToMappedSqlString``1(SqlSugar.ISugarQueryable{``0})">
            <summary>
            获取映射SQL语句, 用于创建视图
            </summary>
            <param name="queryable"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarFilterExtension.GetPropertyNames``1(System.Type)">
            <summary>
            根据指定Attribute获取属性
            </summary>
            <typeparam name="T"></typeparam>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarFilterExtension.GetConditionExpression``1(System.Type,System.Collections.Generic.List{System.Int64})">
            <summary>
            获取过滤表达式
            </summary>
            <typeparam name="T"></typeparam>
            <param name="type"></param>
            <param name="owners"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.StringExtension">
            <summary>
            字符串扩展方法
            </summary>
        </member>
        <member name="M:Admin.NET.Core.StringExtension.Truncate(System.String,System.Int32,System.String)">
            <summary>
            字符串截断
            </summary>
        </member>
        <member name="M:Admin.NET.Core.StringExtension.ToTitleCase(System.String)">
            <summary>
            单词首字母全部大写
            </summary>
        </member>
        <member name="M:Admin.NET.Core.StringExtension.ContainsIgnoreCase(System.String,System.String)">
            <summary>
            检查是否包含子串，忽略大小写
            </summary>
        </member>
        <member name="M:Admin.NET.Core.StringExtension.IsJson(System.String)">
            <summary>
            判断是否是 JSON 数据
            </summary>
        </member>
        <member name="M:Admin.NET.Core.StringExtension.IsHtml(System.String)">
            <summary>
            判断是否是 HTML 数据
            </summary>
        </member>
        <member name="M:Admin.NET.Core.StringExtension.Reverse(System.String)">
            <summary>
            字符串反转
            </summary>
        </member>
        <member name="M:Admin.NET.Core.StringExtension.ToFirstLetterLowerCase(System.String)">
            <summary>
            转首字母小写
            </summary>
        </member>
        <member name="M:Admin.NET.Core.StringExtension.Render(System.String,System.Object)">
            <summary>
            渲染字符串，替换占位符
            </summary>
            <param name="template">模板内容</param>
            <param name="parameters">参数对象</param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.UseApplicationBuilder">
            <summary>
            配置中间件扩展
            </summary>
        </member>
        <member name="M:Admin.NET.Core.IOnlineUserHub.OnlineUserList(Admin.NET.Core.OnlineUserList)">
            <summary>
            在线用户列表
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.IOnlineUserHub.ForceOffline(System.Object)">
            <summary>
            强制下线
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.IOnlineUserHub.PublicNotice(Admin.NET.Core.SysNotice)">
            <summary>
            发布站内消息
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.IOnlineUserHub.ReceiveMessage(System.Object)">
            <summary>
            接收消息
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.OnlineUserHub">
            <summary>
            在线用户集线器
            </summary>
        </member>
        <member name="M:Admin.NET.Core.OnlineUserHub.OnConnectedAsync">
            <summary>
            连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.OnlineUserHub.OnDisconnectedAsync(System.Exception)">
            <summary>
            断开
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.OnlineUserHub.ForceOffline(Admin.NET.Core.OnlineUserHubInput)">
            <summary>
            强制下线
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.OnlineUserHub.ClientsSendMessage(Admin.NET.Core.MessageInput)">
            <summary>
            发送信息给某个人
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.OnlineUserHub.ClientsSendMessageToAll(Admin.NET.Core.MessageInput)">
            <summary>
            发送信息给所有人
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.OnlineUserHub.ClientsSendMessageToOther(Admin.NET.Core.MessageInput)">
            <summary>
            发送消息给某些人（除了本人）
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.OnlineUserHub.ClientsSendMessageToUsers(Admin.NET.Core.MessageInput)">
            <summary>
            发送消息给某些人
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.DynamicJobCompiler">
            <summary>
            动态作业编译
            </summary>
        </member>
        <member name="M:Admin.NET.Core.DynamicJobCompiler.BuildJob(System.String)">
            <summary>
            编译代码并返回其中实现 IJob 的类型
            </summary>
            <param name="script">动态编译的作业代码</param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.EnumToDictJob">
            <summary>
            枚举转字典
            </summary>
        </member>
        <member name="M:Admin.NET.Core.EnumToDictJob.SyncEnumToDictInfoAsync(SqlSugar.SqlSugarClient,System.Collections.Generic.List{Admin.NET.Core.SysDictType})">
            <summary>
            用于同步枚举转字典数据
            </summary>
            <param name="db"></param>
            <param name="list"></param>
        </member>
        <member name="M:Admin.NET.Core.EnumToDictJob.GetDictByEnumType(System.Collections.Generic.List{Admin.NET.Core.Service.EnumTypeOutput})">
            <summary>
            枚举信息转字典
            </summary>
            <param name="enumTypeList"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.LogJob">
            <summary>
            清理日志作业任务
            </summary>
        </member>
        <member name="T:Admin.NET.Core.OnlineUserJob">
            <summary>
            清理在线用户作业任务
            </summary>
        </member>
        <member name="T:Admin.NET.Core.DatabaseLoggingWriter">
            <summary>
            数据库日志写入器
            </summary>
        </member>
        <member name="M:Admin.NET.Core.DatabaseLoggingWriter.Dispose">
            <summary>
            释放服务作用域
            </summary>
        </member>
        <member name="T:Admin.NET.Core.ElasticSearchLoggingWriter">
            <summary>
            ES日志写入器
            </summary>
        </member>
        <member name="M:Admin.NET.Core.ElasticSearchLoggingWriter.Dispose">
            <summary>
            释放服务作用域
            </summary>
        </member>
        <member name="T:Admin.NET.Core.ElasticSearchSetup">
            <summary>
            ES服务注册
            </summary>
        </member>
        <member name="M:Admin.NET.Core.LoggingSetup.AddLoggingSetup(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            日志注册
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Admin.NET.Core.AlipayOptions">
            <summary>
            支付宝支付配置选项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.AlipayOptions.ServerUrl">
            <summary>
            支付宝网关地址
            </summary>
        </member>
        <member name="P:Admin.NET.Core.AlipayOptions.AuthUrl">
            <summary>
            支付宝授权回调地址
            </summary>
        </member>
        <member name="P:Admin.NET.Core.AlipayOptions.AppAuthUrl">
            <summary>
            应用授权回调地址
            </summary>
        </member>
        <member name="P:Admin.NET.Core.AlipayOptions.WebsocketUrl">
            <summary>
            支付宝 websocket 服务地址
            </summary>
        </member>
        <member name="P:Admin.NET.Core.AlipayOptions.NotifyUrl">
            <summary>
            应用回调地址
            </summary>
        </member>
        <member name="P:Admin.NET.Core.AlipayOptions.RootCertPath">
            <summary>
            支付宝根证书存放路径
            </summary>
        </member>
        <member name="P:Admin.NET.Core.AlipayOptions.AccountList">
            <summary>
            支付宝商户账号列表
            </summary>
        </member>
        <member name="M:Admin.NET.Core.AlipayOptions.GetClient(Admin.NET.Core.AlipayMerchantAccount)">
            <summary>
            获取支付宝客户端
            </summary>
            <param name="account"></param>
        </member>
        <member name="T:Admin.NET.Core.AlipayMerchantAccount">
            <summary>
            支付宝商户账号信息
            </summary>
        </member>
        <member name="P:Admin.NET.Core.AlipayMerchantAccount.Id">
            <summary>
            配置Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.AlipayMerchantAccount.Name">
            <summary>
            商户名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.AlipayMerchantAccount.AppId">
            <summary>
            商户AppId
            </summary>
        </member>
        <member name="P:Admin.NET.Core.AlipayMerchantAccount.PrivateKey">
            <summary>
            应用私钥
            </summary>
        </member>
        <member name="P:Admin.NET.Core.AlipayMerchantAccount.EncryptKey">
            <summary>
            从支付宝获取敏感信息时的加密密钥（可选）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.AlipayMerchantAccount.SignType">
            <summary>
            加密算法
            </summary>
        </member>
        <member name="P:Admin.NET.Core.AlipayMerchantAccount.AppCertPath">
            <summary>
            应用公钥证书路径
            </summary>
        </member>
        <member name="P:Admin.NET.Core.AlipayMerchantAccount.AlipayPublicCertPath">
            <summary>
            支付宝公钥证书路径
            </summary>
        </member>
        <member name="T:Admin.NET.Core.APIJSONOptions">
            <summary>
            APIJSON配置选项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.APIJSONOptions.Roles">
            <summary>
            角色集合
            </summary>
        </member>
        <member name="T:Admin.NET.Core.APIJSON_Role">
            <summary>
            APIJSON角色权限
            </summary>
        </member>
        <member name="P:Admin.NET.Core.APIJSON_Role.RoleName">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.APIJSON_Role.Select">
            <summary>
            查询
            </summary>
        </member>
        <member name="P:Admin.NET.Core.APIJSON_Role.Insert">
            <summary>
            增加
            </summary>
        </member>
        <member name="P:Admin.NET.Core.APIJSON_Role.Update">
            <summary>
            更新
            </summary>
        </member>
        <member name="P:Admin.NET.Core.APIJSON_Role.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="T:Admin.NET.Core.APIJSON_RoleItem">
            <summary>
            APIJSON角色权限内容
            </summary>
        </member>
        <member name="P:Admin.NET.Core.APIJSON_RoleItem.Table">
            <summary>
            表集合
            </summary>
        </member>
        <member name="P:Admin.NET.Core.APIJSON_RoleItem.Column">
            <summary>
            列集合
            </summary>
        </member>
        <member name="P:Admin.NET.Core.APIJSON_RoleItem.Filter">
            <summary>
            过滤器
            </summary>
        </member>
        <member name="T:Admin.NET.Core.CacheOptions">
            <summary>
            缓存配置选项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.CacheOptions.Prefix">
            <summary>
            缓存前缀
            </summary>
        </member>
        <member name="P:Admin.NET.Core.CacheOptions.CacheType">
            <summary>
            缓存类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.CacheOptions.Redis">
            <summary>
            Redis缓存
            </summary>
        </member>
        <member name="T:Admin.NET.Core.RedisOption">
            <summary>
            Redis缓存
            </summary>
        </member>
        <member name="P:Admin.NET.Core.RedisOption.MaxMessageSize">
            <summary>
            最大消息大小
            </summary>
        </member>
        <member name="T:Admin.NET.Core.ClusterOptions">
            <summary>
            集群配置选项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ClusterOptions.Enabled">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ClusterOptions.ServerId">
            <summary>
            服务器标识
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ClusterOptions.ServerIp">
            <summary>
            服务器IP
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ClusterOptions.SignalR">
            <summary>
            SignalR配置
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ClusterOptions.DataProtecteKey">
            <summary>
            数据保护key
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ClusterOptions.IsSentinel">
            <summary>
            是否哨兵模式
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ClusterOptions.SentinelConfig">
            <summary>
            哨兵配置
            </summary>
        </member>
        <member name="T:Admin.NET.Core.ClusterSignalR">
            <summary>
            集群SignalR配置
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ClusterSignalR.RedisConfiguration">
            <summary>
            Redis连接字符串
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ClusterSignalR.ChannelPrefix">
            <summary>
            缓存前缀
            </summary>
        </member>
        <member name="T:Admin.NET.Core.StackExchangeSentinelConfig">
            <summary>
            哨兵配置
            </summary>
        </member>
        <member name="P:Admin.NET.Core.StackExchangeSentinelConfig.ServiceName">
            <summary>
            master名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.StackExchangeSentinelConfig.Password">
            <summary>
            master访问密码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.StackExchangeSentinelConfig.SentinelPassword">
            <summary>
            哨兵访问密码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.StackExchangeSentinelConfig.EndPoints">
            <summary>
            哨兵端口
            </summary>
        </member>
        <member name="P:Admin.NET.Core.StackExchangeSentinelConfig.DefaultDb">
            <summary>
            默认库
            </summary>
        </member>
        <member name="P:Admin.NET.Core.StackExchangeSentinelConfig.MainPrefix">
            <summary>
            主前缀
            </summary>
        </member>
        <member name="P:Admin.NET.Core.StackExchangeSentinelConfig.SignalRChannelPrefix">
            <summary>
            SignalR前缀
            </summary>
        </member>
        <member name="T:Admin.NET.Core.CDConfigOptions">
            <summary>
            CI/CD 配置选项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.CDConfigOptions.Enabled">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:Admin.NET.Core.CDConfigOptions.Owner">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.CDConfigOptions.Repo">
            <summary>
            仓库名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.CDConfigOptions.Branch">
            <summary>
            分支名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.CDConfigOptions.AccessToken">
            <summary>
            用户授权码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.CDConfigOptions.UpdateInterval">
            <summary>
            更新间隔限制（分钟）0 不限制
            </summary>
        </member>
        <member name="P:Admin.NET.Core.CDConfigOptions.BackupCount">
            <summary>
            保留备份文件的数量, 0 不限制
            </summary>
        </member>
        <member name="P:Admin.NET.Core.CDConfigOptions.BackendOutput">
            <summary>
            输出目录配置
            </summary>
        </member>
        <member name="P:Admin.NET.Core.CDConfigOptions.Publish">
            <summary>
            发布配置选项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.CDConfigOptions.ExcludeFiles">
            <summary>
            排除文件列表
            </summary>
        </member>
        <member name="T:Admin.NET.Core.PublishOptions">
            <summary>
            编译发布配置选项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.PublishOptions.Configuration">
            <summary>
            发布环境配置
            </summary>
        </member>
        <member name="P:Admin.NET.Core.PublishOptions.TargetFramework">
            <summary>
            目标框架
            </summary>
        </member>
        <member name="P:Admin.NET.Core.PublishOptions.RuntimeIdentifier">
            <summary>
            运行环境
            </summary>
        </member>
        <member name="T:Admin.NET.Core.CodeGenOptions">
            <summary>
            代码生成配置选项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.CodeGenOptions.EntityAssemblyNames">
            <summary>
            数据库实体程序集名称集合
            </summary>
        </member>
        <member name="P:Admin.NET.Core.CodeGenOptions.BaseEntityNames">
            <summary>
            数据库实体基类名称集合
            </summary>
        </member>
        <member name="P:Admin.NET.Core.CodeGenOptions.FrontRootPath">
            <summary>
            前端文件根目录
            </summary>
        </member>
        <member name="P:Admin.NET.Core.CodeGenOptions.BackendApplicationNamespaces">
            <summary>
            后端生成到的项目
            </summary>
        </member>
        <member name="T:Admin.NET.Core.CryptogramOptions">
            <summary>
            密码配置选项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.CryptogramOptions.StrongPassword">
            <summary>
            是否开启密码强度验证
            </summary>
        </member>
        <member name="P:Admin.NET.Core.CryptogramOptions.PasswordStrengthValidation">
            <summary>
            密码强度验证正则表达式
            </summary>
        </member>
        <member name="P:Admin.NET.Core.CryptogramOptions.PasswordStrengthValidationMsg">
            <summary>
            密码强度验证提示
            </summary>
        </member>
        <member name="P:Admin.NET.Core.CryptogramOptions.CryptoType">
            <summary>
            密码类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.CryptogramOptions.PublicKey">
            <summary>
            公钥
            </summary>
        </member>
        <member name="P:Admin.NET.Core.CryptogramOptions.PrivateKey">
            <summary>
            私钥
            </summary>
        </member>
        <member name="T:Admin.NET.Core.DbConnectionOptions">
            <summary>
            数据库配置选项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DbConnectionOptions.EnableConsoleSql">
            <summary>
            启用控制台打印SQL
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DbConnectionOptions.SuperAdminIgnoreIDeletedFilter">
            <summary>
            超级管理员是否忽略逻辑删除过滤器
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DbConnectionOptions.ConnectionConfigs">
            <summary>
            数据库集合
            </summary>
        </member>
        <member name="T:Admin.NET.Core.DbConnectionConfig">
            <summary>
            数据库连接配置
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DbConnectionConfig.DbNickName">
            <summary>
            数据库名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DbConnectionConfig.DbSettings">
            <summary>
            数据库配置
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DbConnectionConfig.TableSettings">
            <summary>
            表配置
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DbConnectionConfig.SeedSettings">
            <summary>
            种子配置
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DbConnectionConfig.TenantType">
            <summary>
            隔离方式
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DbConnectionConfig.DatabaseDirectory">
            <summary>
            数据库存储目录（仅SqlServer支持指定目录创建）
            </summary>
        </member>
        <member name="T:Admin.NET.Core.DbSettings">
            <summary>
            数据库配置
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DbSettings.EnableInitDb">
            <summary>
            启用库表初始化
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DbSettings.EnableInitView">
            <summary>
            启用视图初始化
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DbSettings.EnableDiffLog">
            <summary>
            启用库表差异日志
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DbSettings.EnableUnderLine">
            <summary>
            启用驼峰转下划线
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DbSettings.EnableConnStringEncrypt">
            <summary>
            启用数据库连接串加密策略
            </summary>
        </member>
        <member name="T:Admin.NET.Core.TableSettings">
            <summary>
            表配置
            </summary>
        </member>
        <member name="P:Admin.NET.Core.TableSettings.EnableInitTable">
            <summary>
            启用表初始化
            </summary>
        </member>
        <member name="P:Admin.NET.Core.TableSettings.EnableIncreTable">
            <summary>
            启用表增量更新
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SeedSettings">
            <summary>
            种子配置
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SeedSettings.EnableInitSeed">
            <summary>
            启用种子初始化
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SeedSettings.EnableIncreSeed">
            <summary>
            启用种子增量更新
            </summary>
        </member>
        <member name="T:Admin.NET.Core.ElasticSearchOptions">
            <summary>
            ES配置选项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ElasticSearchOptions.Enabled">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ElasticSearchOptions.AuthType">
            <summary>
            ES认证类型，可选 Basic、ApiKey、Base64ApiKey
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ElasticSearchOptions.User">
            <summary>
            Basic认证的用户名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ElasticSearchOptions.Password">
            <summary>
            Basic认证的密码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ElasticSearchOptions.ApiId">
            <summary>
            ApiKey认证的ApiId
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ElasticSearchOptions.ApiKey">
            <summary>
            ApiKey认证的ApiKey
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ElasticSearchOptions.Base64ApiKey">
            <summary>
            Base64ApiKey认证时加密的加密字符串
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ElasticSearchOptions.Fingerprint">
            <summary>
            ES使用Https时的证书指纹，使用证书请自行实现
            <para>https://www.elastic.co/guide/en/elasticsearch/client/net-api/current/connecting.html</para>
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ElasticSearchOptions.ServerUris">
            <summary>
            地址
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ElasticSearchOptions.DefaultIndex">
            <summary>
            索引
            </summary>
        </member>
        <member name="T:Admin.NET.Core.EmailOptions">
            <summary>
            邮件配置选项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EmailOptions.Host">
            <summary>
            主机
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EmailOptions.Port">
            <summary>
            端口
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EmailOptions.DefaultFromEmail">
            <summary>
            默认发件者邮箱
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EmailOptions.DefaultToEmail">
            <summary>
            默认接收人邮箱
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EmailOptions.EnableSsl">
            <summary>
            启用SSL
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EmailOptions.UserName">
            <summary>
            邮箱账号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EmailOptions.Password">
            <summary>
            邮箱密码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EmailOptions.DefaultFromName">
            <summary>
            默认邮件标题
            </summary>
        </member>
        <member name="T:Admin.NET.Core.EnumOptions">
            <summary>
            枚举配置选项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EnumOptions.EntityAssemblyNames">
            <summary>
            枚举实体程序集名称集合
            </summary>
        </member>
        <member name="T:Admin.NET.Core.EventBusOptions">
            <summary>
            事件总线配置选项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.EventBusOptions.RabbitMQ">
            <summary>
            RabbitMQ
            </summary>
        </member>
        <member name="T:Admin.NET.Core.RabbitMQSettings">
            <summary>
            RabbitMQ
            </summary>
        </member>
        <member name="P:Admin.NET.Core.RabbitMQSettings.UserName">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.RabbitMQSettings.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.RabbitMQSettings.HostName">
            <summary>
            主机
            </summary>
        </member>
        <member name="P:Admin.NET.Core.RabbitMQSettings.Port">
            <summary>
            端口
            </summary>
        </member>
        <member name="T:Admin.NET.Core.OAuthOptions">
            <summary>
            第三方登录授权配置选项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.OAuthOptions.Weixin">
            <summary>
            Weixin配置
            </summary>
        </member>
        <member name="P:Admin.NET.Core.OAuthOptions.Gitee">
            <summary>
            Gitee配置
            </summary>
        </member>
        <member name="T:Admin.NET.Core.PayCallBackOptions">
            <summary>
            支付回调配置选项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.PayCallBackOptions.WechatPayUrl">
            <summary>
            微信支付回调
            </summary>
        </member>
        <member name="P:Admin.NET.Core.PayCallBackOptions.WechatRefundUrl">
            <summary>
            微信退款回调
            </summary>
        </member>
        <member name="P:Admin.NET.Core.PayCallBackOptions.AlipayUrl">
            <summary>
            支付宝支付回调
            </summary>
        </member>
        <member name="P:Admin.NET.Core.PayCallBackOptions.AlipayRefundUrl">
            <summary>
            支付宝退款回调
            </summary>
        </member>
        <member name="T:Admin.NET.Core.IpRateLimitingOptions">
            <summary>
            IP限流配置选项
            </summary>
        </member>
        <member name="T:Admin.NET.Core.IpRateLimitPoliciesOptions">
            <summary>
            IP限流策略配置选项
            </summary>
        </member>
        <member name="T:Admin.NET.Core.ClientRateLimitingOptions">
            <summary>
            客户端限流配置选项
            </summary>
        </member>
        <member name="T:Admin.NET.Core.ClientRateLimitPoliciesOptions">
            <summary>
            客户端限流策略配置选项
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SMSOptions">
            <summary>
            短信配置选项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SMSOptions.Aliyun">
            <summary>
            Aliyun
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SMSOptions.Tencentyun">
            <summary>
            Tencentyun
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SMSSettings.SdkAppId">
            <summary>
            SdkAppId
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SMSSettings.AccessKeyId">
            <summary>
            AccessKey ID
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SMSSettings.AccessKeySecret">
            <summary>
            AccessKey Secret
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SMSSettings.Templates">
            <summary>
            Templates
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SMSSettings.GetTemplate(System.String)">
            <summary>
            GetTemplate
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SnowIdOptions">
            <summary>
            雪花Id配置选项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SnowIdOptions.WorkerPrefix">
            <summary>
            缓存前缀
            </summary>
        </member>
        <member name="T:Admin.NET.Core.UploadOptions">
            <summary>
            文件上传配置选项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.UploadOptions.Path">
            <summary>
            路径
            </summary>
        </member>
        <member name="P:Admin.NET.Core.UploadOptions.MaxSize">
            <summary>
            大小
            </summary>
        </member>
        <member name="P:Admin.NET.Core.UploadOptions.ContentType">
            <summary>
            上传格式
            </summary>
        </member>
        <member name="P:Admin.NET.Core.UploadOptions.EnableMd5">
            <summary>
            启用文件MD5验证
            </summary>
            <remarks>防止重复上传</remarks>
        </member>
        <member name="T:Admin.NET.Core.OSSProviderOptions">
            <summary>
            对象存储配置选项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.OSSProviderOptions.Enabled">
            <summary>
            是否启用OSS存储
            </summary>
        </member>
        <member name="P:Admin.NET.Core.OSSProviderOptions.Bucket">
            <summary>
            自定义桶名称 不能直接使用Provider来替代桶名称
            例：阿里云 1.只能包括小写字母，数字，短横线（-）2.必须以小写字母或者数字开头 3.长度必须在3-63字节之间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.OSSProviderOptions.CustomHost">
            <summary>
            自定义Host
            拼接外链的Host，若空则使用Endpoint拼接
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Admin.NET.Core.WechatOptions">
            <summary>
            微信相关配置选项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.WechatOptions.WechatToken">
            <summary>
            微信公众号服务器配置中的令牌(Token)
            </summary>
        </member>
        <member name="P:Admin.NET.Core.WechatOptions.WechatEncodingAESKey">
            <summary>
            微信公众号服务器配置中的消息加解密密钥(EncodingAESKey)
            </summary>
        </member>
        <member name="P:Admin.NET.Core.WechatOptions.WxToken">
            <summary>
            小程序消息推送中的令牌(Token)
            </summary>
        </member>
        <member name="P:Admin.NET.Core.WechatOptions.WxEncodingAESKey">
            <summary>
            小程序消息推送中的消息加解密密钥(EncodingAESKey)
            </summary>
        </member>
        <member name="T:Admin.NET.Core.WechatPayOptions">
            <summary>
            微信支付配置选项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.WechatPayOptions.AppId">
            <summary>
            微信公众平台AppId、开放平台AppId、小程序AppId、企业微信CorpId
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SysConfigSeedData">
            <summary>
            系统配置表种子数据
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SysConfigSeedData.HasData">
            <summary>
            种子数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.SysDictDataSeedData">
            <summary>
            系统字典值表种子数据
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SysDictDataSeedData.HasData">
            <summary>
            种子数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.SysDictTypeSeedData">
            <summary>
            系统字典类型表种子数据
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SysDictTypeSeedData.HasData">
            <summary>
            种子数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.SysMenuSeedData">
            <summary>
            系统菜单表种子数据
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SysMenuSeedData.HasData">
            <summary>
            种子数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.SysOrgSeedData">
            <summary>
            系统机构表种子数据
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SysOrgSeedData.HasData">
            <summary>
            种子数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.SysPosSeedData">
            <summary>
            系统职位表种子数据
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SysPosSeedData.HasData">
            <summary>
            种子数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.SysRoleMenuSeedData">
            <summary>
            系统角色菜单表种子数据
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SysRoleMenuSeedData.HasData">
            <summary>
            种子数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.SysRoleSeedData">
            <summary>
            系统角色表种子数据
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SysRoleSeedData.HasData">
            <summary>
            种子数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.SysTenantMenuSeedData">
            <summary>
            系统租户菜单表种子数据
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SysTenantMenuSeedData.HasData">
            <summary>
            种子数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.SysTenantSeedData">
            <summary>
            系统租户表种子数据
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SysTenantSeedData.HasData">
            <summary>
            种子数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.SysUserExtOrgSeedData">
            <summary>
            系统用户扩展机构表种子数据
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SysUserExtOrgSeedData.HasData">
            <summary>
            种子数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.SysUserRoleSeedData">
            <summary>
            系统用户角色表种子数据
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SysUserRoleSeedData.HasData">
            <summary>
            种子数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.SysUserSeedData">
            <summary>
            系统用户表种子数据
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SysUserSeedData.HasData">
            <summary>
            种子数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.AlipayErrorCode">
            <summary>
            支付宝支付错误码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayErrorCode.Code">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayErrorCode.Message">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayErrorCode.Solution">
            <summary>
            解决方案
            </summary>
        </member>
        <member name="F:Admin.NET.Core.Service.AlipayErrorCode.StatusCodes">
            <summary>
            错误码集
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.AlipayErrorCode.Get(System.String)">
            <summary>
            根据错误码获取错误信息
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayFundTransUniTransferInput.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayFundTransUniTransferInput.AppId">
            <summary>
            商户AppId
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayFundTransUniTransferInput.OutBizNo">
            <summary>
            商家订单号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayFundTransUniTransferInput.TransAmount">
            <summary>
            转账金额
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayFundTransUniTransferInput.OrderTitle">
            <summary>
            业务标题
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayFundTransUniTransferInput.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayFundTransUniTransferInput.PayerShowNameUseAlias">
            <summary>
            是否展示付款方别名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayFundTransUniTransferInput.CertType">
            <summary>
            收款方证件类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayFundTransUniTransferInput.CertNo">
            <summary>
            收款方证件号码，条件必填
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayFundTransUniTransferInput.Identity">
            <summary>
            收款方身份标识
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayFundTransUniTransferInput.Name">
            <summary>
            收款方真实姓名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayFundTransUniTransferInput.IdentityType">
            <summary>
            收款方身份标识类型
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.AlipayTradePagePayInput">
            <summary>
             统一收单下单并支付页面接口输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayTradePagePayInput.OutTradeNo">
            <summary>
            商户订单号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayTradePagePayInput.TotalAmount">
            <summary>
            订单总金额
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayTradePagePayInput.Subject">
            <summary>
            订单标题
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayTradePagePayInput.Body">
             <summary>
            
             </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayTradePagePayInput.TimeoutExpress">
            <summary>
            超时时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayTradePagePayInput.QrcodeWidth">
            <summary>
            二维码宽度
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayTradePagePayInput.ExtendParams">
            <summary>
            业务参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayTradePagePayInput.BusinessParams">
            <summary>
            商户业务数据
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayTradePagePayInput.InvoiceInfo">
            <summary>
            开票信息
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayTradePagePayInput.ExtUserInfo">
            <summary>
            外部买家信息
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayPreCreateInput.OutTradeNo">
            <summary>
            商户订单号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayPreCreateInput.TotalAmount">
            <summary>
            订单总金额
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayPreCreateInput.Subject">
            <summary>
            订单标题
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayPreCreateInput.TimeoutExpress">
            <summary>
            超时时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayAuthInfoInput.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AlipayAuthInfoInput.AuthCode">
            <summary>
            授权码
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.IAlipayNotify">
            <summary>
            支付宝回调接口
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.IAlipayNotify.TopUpCallback(System.Int64,System.Int64)">
            <summary>
            充值回调方法
            </summary>
            <param name="type">交易类型</param>
            <param name="tradeNo">交易id</param>
        </member>
        <member name="M:Admin.NET.Core.Service.IAlipayNotify.ScanCallback(System.Int64,System.Int64,Aop.Api.Response.AlipayUserInfoShareResponse)">
            <summary>
            扫码回调
            </summary>
            <param name="type"></param>
            <param name="userId"></param>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.SysAlipayService">
            <summary>
            支付宝支付服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysAlipayService.GetAuthInfo(Admin.NET.Core.Service.AlipayAuthInfoInput)">
            <summary>
            获取授权信息 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysAlipayService.Notify">
            <summary>
            支付回调 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysAlipayService.AlipayTradePagePay(Admin.NET.Core.Service.AlipayTradePagePayInput)">
            <summary>
             统一收单下单并支付页面接口 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysAlipayService.AlipayPreCreate(Admin.NET.Core.Service.AlipayPreCreateInput)">
            <summary>
             交易预创建 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysAlipayService.Transfer(Admin.NET.Core.Service.AlipayFundTransUniTransferInput)">
            <summary>
            单笔转账到支付宝账户
             https://opendocs.alipay.com/open/62987723_alipay.fund.trans.uni.transfer
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.APIJSONService">
            <summary>
            APIJSON服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.APIJSONService.Query(Newtonsoft.Json.Linq.JObject)">
            <summary>
            统一查询入口 🔖
            </summary>
            <param name="jobject"></param>
            <remarks>参数：{"[]":{"SYSLOGOP":{}}}</remarks>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.APIJSONService.QueryByTable(System.String,Newtonsoft.Json.Linq.JObject)">
            <summary>
            查询 🔖
            </summary>
            <param name="table"></param>
            <param name="jobject"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.APIJSONService.Add(Newtonsoft.Json.Linq.JObject)">
            <summary>
            新增 🔖
            </summary>
            <param name="tables">表对象或数组，若没有传Id则后端生成Id</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.APIJSONService.Edit(Newtonsoft.Json.Linq.JObject)">
            <summary>
            更新（只支持Id作为条件） 🔖
            </summary>
            <param name="tables">支持多表、多Id批量更新</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.APIJSONService.Delete(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除（支持非Id条件、支持批量） 🔖
            </summary>
            <param name="tables"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.FuncList">
            <summary>
            自定义方法
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.FuncList.Merge(System.Object,System.Object)">
            <summary>
            字符串相加
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.FuncList.MergeObj(System.Object,System.Object)">
            <summary>
            对象合并
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.FuncList.IsContain(System.Object,System.Object)">
            <summary>
            是否包含
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.FuncList.TransJObjectToSugarPara(Newtonsoft.Json.Linq.JToken)">
            <summary>
            根据jtoken的实际类型来转换SugarParameter，避免全转成字符串
            </summary>
            <param name="jToken"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.FuncList.TransJArrayToSugarPara(Newtonsoft.Json.Linq.JToken)">
            <summary>
            根据jArray的实际类型来转换SugarParameter，避免全转成字符串
            </summary>
            <param name="jToken"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.FuncList.GetValueCSharpType(System.String)">
            <summary>
            获取字符串里的值的真正类型
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.IdentityService">
            <summary>
            权限验证
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.IdentityService.GetUserIdentity">
            <summary>
            获取当前用户Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.IdentityService.GetUserRoleName">
            <summary>
            获取当前用户权限名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.IdentityService.GetRole">
            <summary>
            获取当前用户权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.IdentityService.GetSelectRole(System.String)">
            <summary>
            获取当前表的可查询字段
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.IdentityService.ColIsRole(System.String,System.String[])">
            <summary>
            当前列是否在角色里面
            </summary>
            <param name="col"></param>
            <param name="selectrole"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.SelectTable">
             <summary>
            
             </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SelectTable.IsTable(System.String)">
            <summary>
            判断表名是否正确，若不正确则抛异常
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SelectTable.IsCol(System.String,System.String)">
            <summary>
            判断表的列名是否正确,如果不正确则抛异常，更早地暴露给调用方
            </summary>
            <param name="table"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SelectTable.GetTableData(System.String,System.Int32,System.Int32,System.Int32,System.String,Newtonsoft.Json.Linq.JObject)">
            <summary>
            查询列表数据
            </summary>
            <param name="subtable"></param>
            <param name="page"></param>
            <param name="count"></param>
            <param name="query"></param>
            <param name="json"></param>
            <param name="dd"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SelectTable.Query(System.String)">
            <summary>
            解析并查询
            </summary>
            <param name="queryJson"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SelectTable.QuerySingle(Newtonsoft.Json.Linq.JObject,System.String)">
            <summary>
            单表查询
            </summary>
            <param name="queryObj"></param>
            <param name="nodeName">返回数据的节点名称  默认为 infos</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SelectTable.ToSql(Newtonsoft.Json.Linq.JObject)">
            <summary>
            获取查询语句
            </summary>
            <param name="queryObj"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SelectTable.Query(Newtonsoft.Json.Linq.JObject)">
            <summary>
            解析并查询
            </summary>
            <param name="queryObj"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SelectTable.GetFirstData(System.String,System.String,Newtonsoft.Json.Linq.JObject)">
            <summary>
            查询第一条数据
            </summary>
            <param name="subtable"></param>
            <param name="json"></param>
            <param name="job"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Admin.NET.Core.Service.SelectTable.QueryMoreList(Newtonsoft.Json.Linq.JObject,System.Collections.Generic.KeyValuePair{System.String,Newtonsoft.Json.Linq.JToken})">
            <summary>
            多列表查询
            </summary>
            <param name="resultObj"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SelectTable.SugarQueryable(System.String,System.String,Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.Linq.JObject)">
            <summary>
            构造查询过程
            </summary>
            <param name="subtable"></param>
            <param name="selectrole"></param>
            <param name="values"></param>
            <param name="dd"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SelectTable.ProcessWhere(System.String,Newtonsoft.Json.Linq.JObject,SqlSugar.ISugarQueryable{System.Dynamic.ExpandoObject},Newtonsoft.Json.Linq.JObject)">
            <summary>
            构造查询条件 where
            </summary>
            <param name="subtable"></param>
            <param name="values"></param>
            <param name="tb"></param>
            <param name="dd"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SelectTable.ProcessLimit(Newtonsoft.Json.Linq.JObject,SqlSugar.ISugarQueryable{System.Dynamic.ExpandoObject})">
            <summary>
            表内参数"@count"(int)：查询前几行，不能同时使用count和@count函数
            </summary>
            <param name="values"></param>
            <param name="tb"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SelectTable.ConditionBetween(System.String,System.Collections.Generic.List{SqlSugar.IConditionalModel},System.Collections.Generic.KeyValuePair{System.String,Newtonsoft.Json.Linq.JToken},SqlSugar.ISugarQueryable{System.Dynamic.ExpandoObject})">
            <summary>
            "key%":"start,end" => "key%":["start,end"]，其中 start 和 end 都只能为 Boolean, Number, String 中的一种，如 "2017-01-01,2019-01-01" ，["1,90000", "82001,100000"] ，可用于连续范围内的筛选
            目前不支持数组形式
            </summary>
            <param name="subtable"></param>
            <param name="conModels"></param>
            <param name="va"></param>
            <param name="tb"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SelectTable.ConditionEqual(System.String,System.Collections.Generic.List{SqlSugar.IConditionalModel},System.Collections.Generic.KeyValuePair{System.String,Newtonsoft.Json.Linq.JToken})">
            <summary>
            等于、不等于、in 、not in
            </summary>
            <param name="subtable"></param>
            <param name="conModels"></param>
            <param name="va"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SelectTable.InsertSingle(System.String,Newtonsoft.Json.Linq.JObject,Admin.NET.Core.APIJSON_Role)">
            <summary>
            单条插入
            </summary>
            <param name="tableName"></param>
            <param name="cols"></param>
            <param name="role"></param>
            <returns>（各种类型的）id</returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SelectTable.UpdateSingleRecord(System.String,Newtonsoft.Json.Linq.JObject,Admin.NET.Core.APIJSON_Role)">
            <summary>
            为每天记录创建udpate sql
            </summary>
            <param name="tableName"></param>
            <param name="record"></param>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SelectTable.UpdateSingleTable(System.String,Newtonsoft.Json.Linq.JToken,Admin.NET.Core.APIJSON_Role)">
            <summary>
            更新单表，支持同表多条记录
            </summary>
            <param name="tableName"></param>
            <param name="records"></param>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.TableMapper">
            <summary>
            表名映射
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.TableMapper.GetTableName(System.String)">
            <summary>
            获取表别名
            </summary>
            <param name="oldname"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.LoginInput">
            <summary>
            用户登录参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginInput.Account">
            <summary>
            账号
            </summary>
            <example>admin</example>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginInput.Password">
            <summary>
            密码
            </summary>
            <example>123456</example>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginInput.TenantId">
            <summary>
            租户
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginInput.CodeId">
            <summary>
            验证码Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginInput.Code">
            <summary>
            验证码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginPhoneInput.Phone">
            <summary>
            手机号码
            </summary>
            <example>admin</example>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginPhoneInput.Code">
            <summary>
            验证码
            </summary>
            <example>123456</example>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginPhoneInput.TenantId">
            <summary>
            租户
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.UserRegistrationInput">
            <summary>
            用户注册输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UserRegistrationInput.RealName">
            <summary>
            真实姓名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UserRegistrationInput.Account">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UserRegistrationInput.Phone">
            <summary>
            手机号码
            </summary>
            <example>admin</example>
        </member>
        <member name="P:Admin.NET.Core.Service.UserRegistrationInput.Code">
            <summary>
            验证码
            </summary>
            <example>123456</example>
        </member>
        <member name="P:Admin.NET.Core.Service.UserRegistrationInput.CodeId">
            <summary>
            验证码Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UserRegistrationInput.TenantId">
            <summary>
            租户
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UserRegistrationInput.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UserRegistrationInput.WayId">
            <summary>
            注册方案
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.LoginOutput">
            <summary>
            用户登录结果
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginOutput.AccessToken">
            <summary>
            令牌Token
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginOutput.RefreshToken">
            <summary>
            刷新Token
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.LoginUserOutput">
            <summary>
            用户登录信息
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginUserOutput.Id">
            <summary>
            用户id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginUserOutput.Account">
            <summary>
            账号名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginUserOutput.RealName">
            <summary>
            真实姓名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginUserOutput.Phone">
            <summary>
            电话
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginUserOutput.IdCardNum">
            <summary>
            身份证
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginUserOutput.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginUserOutput.AccountType">
            <summary>
            账号类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginUserOutput.Avatar">
            <summary>
            头像
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginUserOutput.Introduction">
            <summary>
            个人简介
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginUserOutput.Address">
            <summary>
            地址
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginUserOutput.Signature">
            <summary>
            电子签名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginUserOutput.OrgId">
            <summary>
            机构Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginUserOutput.OrgName">
            <summary>
            机构名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginUserOutput.OrgType">
            <summary>
            机构类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginUserOutput.PosName">
            <summary>
            职位名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginUserOutput.Buttons">
            <summary>
            按钮权限集合
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginUserOutput.RoleIds">
            <summary>
            角色集合
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginUserOutput.WatermarkText">
            <summary>
            水印文字
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginUserOutput.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LoginUserOutput.CurrentTenantId">
            <summary>
            当前切换到的租户Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysLdapInput">
            <summary>
            系统域登录信息配置输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.SysLdapInput.Host">
            <summary>
            主机
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.SysLdapInput.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysAuthService">
            <summary>
            系统登录授权服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysAuthService.Login(Admin.NET.Core.Service.LoginInput)">
            <summary>
            账号密码登录 🔖
            </summary>
            <param name="input"></param>
            <remarks>用户名/密码：superadmin/123456</remarks>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysAuthService.LoginWithoutCaptcha(Admin.NET.Core.Service.LoginInput)">
            <summary>
            账号密码登录（无需验证码） 🔖
            </summary>
            <param name="input"></param>
            <remarks>用户名/密码：superadmin/123456</remarks>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysAuthService.SimpleLogin(System.String,System.String)">
            <summary>
            简化登录（明文密码） 🔖
            </summary>
            <param name="account">账号</param>
            <param name="password">密码（明文）</param>
            <remarks>用户名/密码：superadmin/123456</remarks>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysAuthService.GetLoginUserAndTenant(System.Nullable{System.Int64},System.String,System.String)">
            <summary>
            获取登录租户和用户
            </summary>
            <param name="tenantId"></param>
            <param name="account"></param>
            <param name="phone"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysAuthService.VerifyPassword(System.String,System.String,System.Int32,Admin.NET.Core.SysUser)">
            <summary>
            验证用户密码
            </summary>
            <param name="password"></param>
            <param name="keyPasswordErrorTimes"></param>
            <param name="passwordErrorTimes"></param>
            <param name="user"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysAuthService.VerifyPasswordPlainText(System.String,System.String,System.Int32,Admin.NET.Core.SysUser)">
            <summary>
            验证明文密码
            </summary>
            <param name="password"></param>
            <param name="keyPasswordErrorTimes"></param>
            <param name="passwordErrorTimes"></param>
            <param name="user"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysAuthService.UnLockScreen(System.String)">
            <summary>
            验证锁屏密码 🔖
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysAuthService.LoginPhone(Admin.NET.Core.Service.LoginPhoneInput)">
            <summary>
            手机号登录 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysAuthService.CreateToken(Admin.NET.Core.SysUser,Admin.NET.Core.SysUserEventTypeEnum)">
            <summary>
            生成Token令牌 🔖
            </summary>
            <param name="user"></param>\
            <param name="sysUserEventTypeEnum"></param>\
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysAuthService.GetUserInfo">
            <summary>
            获取登录账号 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysAuthService.GetRefreshToken(System.String)">
            <summary>
            获取刷新Token 🔖
            </summary>
            <param name="accessToken">旧的AccessToken</param>
            <returns>新的AccessToken和RefreshToken</returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysAuthService.Logout">
            <summary>
            退出系统 🔖
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysAuthService.GetCaptcha">
            <summary>
            获取验证码 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysAuthService.UserRegistration(Admin.NET.Core.Service.UserRegistrationInput)">
            <summary>
            用户注册 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysAuthService.SwaggerCheckUrl">
            <summary>
            Swagger登录检查 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysAuthService.SwaggerSubmitUrl(Furion.SpecificationDocument.SpecificationAuth)">
            <summary>
            Swagger登录提交 🔖
            </summary>
            <param name="auth"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.SysCacheService">
            <summary>
            系统缓存服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCacheService.BeginCacheLock(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            申请分布式锁 🔖
            </summary>
            <param name="key">要锁定的key</param>
            <param name="msTimeout">申请锁等待的时间，单位毫秒</param>
            <param name="msExpire">锁过期时间，超过该时间没有主动是放则自动是放，必须整数秒，单位毫秒</param>
            <param name="throwOnFailure">失败时是否抛出异常,如不抛出异常，可通过判断返回null得知申请锁失败</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCacheService.GetKeyList">
            <summary>
            获取缓存键名集合 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCacheService.Set(System.String,System.Object)">
            <summary>
            增加缓存
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCacheService.Set(System.String,System.Object,System.TimeSpan)">
            <summary>
            增加缓存并设置过期时间
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="expire"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCacheService.GetExpire(System.String)">
            <summary>
            获取缓存的剩余生存时间
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCacheService.Get``1(System.String)">
            <summary>
            获取缓存
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCacheService.Remove(System.String)">
            <summary>
            删除缓存 🔖
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCacheService.Clear">
            <summary>
            清空所有缓存 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCacheService.ExistKey(System.String)">
            <summary>
            检查缓存是否存在
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCacheService.RemoveByPrefixKey(System.String)">
            <summary>
            根据键名前缀删除缓存 🔖
            </summary>
            <param name="prefixKey">键名前缀</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCacheService.GetKeysByPrefixKey(System.String)">
            <summary>
            根据键名前缀获取键名集合 🔖
            </summary>
            <param name="prefixKey">键名前缀</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCacheService.GetValue(System.String)">
            <summary>
            获取缓存值 🔖
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCacheService.GetOrAdd``1(System.String,System.Func{System.String,``0},System.Int32)">
            <summary>
            获取或添加缓存（在数据不存在时执行委托请求数据）
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="callback"></param>
            <param name="expire">过期时间，单位秒</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCacheService.GetHashMap``1(System.String)">
            <summary>
            Hash匹配
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCacheService.HashSet``1(System.String,System.Collections.Generic.Dictionary{System.String,``0})">
            <summary>
            批量添加HASH
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="dic"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCacheService.HashAdd``1(System.String,System.String,``0)">
            <summary>
            添加一条HASH
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="hashKey"></param>
            <param name="value"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCacheService.HashAddOrUpdate``1(System.String,System.String,``0)">
            <summary>
            添加或更新一条HASH
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="hashKey"></param>
            <param name="value"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCacheService.HashGet``1(System.String,System.String[])">
            <summary>
            获取多条HASH
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCacheService.HashGetOne``1(System.String,System.String)">
            <summary>
            获取一条HASH
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCacheService.HashGetAll``1(System.String)">
            <summary>
            根据KEY获取所有HASH
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCacheService.HashDel``1(System.String,System.String[])">
            <summary>
            删除HASH
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.CustomViewEngine">
            <summary>
            自定义模板引擎
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CustomViewEngine.ConfigId">
            <summary>
            库定位器
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.CustomViewEngine.PrimaryKeysFormat(System.String,System.String,System.Boolean)">
            <summary>
            格式化主键查询条件
            例： PrimaryKeysFormat(" || ", "u.{0} == input.{0}")
            单主键返回 u.Id == input.Id
            组合主键返回 u.Id == input.Id || u.FkId == input.FkId
            </summary>
            <param name="separator">分隔符</param>
            <param name="format">模板字符串</param>
            <param name="lowerFirstLetter">字段首字母小写</param>
            <returns></returns>
        </member>
        <member name="P:Admin.NET.Core.Service.CustomViewEngine.InjectServiceMap">
            <summary>
            注入的服务
            </summary>
            <returns></returns>
        </member>
        <member name="P:Admin.NET.Core.Service.CustomViewEngine.InjectServiceArgs">
            <summary>
            服务构造参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CustomViewEngine.DefaultValueList">
            <summary>
            默认值列表
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.CustomViewEngine.IsStatus(Admin.NET.Core.Service.CodeGenConfig)">
            <summary>
            判断字段是否为状态字段
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.CustomViewEngine.ToLowerFirstLetter(System.String)">
            <summary>
            获取首字母小写字符串
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.CustomViewEngine.GetNullableNetType(System.String)">
            <summary>
            将基本字段类型转为可空类型
            </summary>
            <param name="netType"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.CustomViewEngine.GetElTableColumnCustomProperty(Admin.NET.Core.Service.CodeGenConfig)">
            <summary>
            获取前端表格列定义的属性
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.CustomViewEngine.GetAddDefaultValue">
            <summary>
            设置默认值
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.CodeGenConfig">
            <summary>
            代码生成详细配置参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.Id">
            <summary>
            主键Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.CodeGenId">
            <summary>
            代码生成主表ID
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.ColumnName">
            <summary>
            数据库字段名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.ColumnKey">
            <summary>
            主外键
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.PropertyName">
            <summary>
            实体属性名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.ColumnLength">
            <summary>
            字段数据长度
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.LowerPropertyName">
            <summary>
            数据库字段名(首字母小写)
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.ColumnComment">
            <summary>
            字段描述
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.NetType">
            <summary>
            .NET类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.DataType">
            <summary>
            数据库中类型（物理类型）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.DefaultValue">
            <summary>
            字段数据默认值
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.NullableNetType">
            <summary>
            可空.NET类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.EffectType">
            <summary>
            作用类型（字典）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.FkConfigId">
            <summary>
            外键库标识
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.FkEntityName">
            <summary>
            外键实体名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.FkTableName">
            <summary>
            外键表名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.LowerFkEntityName">
            <summary>
            外键实体名称(首字母小写)
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.FkLinkColumnName">
            <summary>
            外键链接字段
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.FkDisplayColumns">
            <summary>
            外键显示字段
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.FkDisplayColumnList">
            <summary>
            外键显示字段
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.LowerFkDisplayColumnsList">
            <summary>
            外键显示字段(首字母小写)
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.FkColumnNetType">
            <summary>
            外键显示字段.NET类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.PidColumn">
            <summary>
            父级字段
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.DictTypeCode">
            <summary>
            字典code
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.QueryType">
            <summary>
            查询方式
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.WhetherQuery">
            <summary>
            是否是查询条件
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.WhetherRetract">
            <summary>
            列表是否缩进（字典）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.WhetherRequired">
            <summary>
            是否必填（字典）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.WhetherSortable">
            <summary>
            是否可排序（字典）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.WhetherTable">
            <summary>
            列表显示
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.WhetherAddUpdate">
            <summary>
            增改
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.WhetherImport">
            <summary>
            导入
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.WhetherCommon">
            <summary>
            是否是通用字段
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.OrderNo">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.IsSelectorEffectType">
            <summary>
            是否是选择器控件
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.PropertyNameTrimEndId">
            <summary>
            去掉尾部Id的属性名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.LowerPropertyNameTrimEndId">
            <summary>
            去掉尾部Id的属性名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.ExtendedPropertyName">
            <summary>
            扩展属性名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenConfig.LowerExtendedPropertyName">
            <summary>
            首字母小写的扩展属性名称
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.CodeGenConfig.GetDisplayColumn(System.String,System.String)">
            <summary>
            获取外键显示值语句
            </summary>
            <param name="tableAlias">表别名</param>
            <param name="separator">多字段时的连接符</param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.CodeGenInput">
            <summary>
            代码生成参数类
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenInput.AuthorName">
            <summary>
            作者姓名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenInput.ClassName">
            <summary>
            类名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenInput.TablePrefix">
            <summary>
            是否移除表前缀
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenInput.ConfigId">
            <summary>
            库定位器名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenInput.DbName">
            <summary>
            数据库名(保留字段)
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenInput.DbType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenInput.ConnectionString">
            <summary>
            数据库链接
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenInput.GenerateType">
            <summary>
            生成方式
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenInput.TableName">
            <summary>
            数据库表名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenInput.NameSpace">
            <summary>
            命名空间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenInput.BusName">
            <summary>
            业务名（业务代码包名称）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenInput.TableComment">
            <summary>
            功能名（数据库表名称）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenInput.TableUniqueConfig">
            <summary>
            表唯一字段
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenInput.TableUniqueList">
            <summary>
            表唯一字段列表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenInput.MenuApplication">
            <summary>
            菜单应用分类（应用编码）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenInput.GenerateMenu">
            <summary>
            是否生成菜单
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenInput.MenuPid">
            <summary>
            菜单父级
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenInput.MenuIcon">
            <summary>
            菜单图标
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenInput.PagePath">
            <summary>
            页面目录
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenInput.PrintType">
            <summary>
            支持打印类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenInput.PrintName">
            <summary>
            打印模版名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddCodeGenInput.TableName">
            <summary>
            数据库表名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddCodeGenInput.BusName">
            <summary>
            业务名（业务代码包名称）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddCodeGenInput.NameSpace">
            <summary>
            命名空间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddCodeGenInput.AuthorName">
            <summary>
            作者姓名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddCodeGenInput.GenerateType">
            <summary>
            生成方式
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddCodeGenInput.GenerateMenu">
            <summary>
            是否生成菜单
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.DeleteCodeGenInput.Id">
            <summary>
            代码生成器Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UpdateCodeGenInput.Id">
            <summary>
            代码生成器Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.CodeGenOutput">
            <summary>
            代码生成参数类
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenOutput.Id">
            <summary>
            代码生成器Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenOutput.AuthorName">
            <summary>
            作者姓名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenOutput.ClassName">
            <summary>
            类名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenOutput.TablePrefix">
            <summary>
            是否移除表前缀
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenOutput.GenerateType">
            <summary>
            生成方式
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenOutput.TableName">
            <summary>
            数据库表名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenOutput.PackageName">
            <summary>
            包名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenOutput.BusName">
            <summary>
            业务名（业务代码包名称）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenOutput.TableComment">
            <summary>
            功能名（数据库表名称）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenOutput.MenuApplication">
            <summary>
            菜单应用分类（应用编码）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenOutput.GenerateMenu">
            <summary>
            是否生成菜单
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenOutput.MenuPid">
            <summary>
            菜单父级
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenOutput.PrintType">
            <summary>
            支持打印类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CodeGenOutput.PrintName">
            <summary>
            打印模版名称
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.ColumnOuput">
            <summary>
            数据库表列
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.ColumnOuput.ColumnName">
            <summary>
            字段名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.ColumnOuput.PropertyName">
            <summary>
            实体的Property名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.ColumnOuput.ColumnLength">
            <summary>
            字段数据长度
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.ColumnOuput.DataType">
            <summary>
            数据库中类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.ColumnOuput.DefaultValue">
            <summary>
            字段数据默认值
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.ColumnOuput.IsPrimarykey">
            <summary>
            是否为主键
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.ColumnOuput.IsNullable">
            <summary>
            是否允许为空
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.ColumnOuput.NetType">
            <summary>
            .NET字段类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.ColumnOuput.DictTypeCode">
            <summary>
            字典编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.ColumnOuput.ColumnComment">
            <summary>
            字段描述
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.ColumnOuput.ColumnKey">
            <summary>
            主外键
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.DatabaseOutput">
            <summary>
            数据库
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.DatabaseOutput.ConfigId">
            <summary>
            库定位器名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.DatabaseOutput.DbNickName">
            <summary>
            库名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.DatabaseOutput.DbType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.DatabaseOutput.ConnectionString">
            <summary>
            数据库连接字符串
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.TableOutput">
            <summary>
            数据库表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.TableOutput.ConfigId">
            <summary>
            库定位器名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.TableOutput.TableName">
            <summary>
            表名（字母形式的）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.TableOutput.EntityName">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.TableOutput.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.TableOutput.UpdateTime">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.TableOutput.TableComment">
            <summary>
            表名称描述（功能名）
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.TableUniqueConfigItem">
            <summary>
            表唯一配置项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.TableUniqueConfigItem.Columns">
            <summary>
            字段列表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.TableUniqueConfigItem.Message">
            <summary>
            描述信息
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.TableUniqueConfigItem.Format(System.String,System.String)">
            <summary>
            格式化查询条件
            </summary>
            <param name="separator">分隔符</param>
            <param name="format">模板字符串</param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.SysCodeGenConfigService">
            <summary>
            系统代码生成配置服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenConfigService.GetList(Admin.NET.Core.Service.CodeGenConfig)">
            <summary>
            获取代码生成配置列表 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenConfigService.UpdateCodeGenConfig(System.Collections.Generic.List{Admin.NET.Core.Service.CodeGenConfig})">
            <summary>
            更新代码生成配置 🔖
            </summary>
            <param name="inputList"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenConfigService.DeleteCodeGenConfig(System.Int64)">
            <summary>
            删除代码生成配置
            </summary>
            <param name="codeGenId"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenConfigService.GetDetail(Admin.NET.Core.Service.CodeGenConfig)">
            <summary>
            获取代码生成配置详情 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenConfigService.AddList(System.Collections.Generic.List{Admin.NET.Core.Service.ColumnOuput},Admin.NET.Core.SysCodeGen)">
            <summary>
            批量增加代码生成配置
            </summary>
            <param name="tableColumnOutputList"></param>
            <param name="codeGenerate"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenConfigService.GetDefaultQueryType(Admin.NET.Core.SysCodeGenConfig)">
            <summary>
            默认查询类型
            </summary>
            <param name="codeGenConfig"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.SysCodeGenService">
            <summary>
            系统代码生成器服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenService.Page(Admin.NET.Core.Service.CodeGenInput)">
            <summary>
            获取代码生成分页列表 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenService.AddCodeGen(Admin.NET.Core.Service.AddCodeGenInput)">
            <summary>
            增加代码生成 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenService.UpdateCodeGen(Admin.NET.Core.Service.UpdateCodeGenInput)">
            <summary>
            更新代码生成 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenService.DeleteCodeGen(System.Collections.Generic.List{Admin.NET.Core.Service.DeleteCodeGenInput})">
            <summary>
            删除代码生成 🔖
            </summary>
            <param name="inputs"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenService.GetDetail(Admin.NET.Core.Service.QueryCodeGenInput)">
            <summary>
            获取代码生成详情 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenService.GetDatabaseList">
            <summary>
            获取数据库库集合 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenService.GetTableList(System.String)">
            <summary>
            获取数据库表(实体)集合 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenService.GetColumnListByTableName(System.String,System.String)">
            <summary>
            根据表名获取列集合 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenService.GetColumnList(Admin.NET.Core.Service.AddCodeGenInput)">
            <summary>
            获取数据表列（实体属性）集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenService.GetEntityInfos(System.String)">
            <summary>
            获取库表信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenService.GetApplicationNamespaces">
            <summary>
            获取程序保存位置 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenService.RunLocal(Admin.NET.Core.SysCodeGen)">
            <summary>
            代码生成到本地 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenService.Preview(Admin.NET.Core.SysCodeGen)">
            <summary>
            获取代码生成预览 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenService.RenderTemplateAsync(Admin.NET.Core.SysCodeGen)">
            <summary>
            渲染模板
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenService.AddOrUpdateMenu(System.String,System.String,System.Int64,System.String,System.String,System.Collections.Generic.List{Admin.NET.Core.Service.CodeGenConfig})">
            <summary>
            添加或更新菜单
            </summary>
            <param name="className"></param>
            <param name="busName"></param>
            <param name="pid"></param>
            <param name="menuIcon"></param>
            <param name="pagePath"></param>
            <param name="tableFieldList"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenService.AddMenu(System.String,System.String,System.Int64,System.String,System.String,System.Collections.Generic.List{Admin.NET.Core.Service.CodeGenConfig})">
            <summary>
            增加菜单
            </summary>
            <param name="className"></param>
            <param name="busName"></param>
            <param name="pid"></param>
            <param name="menuIcon"></param>
            <param name="pagePath"></param>
            <param name="tableFieldList"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenService.DeleteMenuTree(System.String,Admin.NET.Core.MenuTypeEnum)">
            <summary>
            根据菜单名称和类型删除关联的菜单树
            </summary>
            <param name="title"></param>
            <param name="type"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenService.GetTemplatePathList(Admin.NET.Core.SysCodeGen)">
            <summary>
            获取模板文件路径集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenService.GetTemplatePathList">
            <summary>
            获取模板文件路径集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenService.GetTargetPathList(Admin.NET.Core.SysCodeGen)">
            <summary>
            设置生成文件路径
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCodeGenService.GetZipPathList(Admin.NET.Core.SysCodeGen)">
            <summary>
            设置生成文件路径
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.ApiOutput">
            <summary>
            接口/动态API输出
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.ApiOutput.GroupName">
            <summary>
            组名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.ApiOutput.DisplayName">
            <summary>
            接口名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.ApiOutput.RouteName">
            <summary>
            路由名称
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.BaseProcInput">
            <summary>
            基础存储过程输入类
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.BaseProcInput.ProcId">
            <summary>
            ProcId
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.BaseProcInput.ConfigId">
            <summary>
            数据库配置Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.BaseProcInput.ProcParams">
            <summary>
            存储过程输入参数
            </summary>
            <example>{"id":"351060822794565"}</example>
        </member>
        <member name="T:Admin.NET.Core.Service.ExportProcByTMPInput">
            <summary>
            带表头名称存储过程输入类
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.ExportProcByTMPInput.Template">
            <summary>
            模板名称
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.ExportProcInput">
            <summary>
            带表头名称存储过程输入类
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.ExportProcInput2">
            <summary>
            指定导出类名（有排序）存储过程输入类
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.ProcExporterHeaderFilter">
            <summary>
            前端指定列
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SmKeyPairOutput">
            <summary>
            国密公钥私钥对输出
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.SmKeyPairOutput.PrivateKey">
            <summary>
            私匙
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.SmKeyPairOutput.PublicKey">
            <summary>
            公匙
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.StressTestInput">
            <summary>
            接口压测输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestInput.RequestUri">
            <summary>
            接口请求地址
            </summary>
            <example>https://gitee.com/zuohuaijun/Admin.NET</example>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestInput.RequestMethod">
            <summary>
            请求方式
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestInput.NumberOfRequests">
            <summary>
            每轮请求量
            </summary>
            <example>100</example>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestInput.NumberOfRounds">
            <summary>
            压测轮数
            </summary>
            <example>5</example>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestInput.MaxDegreeOfParallelism">
            <summary>
            最大并行量（默认为当前主机逻辑处理器的数量）
            </summary>
            <example>500</example>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestInput.RequestParameters">
            <summary>
            请求参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestInput.Headers">
            <summary>
            请求头参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestInput.PathParameters">
            <summary>
            路径参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestInput.QueryParameters">
            <summary>
            Query参数
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.StressTestOutput">
            <summary>
            接口压测输出参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestOutput.TotalRequests">
            <summary>
            总请求次数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestOutput.TotalTimeInSeconds">
            <summary>
            总用时（秒）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestOutput.SuccessfulRequests">
            <summary>
            成功请求次数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestOutput.FailedRequests">
            <summary>
            失败请求次数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestOutput.QueriesPerSecond">
            <summary>
            每秒查询率（QPS）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestOutput.MinResponseTime">
            <summary>
            最小响应时间（毫秒）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestOutput.MaxResponseTime">
            <summary>
            最大响应时间（毫秒）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestOutput.AverageResponseTime">
            <summary>
            平均响应时间（毫秒）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestOutput.Percentile10ResponseTime">
            <summary>
            P10 响应时间（毫秒）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestOutput.Percentile25ResponseTime">
            <summary>
            P25 响应时间（毫秒）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestOutput.Percentile50ResponseTime">
            <summary>
            P50 响应时间（毫秒）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestOutput.Percentile75ResponseTime">
            <summary>
            P75 响应时间（毫秒）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestOutput.Percentile90ResponseTime">
            <summary>
            P90 响应时间（毫秒）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestOutput.Percentile99ResponseTime">
            <summary>
            P99 响应时间（毫秒）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.StressTestOutput.Percentile999ResponseTime">
            <summary>
            P999 响应时间（毫秒）
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysCommonService">
            <summary>
            系统通用服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCommonService.GetSmKeyPair">
            <summary>
            获取国密公钥私钥对 🏆
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCommonService.GetApiList">
            <summary>
            获取所有接口/动态API 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCommonService.DownloadErrorExcelTemp(System.String)">
            <summary>
            下载标记错误的临时Excel（全局）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCommonService.EncryptPlainText(System.String)">
            <summary>
            加密字符串 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCommonService.StressTest(Admin.NET.Core.Service.StressTestInput)">
            <summary>
            接口压测 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCommonService.CreateRequestMessage(Admin.NET.Core.Service.StressTestInput,System.Uri)">
            <summary>
            创建请求消息
            </summary>
            <param name="input">输入参数</param>
            <param name="fullUri">url</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysCommonService.CalculatePercentile(System.Collections.Generic.List{System.Double},System.Double)">
            <summary>
            计算百分位请求耗时
            </summary>
            <param name="times">请求耗时列表</param>
            <param name="percentile">百分位</param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.SysProcService">
            <summary>
            系统存储过程服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysProcService.PocExport2(Admin.NET.Core.Service.ExportProcInput)">
            <summary>
            导出存储过程数据-指定列，没有指定的字段会被隐藏 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysProcService.PocExport(Admin.NET.Core.Service.ExportProcByTMPInput)">
            <summary>
            根据模板导出存储过程数据 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysProcService.ProcTable(Admin.NET.Core.Service.BaseProcInput)">
            <summary>
            获取存储过程返回表-Oracle、达梦参数顺序不能错 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysProcService.CommonDataSet(Admin.NET.Core.Service.BaseProcInput)">
            <summary>
            获取存储过程返回数据集-Oracle、达梦参数顺序不能错
            Oracle 返回table、table1，其他返回table1、table2。适用于报表、复杂详细页面等 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="P:Admin.NET.Core.Service.PageConfigInput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageConfigInput.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageConfigInput.GroupCode">
            <summary>
            分组编码
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.BatchConfigInput">
            <summary>
            批量配置参数输入
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.BatchConfigInput.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.BatchConfigInput.Value">
            <summary>
            属性值
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.InfoSaveInput">
            <summary>
            系统信息保存输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.InfoSaveInput.LogoBase64">
            <summary>
            系统图标（Data URI scheme base64 编码）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.InfoSaveInput.LogoFileName">
            <summary>
            系统图标文件名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.InfoSaveInput.Watermark">
            <summary>
            水印内容
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.InfoSaveInput.Title">
            <summary>
            系统主标题
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.InfoSaveInput.ViceTitle">
            <summary>
            系统副标题
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.InfoSaveInput.ViceDesc">
            <summary>
            系统描述
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.InfoSaveInput.Copyright">
            <summary>
            版权说明
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.InfoSaveInput.Icp">
            <summary>
            ICP备案号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.InfoSaveInput.IcpUrl">
            <summary>
            ICP地址
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.InfoSaveInput.EnableReg">
            <summary>
            启用注册功能
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.InfoSaveInput.SecondVer">
            <summary>
            登录二次验证
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.InfoSaveInput.Captcha">
            <summary>
            图形验证码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.InfoSaveInput.RegWayId">
            <summary>
            默认注册方案Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysConfigService">
            <summary>
            平台参数配置服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysConfigService.Page(Admin.NET.Core.Service.PageConfigInput)">
            <summary>
            获取参数配置分页列表 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysConfigService.List(Admin.NET.Core.Service.PageConfigInput)">
            <summary>
            获取参数配置列表 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysConfigService.AddConfig(Admin.NET.Core.Service.AddConfigInput)">
            <summary>
            增加参数配置 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysConfigService.UpdateConfig(Admin.NET.Core.Service.UpdateConfigInput)">
            <summary>
            更新参数配置 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysConfigService.DeleteConfig(Admin.NET.Core.Service.DeleteConfigInput)">
            <summary>
            删除参数配置 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysConfigService.BatchDeleteConfig(System.Collections.Generic.List{System.Int64})">
            <summary>
            批量删除参数配置 🔖
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysConfigService.GetDetail(Admin.NET.Core.Service.ConfigInput)">
            <summary>
            获取参数配置详情 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysConfigService.GetConfigValue``1(System.String)">
            <summary>
            获取参数配置值
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysConfigService.UpdateConfigValue(System.String,System.String)">
            <summary>
            更新参数配置值
            </summary>
            <param name="code"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysConfigService.GetGroupList">
            <summary>
            获取分组列表 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysConfigService.GetTokenExpire">
            <summary>
            获取 Token 过期时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysConfigService.GetRefreshTokenExpire">
            <summary>
            获取 RefreshToken 过期时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysConfigService.BatchUpdateConfig(System.Collections.Generic.List{Admin.NET.Core.Service.BatchConfigInput})">
            <summary>
            批量更新参数配置值
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysConfigService.GetSysInfo">
            <summary>
            获取系统信息 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysConfigService.SaveSysInfo(Admin.NET.Core.Service.InfoSaveInput)">
            <summary>
            保存系统信息 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.SysTenantConfigService">
            <summary>
            系统租户配置参数服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantConfigService.Page(Admin.NET.Core.Service.PageConfigInput)">
            <summary>
            获取配置参数分页列表 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantConfigService.List(Admin.NET.Core.Service.PageConfigInput)">
            <summary>
            获取配置参数列表 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantConfigService.AddConfig(Admin.NET.Core.Service.AddConfigInput)">
            <summary>
            增加配置参数 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantConfigService.UpdateConfig(Admin.NET.Core.Service.UpdateConfigInput)">
            <summary>
            更新配置参数 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantConfigService.DeleteConfig(Admin.NET.Core.Service.DeleteConfigInput)">
            <summary>
            删除配置参数 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantConfigService.BatchDeleteConfig(System.Collections.Generic.List{System.Int64})">
            <summary>
            批量删除配置参数 🔖
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantConfigService.GetDetail(Admin.NET.Core.Service.ConfigInput)">
            <summary>
            获取配置参数详情 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantConfigService.GetConfig(System.String)">
            <summary>
            根据Code获取配置参数 🔖
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantConfigService.GetConfigValueByCode(System.String)">
            <summary>
            根据Code获取配置参数值 🔖
            </summary>
            <param name="code">编码</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantConfigService.GetConfigValueByCode(System.String,System.String)">
            <summary>
            获取配置参数值
            </summary>
            <param name="code">编码</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantConfigService.GetConfigValueByCode``1(System.String,``0)">
            <summary>
            获取配置参数值
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="code">编码</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantConfigService.GetConfigValueByCode``1(System.String,System.Int64,``0)">
            <summary>
            获取配置参数值
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="code">编码</param>
            <param name="tenantId">租户Id</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantConfigService.UpdateConfigValue(System.String,System.String)">
            <summary>
            更新配置参数值
            </summary>
            <param name="code"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantConfigService.GetGroupList">
            <summary>
            获取分组列表 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantConfigService.BatchUpdateConfig(System.Collections.Generic.List{Admin.NET.Core.Service.BatchConfigInput})">
            <summary>
            批量更新配置参数值 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantConfigService.RemoveConfigCache(Admin.NET.Core.SysTenantConfig)">
            <summary>
            清除配置缓存
            </summary>
            <param name="config"></param>
        </member>
        <member name="T:Admin.NET.Core.Service.SysUserConfigService">
            <summary>
            系统用户配置参数服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserConfigService.Page(Admin.NET.Core.Service.PageConfigInput)">
            <summary>
            获取配置参数分页列表 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserConfigService.List(Admin.NET.Core.Service.PageConfigInput)">
            <summary>
            获取配置参数列表 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserConfigService.AddConfig(Admin.NET.Core.Service.AddConfigInput)">
            <summary>
            增加配置参数 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserConfigService.UpdateConfig(Admin.NET.Core.Service.UpdateConfigInput)">
            <summary>
            更新配置参数 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserConfigService.DeleteConfig(Admin.NET.Core.Service.DeleteConfigInput)">
            <summary>
            删除配置参数 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserConfigService.BatchDeleteConfig(System.Collections.Generic.List{System.Int64})">
            <summary>
            批量删除配置参数 🔖
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserConfigService.GetDetail(Admin.NET.Core.Service.ConfigInput)">
            <summary>
            获取配置参数详情 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserConfigService.GetConfig(System.String)">
            <summary>
            根据Code获取配置参数 🔖
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserConfigService.GetConfigValueByCode(System.String)">
            <summary>
            根据Code获取配置参数值 🔖
            </summary>
            <param name="code">编码</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserConfigService.GetConfigValueByCode(System.String,System.String)">
            <summary>
            获取配置参数值
            </summary>
            <param name="code">编码</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserConfigService.GetConfigValueByCode``1(System.String,``0)">
            <summary>
            获取配置参数值
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="code">编码</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserConfigService.GetConfigValueByCode``1(System.String,System.Int64,``0)">
            <summary>
            获取配置参数值
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="code">编码</param>
            <param name="userId">用户Id</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserConfigService.UpdateConfigValue(System.String,System.String)">
            <summary>
            更新配置参数值
            </summary>
            <param name="code"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserConfigService.GetGroupList">
            <summary>
            获取分组列表 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserConfigService.BatchUpdateConfig(System.Collections.Generic.List{Admin.NET.Core.Service.BatchConfigInput})">
            <summary>
            批量更新配置参数值 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserConfigService.RemoveConfigCache(Admin.NET.Core.SysUserConfig)">
            <summary>
            清除配置缓存
            </summary>
            <param name="config"></param>
        </member>
        <member name="P:Admin.NET.Core.Service.ConstOutput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.ConstOutput.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.ConstOutput.Data">
            <summary>
            扩展字段
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysConstService">
            <summary>
            系统常量服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysConstService.GetList">
            <summary>
            获取所有常量列表 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysConstService.GetData(System.String)">
            <summary>
            根据类名获取常量数据 🔖
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysConstService.GetConstAttributeList">
            <summary>
            获取常量特性类型列表
            </summary>
            <returns></returns>
        </member>
        <member name="P:Admin.NET.Core.Service.CreateEntityInput.TableName">
            <summary>
            表名
            </summary>
            <example>student</example>
        </member>
        <member name="P:Admin.NET.Core.Service.CreateEntityInput.EntityName">
            <summary>
            实体名
            </summary>
            <example>Student</example>
        </member>
        <member name="P:Admin.NET.Core.Service.CreateEntityInput.BaseClassName">
            <summary>
            基类名
            </summary>
            <example>AutoIncrementEntity</example>
        </member>
        <member name="P:Admin.NET.Core.Service.CreateEntityInput.Position">
            <summary>
            导出位置
            </summary>
            <example>Web.Application</example>
        </member>
        <member name="P:Admin.NET.Core.Service.CreateEntityInput.ConfigId">
            <summary>
            库标识
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CreateSeedDataInput.ConfigId">
            <summary>
            库标识
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.CreateSeedDataInput.TableName">
            <summary>
            表名
            </summary>
            <example>student</example>
        </member>
        <member name="P:Admin.NET.Core.Service.CreateSeedDataInput.EntityName">
            <summary>
            实体名称
            </summary>
            <example>Student</example>
        </member>
        <member name="P:Admin.NET.Core.Service.CreateSeedDataInput.SeedDataName">
            <summary>
            种子名称
            </summary>
            <example>Student</example>
        </member>
        <member name="P:Admin.NET.Core.Service.CreateSeedDataInput.Position">
            <summary>
            导出位置
            </summary>
            <example>Web.Application</example>
        </member>
        <member name="P:Admin.NET.Core.Service.CreateSeedDataInput.Suffix">
            <summary>
            后缀
            </summary>
            <example>Web.Application</example>
        </member>
        <member name="P:Admin.NET.Core.Service.CreateSeedDataInput.FilterExistingData">
            <summary>
            过滤已有数据
            </summary>
            <remarks>
            如果数据在其它不同名的已有的种子类型的数据中出现过，就不生成这个数据
            主要用于生成菜单功能，菜单功能往往与子项目绑定，如果生成完整数据就会导致菜单项多处理重复。
            </remarks>
        </member>
        <member name="P:Admin.NET.Core.Service.MoveDbColumnInput.ConfigId">
            <summary>
            数据库配置ID
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MoveDbColumnInput.TableName">
            <summary>
            目标表名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MoveDbColumnInput.ColumnName">
             <summary>
            要移动的列名
             </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MoveDbColumnInput.AfterColumnName">
            <summary>
            移动到该列后方（为空时移动到首列）
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.VisualDbTable">
            <summary>
            库表可视化
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.JsonIgnoredPropertyData">
            <summary>
            保存标注了JsonIgnore的Property的值信息
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.JsonIgnoredPropertyData.RecordIndex">
            <summary>
            记录索引
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.JsonIgnoredPropertyData.Name">
            <summary>
            属性名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.JsonIgnoredPropertyData.Value">
            <summary>
            属性值描述
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysDatabaseService">
            <summary>
            系统数据库管理服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDatabaseService.GetList">
            <summary>
            获取库列表 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDatabaseService.GetVisualDbTable">
            <summary>
            获取可视化库表结构 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDatabaseService.GetColumnList(System.String,System.String)">
            <summary>
            获取字段列表 🔖
            </summary>
            <param name="tableName">表名</param>
            <param name="configId">ConfigId</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDatabaseService.GetDbTypeList(System.String)">
            <summary>
            获取数据库数据类型列表 🔖
            </summary>
            <param name="configId"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDatabaseService.AddColumn(Admin.NET.Core.Service.DbColumnInput)">
            <summary>
            增加列 🔖
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDatabaseService.DeleteColumn(Admin.NET.Core.Service.DeleteDbColumnInput)">
            <summary>
            删除列 🔖
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDatabaseService.UpdateColumn(Admin.NET.Core.Service.UpdateDbColumnInput)">
            <summary>
            编辑列 🔖
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDatabaseService.MoveColumn(Admin.NET.Core.Service.MoveDbColumnInput)">
            <summary>
            移动列位置 🔖
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDatabaseService.GetColumnDefinitionInMySQL(SqlSugar.ISqlSugarClient,System.String,System.String,System.Boolean)">
            <summary>
            获取列定义
            </summary>
            <param name="db"></param>
            <param name="tableName"></param>
            <param name="columnName"></param>
            <param name="noDefault"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDatabaseService.MoveColumnInMySQL(SqlSugar.ISqlSugarClient,System.String,System.String,System.String)">
            <summary>
            MySQL 列移动实现
            </summary>
            <param name="db"></param>
            <param name="tableName"></param>
            <param name="columnName"></param>
            <param name="afterColumnName"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDatabaseService.GetTableList(System.String)">
            <summary>
            获取表列表 🔖
            </summary>
            <param name="configId">ConfigId</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDatabaseService.AddTable(Admin.NET.Core.Service.DbTableInput)">
            <summary>
            增加表 🔖
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDatabaseService.DeleteTable(Admin.NET.Core.Service.DeleteDbTableInput)">
            <summary>
            删除表 🔖
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDatabaseService.UpdateTable(Admin.NET.Core.Service.UpdateDbTableInput)">
            <summary>
            编辑表 🔖
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDatabaseService.CreateEntity(Admin.NET.Core.Service.CreateEntityInput)">
            <summary>
            创建实体 🔖
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDatabaseService.CreateSeedData(Admin.NET.Core.Service.CreateSeedDataInput)">
            <summary>
            创建种子数据 🔖
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDatabaseService.GetEntityInfos">
            <summary>
            获取库表信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDatabaseService.GetEntityTemplatePath">
            <summary>
            获取实体模板文件路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDatabaseService.GetSeedDataTemplatePath">
            <summary>
            获取种子数据模板文件路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDatabaseService.GetEntityTargetPath(Admin.NET.Core.Service.CreateEntityInput)">
            <summary>
            设置生成实体文件路径
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDatabaseService.GetSeedDataTargetPath(Admin.NET.Core.Service.CreateSeedDataInput)">
            <summary>
            设置生成种子数据文件路径
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDatabaseService.BackupDatabase">
            <summary>
            备份数据库（PostgreSQL）🔖
            </summary>
            <returns></returns>
        </member>
        <member name="P:Admin.NET.Core.Service.PageDictDataInput.DictTypeId">
            <summary>
            字典类型Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageDictDataInput.Label">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageDictDataInput.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.GetDataDictDataInput.DictTypeId">
            <summary>
            字典类型Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.QueryDictDataInput.Value">
            <summary>
            字典值
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.QueryDictDataInput.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageDictTypeInput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageDictTypeInput.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddDictTypeInput.SysFlag">
            <summary>
            是否是内置字典（Y-是，N-否）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.GetDataDictTypeInput.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysDictDataService">
            <summary>
            系统字典值服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictDataService.Page(Admin.NET.Core.Service.PageDictDataInput)">
            <summary>
            获取字典值分页列表 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictDataService.GetList(Admin.NET.Core.Service.GetDataDictDataInput)">
            <summary>
            获取字典值列表 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictDataService.AddDictData(Admin.NET.Core.Service.AddDictDataInput)">
            <summary>
            增加字典值 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictDataService.UpdateDictData(Admin.NET.Core.Service.UpdateDictDataInput)">
            <summary>
            更新字典值 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictDataService.DeleteDictData(Admin.NET.Core.Service.DeleteDictDataInput)">
            <summary>
            删除字典值 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictDataService.GetDetail(Admin.NET.Core.Service.DictDataInput)">
            <summary>
            获取字典值详情 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictDataService.SetStatus(Admin.NET.Core.Service.DictDataInput)">
            <summary>
            修改字典值状态 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictDataService.GetDictDataListByDictTypeId(System.Int64)">
            <summary>
            根据字典类型Id获取字典值集合
            </summary>
            <param name="dictTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictDataService.GetDataList(System.String)">
            <summary>
            根据字典类型编码获取字典值集合 🔖
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictDataService.GetDataListByIdOrCode(System.Nullable{System.Int64},System.String)">
            <summary>
            获取字典值集合 🔖
            </summary>
            <param name="typeId"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictDataService.GetDataList(Admin.NET.Core.Service.QueryDictDataInput)">
            <summary>
            根据查询条件获取字典值集合 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictDataService.DeleteDictData(System.Int64)">
            <summary>
            根据字典类型Id删除字典值
            </summary>
            <param name="dictTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictDataService.MapDictValueToLabel``1(System.Linq.Expressions.Expression{System.Func{System.Object}},System.String,``0)">
            <summary>
            通过字典数据Value查询显示文本Label
            适用于列表中根据字典数据值找文本的子查询 _sysDictDataService.MapDictValueToLabel(() =>obj.Type, "org_type",obj);
            </summary>
            <typeparam name="T"></typeparam>
            <param name="mappingFiled"></param>
            <param name="dictTypeCode"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictDataService.MapDictLabelToValue``1(System.Linq.Expressions.Expression{System.Func{System.Object}},System.String,``0)">
            <summary>
            通过字典数据显示文本Label查询Value
            适用于列表数据导入根据字典数据文本找值的子查询 _sysDictDataService.MapDictLabelToValue(() => obj.Type, "org_type",obj);
            </summary>
            <typeparam name="T"></typeparam>
            <param name="mappingFiled"></param>
            <param name="dictTypeCode"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictDataService.Remove(Admin.NET.Core.SysDictType)">
            <summary>
            清理字典数据缓存
            </summary>
            <param name="dictType"></param>
        </member>
        <member name="T:Admin.NET.Core.Service.SysDictTypeService">
            <summary>
            系统字典类型服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictTypeService.Page(Admin.NET.Core.Service.PageDictTypeInput)">
            <summary>
            获取字典类型分页列表 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictTypeService.GetList">
            <summary>
            获取字典类型列表 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictTypeService.GetDataList(Admin.NET.Core.Service.GetDataDictTypeInput)">
            <summary>
            获取字典类型-值列表 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictTypeService.AddDictType(Admin.NET.Core.Service.AddDictTypeInput)">
            <summary>
            添加字典类型 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictTypeService.UpdateDictType(Admin.NET.Core.Service.UpdateDictTypeInput)">
            <summary>
            更新字典类型 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictTypeService.DeleteDictType(Admin.NET.Core.Service.DeleteDictTypeInput)">
            <summary>
            删除字典类型 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictTypeService.GetDetail(Admin.NET.Core.Service.DictTypeInput)">
            <summary>
            获取字典类型详情 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictTypeService.SetStatus(Admin.NET.Core.Service.DictTypeInput)">
            <summary>
            修改字典类型状态 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysDictTypeService.GetAllDictList">
            <summary>
            获取所有字典集合 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.EnumInput">
            <summary>
            枚举输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.EnumInput.EnumName">
            <summary>
            枚举类型名称
            </summary>
            <example>AccountTypeEnum</example>
        </member>
        <member name="P:Admin.NET.Core.Service.QueryEnumDataInput.EntityName">
            <summary>
            实体名称
            </summary>
            <example>SysUser</example>
        </member>
        <member name="P:Admin.NET.Core.Service.QueryEnumDataInput.FieldName">
            <summary>
            字段名称
            </summary>
            <example>AccountType</example>
        </member>
        <member name="T:Admin.NET.Core.Service.EnumTypeOutput">
            <summary>
            枚举类型输出参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.EnumTypeOutput.TypeDescribe">
            <summary>
            枚举类型描述
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.EnumTypeOutput.TypeName">
            <summary>
            枚举类型名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.EnumTypeOutput.TypeFullName">
            <summary>
            枚举类型全名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.EnumTypeOutput.TypeRemark">
            <summary>
            枚举类型备注
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.EnumTypeOutput.EnumEntities">
            <summary>
            枚举实体
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysEnumService">
            <summary>
            系统枚举服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysEnumService.GetEnumTypeList">
            <summary>
            获取所有枚举类型 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysEnumService.GetEnumDescription(System.Type)">
            <summary>
            获取字典描述
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysEnumService.GetEnumDataList(Admin.NET.Core.Service.EnumInput)">
            <summary>
            通过枚举类型获取枚举值集合 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysEnumService.GetEnumDataListByField(Admin.NET.Core.Service.QueryEnumDataInput)">
            <summary>
            通过实体的字段名获取相关枚举值集合（目前仅支持枚举类型） 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.PageFileInput">
            <summary>
            文件分页查询
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageFileInput.FileName">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageFileInput.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageFileInput.Suffix">
            <summary>
            文件后缀
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageFileInput.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageFileInput.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.UploadFileInput">
            <summary>
            上传文件
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UploadFileInput.File">
            <summary>
            文件
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UploadFileInput.FileType">
            <summary>
            文件类别
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UploadFileInput.IsPublic">
            <summary>
            是否公开
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UploadFileInput.AllowSuffix">
            <summary>
            允许格式：.jpeg.jpg.png.bmp.gif.tif
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.UploadFileFromBase64Input">
            <summary>
            上传文件Base64
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UploadFileFromBase64Input.FileName">
            <summary>
            文件名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UploadFileFromBase64Input.FileDataBase64">
            <summary>
            文件内容
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UploadFileFromBase64Input.ContentType">
            <summary>
            文件类型( "image/jpeg",)
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.RelationQueryInput">
            <summary>
            查询关联查询输入
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.RelationQueryInput.RelationName">
            <summary>
            关联对象名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.RelationQueryInput.RelationId">
            <summary>
            关联对象Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.RelationQueryInput.FileTypes">
            <summary>
            文件类型：多个以","分割
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.RelationQueryInput.BelongId">
            <summary>
            所属Id
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.RelationQueryInput.GetFileTypeBS">
            <summary>
            文件类型分割
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.ICustomFileProvider">
            <summary>
            自定义文件提供器接口
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.ICustomFileProvider.GetFileStreamResultAsync(Admin.NET.Core.SysFile,System.String)">
            <summary>
            获取文件流
            </summary>
            <param name="sysFile"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.ICustomFileProvider.DownloadFileBase64Async(Admin.NET.Core.SysFile)">
            <summary>
            下载指定文件Base64格式
            </summary>
            <param name="sysFile"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.ICustomFileProvider.DeleteFileAsync(Admin.NET.Core.SysFile)">
            <summary>
            删除文件
            </summary>
            <param name="sysFile"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.ICustomFileProvider.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,Admin.NET.Core.SysFile,System.String,System.String)">
            <summary>
            上传文件
            </summary>
            <param name="file">文件</param>
            <param name="sysFile"></param>
            <param name="path">文件存储位置</param>
            <param name="finalName">文件最终名称</param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.SysFileService">
            <summary>
            系统文件服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysFileService.Page(Admin.NET.Core.Service.PageFileInput)">
            <summary>
            获取文件分页列表 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysFileService.UploadFileFromBase64(Admin.NET.Core.Service.UploadFileFromBase64Input)">
            <summary>
            上传文件Base64 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysFileService.UploadFiles(System.Collections.Generic.List{Microsoft.AspNetCore.Http.IFormFile})">
            <summary>
            上传多文件 🔖
            </summary>
            <param name="files"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysFileService.DownloadFile(Admin.NET.Core.SysFile)">
            <summary>
            根据文件Id或Url下载 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysFileService.GetPreview(System.Int64)">
            <summary>
            文件预览 🔖
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysFileService.GetFileStreamResult(Admin.NET.Core.SysFile,System.String)">
            <summary>
            获取文件流
            </summary>
            <param name="file"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysFileService.DownloadFileBase64(System.String)">
            <summary>
            下载指定文件Base64格式 🔖
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysFileService.DeleteFile(Admin.NET.Core.BaseIdInput)">
            <summary>
            删除文件 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysFileService.UpdateFile(Admin.NET.Core.SysFile)">
            <summary>
            更新文件 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysFileService.GetFile(System.Int64)">
            <summary>
            获取文件 🔖
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysFileService.GetFileByIds(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据文件Id集合获取文件 🔖
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysFileService.GetFolder">
            <summary>
            获取文件路径 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysFileService.UploadFile(Admin.NET.Core.Service.UploadFileInput,System.String)">
            <summary>
            上传文件 🔖
            </summary>
            <param name="input"></param>
            <param name="targetPath">存储目标路径</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysFileService.UploadAvatar(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            上传头像 🔖
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysFileService.UploadSignature(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            上传电子签名 🔖
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysFileService.UpdateFileByDataId(System.Int64,System.Collections.Generic.List{Admin.NET.Core.SysFile})">
            <summary>
            更新文件的业务数据Id
            </summary>
            <param name="dataId"></param>
            <param name="sysFiles"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysFileService.DeteleFileByDataId(System.Int64)">
            <summary>
            删除业务数据对应的文件
            </summary>
            <param name="dataId"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.DbJobPersistence">
            <summary>
            作业持久化（数据库）
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.DbJobPersistence.PreloadAsync(System.Threading.CancellationToken)">
            <summary>
            作业调度服务启动时
            </summary>
            <param name="stoppingToken"></param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:Admin.NET.Core.Service.DbJobPersistence.OnLoadingAsync(Furion.Schedule.SchedulerBuilder,System.Threading.CancellationToken)">
            <summary>
            作业计划初始化通知
            </summary>
            <param name="builder"></param>
            <param name="stoppingToken"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.DbJobPersistence.OnChangedAsync(Furion.Schedule.PersistenceContext)">
            <summary>
            作业计划Scheduler的JobDetail变化时
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.DbJobPersistence.OnTriggerChangedAsync(Furion.Schedule.PersistenceTriggerContext)">
            <summary>
            作业计划Scheduler的触发器Trigger变化时
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.DbJobPersistence.OnExecutionRecordAsync(Furion.Schedule.PersistenceExecutionRecordContext)">
            <summary>
            作业触发器运行记录
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Admin.NET.Core.Service.JobDetailInput.JobId">
            <summary>
            作业Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageJobDetailInput.JobId">
            <summary>
            作业Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageJobDetailInput.GroupName">
            <summary>
            组名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageJobDetailInput.Description">
            <summary>
            描述信息
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddJobDetailInput.JobId">
            <summary>
            作业Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.JobDetailOutput.JobDetail">
            <summary>
            作业信息
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.JobDetailOutput.JobTriggers">
            <summary>
            触发器集合
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.JobTriggerInput.JobId">
            <summary>
            作业Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.JobTriggerInput.TriggerId">
            <summary>
            触发器Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddJobTriggerInput.JobId">
            <summary>
            作业Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddJobTriggerInput.TriggerId">
            <summary>
            触发器Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageJobTriggerRecordInput.JobId">
            <summary>
            作业Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageJobTriggerRecordInput.TriggerId">
            <summary>
            触发器Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.JobClusterServer">
            <summary>
            作业集群控制
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.JobClusterServer.Start(Furion.Schedule.JobClusterContext)">
            <summary>
            当前作业调度器启动通知
            </summary>
            <param name="context">作业集群服务上下文</param>
        </member>
        <member name="M:Admin.NET.Core.Service.JobClusterServer.WaitingForAsync(Furion.Schedule.JobClusterContext)">
            <summary>
            等待被唤醒
            </summary>
            <param name="context">作业集群服务上下文</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.JobClusterServer.Stop(Furion.Schedule.JobClusterContext)">
            <summary>
            当前作业调度器停止通知
            </summary>
            <param name="context">作业集群服务上下文</param>
        </member>
        <member name="M:Admin.NET.Core.Service.JobClusterServer.Crash(Furion.Schedule.JobClusterContext)">
            <summary>
            当前作业调度器宕机
            </summary>
            <param name="context">作业集群服务上下文</param>
        </member>
        <member name="M:Admin.NET.Core.Service.JobClusterServer.WorkNowAsync(System.String)">
            <summary>
            指示集群可以工作
            </summary>
            <param name="clusterId">集群 Id</param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.JobMonitor">
            <summary>
            作业执行监视器
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysJobService">
            <summary>
            系统作业任务服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysJobService.PageJobDetail(Admin.NET.Core.Service.PageJobDetailInput)">
            <summary>
            获取作业分页列表 ⏰
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysJobService.ListJobGroup">
            <summary>
            获取作业组名称集合 ⏰
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysJobService.AddJobDetail(Admin.NET.Core.Service.AddJobDetailInput)">
            <summary>
            添加作业 ⏰
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysJobService.UpdateJobDetail(Admin.NET.Core.Service.UpdateJobDetailInput)">
            <summary>
            更新作业 ⏰
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysJobService.DeleteJobDetail(Admin.NET.Core.Service.DeleteJobDetailInput)">
            <summary>
            删除作业 ⏰
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysJobService.GetJobTriggerList(Admin.NET.Core.Service.JobDetailInput)">
            <summary>
            获取触发器列表 ⏰
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysJobService.AddJobTrigger(Admin.NET.Core.Service.AddJobTriggerInput)">
            <summary>
            添加触发器 ⏰
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysJobService.UpdateJobTrigger(Admin.NET.Core.Service.UpdateJobTriggerInput)">
            <summary>
            更新触发器 ⏰
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysJobService.DeleteJobTrigger(Admin.NET.Core.Service.DeleteJobTriggerInput)">
            <summary>
            删除触发器 ⏰
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysJobService.PauseAllJob">
            <summary>
            暂停所有作业 ⏰
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysJobService.StartAllJob">
            <summary>
            启动所有作业 ⏰
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysJobService.PauseJob(Admin.NET.Core.Service.JobDetailInput)">
            <summary>
            暂停作业 ⏰
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysJobService.StartJob(Admin.NET.Core.Service.JobDetailInput)">
            <summary>
            启动作业 ⏰
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysJobService.CancelJob(Admin.NET.Core.Service.JobDetailInput)">
            <summary>
            取消作业 ⏰
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysJobService.RunJob(Admin.NET.Core.Service.JobDetailInput)">
            <summary>
            执行作业 ⏰
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysJobService.PauseTrigger(Admin.NET.Core.Service.JobTriggerInput)">
            <summary>
            暂停触发器 ⏰
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysJobService.StartTrigger(Admin.NET.Core.Service.JobTriggerInput)">
            <summary>
            启动触发器 ⏰
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysJobService.CancelSleep">
            <summary>
            强制唤醒作业调度器 ⏰
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysJobService.PersistAll">
            <summary>
            强制触发所有作业持久化 ⏰
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysJobService.GetJobClusterList">
            <summary>
            获取集群列表 ⏰
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysJobService.PageJobTriggerRecord(Admin.NET.Core.Service.PageJobTriggerRecordInput)">
            <summary>
            获取作业触发器运行记录分页列表 ⏰
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysJobService.ClearJobTriggerRecord">
            <summary>
            清空作业触发器运行记录 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysJobService.ClearExpireJobTriggerRecord(Admin.NET.Core.SysJobTriggerRecord)">
            <summary>
            清空不保留的作业触发器运行记录 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="P:Admin.NET.Core.Service.PageOpLogInput.ControllerName">
            <summary>
            模块名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageVisLogInput.ActionName">
             <summary>
             方法名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageLogInput.Account">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageLogInput.Elapsed">
            <summary>
            操作用时
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageLogInput.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageLogInput.RemoteIp">
            <summary>
            IP地址
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageLogInput.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LogInput.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LogInput.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LogVisOutput.Location">
            <summary>
            登录地点
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LogVisOutput.Longitude">
            <summary>
            经度
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LogVisOutput.Latitude">
            <summary>
            维度
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LogVisOutput.RealName">
            <summary>
            真实姓名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.LogVisOutput.LogDateTime">
            <summary>
            日志时间
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysLogDiffService">
            <summary>
            系统差异日志服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysLogDiffService.Page(Admin.NET.Core.Service.PageLogInput)">
            <summary>
            获取差异日志分页列表 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysLogDiffService.GetDetail(System.Int64)">
            <summary>
            获取差异日志详情 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.SysLogExService">
            <summary>
            系统异常日志服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysLogExService.Page(Admin.NET.Core.Service.PageExLogInput)">
            <summary>
            获取异常日志分页列表 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysLogExService.GetDetail(System.Int64)">
            <summary>
            获取异常日志详情 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysLogExService.Clear">
            <summary>
            清空异常日志 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysLogExService.ExportLogEx(Admin.NET.Core.Service.LogInput)">
            <summary>
            导出异常日志 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.SysLogOpService">
            <summary>
            系统操作日志服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysLogOpService.Page(Admin.NET.Core.Service.PageOpLogInput)">
            <summary>
            获取操作日志分页列表 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysLogOpService.GetDetail(System.Int64)">
            <summary>
            获取操作日志详情 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysLogOpService.Clear">
            <summary>
            清空操作日志 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysLogOpService.ExportLogOp(Admin.NET.Core.Service.LogInput)">
            <summary>
            导出操作日志 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.SysLogVisService">
            <summary>
            系统访问日志服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysLogVisService.Page(Admin.NET.Core.Service.PageVisLogInput)">
            <summary>
            获取访问日志分页列表 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysLogVisService.Clear">
            <summary>
            清空访问日志 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysLogVisService.GetList">
            <summary>
            获取访问日志列表 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="P:Admin.NET.Core.Service.MenuInput.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MenuInput.Type">
            <summary>
            菜单类型（1目录 2菜单 3按钮）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MenuInput.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddMenuInput.Title">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddMenuInput.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.MenuOutput">
            <summary>
            系统菜单返回结果
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MenuOutput.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MenuOutput.Pid">
            <summary>
            父Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MenuOutput.Type">
            <summary>
            菜单类型（0目录 1菜单 2按钮）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MenuOutput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MenuOutput.Path">
            <summary>
            路由地址
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MenuOutput.Component">
            <summary>
            组件路径
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MenuOutput.Permission">
            <summary>
            权限标识
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MenuOutput.Redirect">
            <summary>
            重定向
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MenuOutput.OrderNo">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MenuOutput.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MenuOutput.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MenuOutput.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MenuOutput.UpdateTime">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MenuOutput.CreateUserName">
            <summary>
            创建者姓名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MenuOutput.UpdateUserName">
            <summary>
            修改者姓名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MenuOutput.Meta">
            <summary>
            菜单Meta
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MenuOutput.Children">
            <summary>
            菜单子项
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysMenuMeta">
            <summary>
            菜单Meta配置
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.SysMenuMeta.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.SysMenuMeta.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.SysMenuMeta.IsIframe">
            <summary>
            是否内嵌
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.SysMenuMeta.IsLink">
            <summary>
            外链链接
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.SysMenuMeta.IsHide">
            <summary>
            是否隐藏
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.SysMenuMeta.IsKeepAlive">
            <summary>
            是否缓存
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.SysMenuMeta.IsAffix">
            <summary>
            是否固定
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysMenuMapper">
            <summary>
            配置菜单对象映射
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysMenuService">
            <summary>
            系统菜单服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysMenuService.GetLoginMenuTree">
            <summary>
            获取登录菜单树 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysMenuService.GetList(Admin.NET.Core.Service.MenuInput)">
            <summary>
            获取菜单列表 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysMenuService.AddMenu(Admin.NET.Core.Service.AddMenuInput)">
            <summary>
            增加菜单 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysMenuService.UpdateMenu(Admin.NET.Core.Service.UpdateMenuInput)">
            <summary>
            更新菜单 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysMenuService.DeleteMenu(Admin.NET.Core.Service.DeleteMenuInput)">
            <summary>
            删除菜单 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysMenuService.CheckMenuParam(Admin.NET.Core.SysMenu)">
            <summary>
            增加和编辑时检查菜单数据
            </summary>
            <param name="menu"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysMenuService.GetOwnBtnPermList">
            <summary>
            获取用户拥有按钮权限集合（缓存） 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysMenuService.GetAllBtnPermList">
            <summary>
            获取系统所有按钮权限集合（缓存）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysMenuService.GetSugarQueryableAndTenantId(System.Int64)">
            <summary>
            根据租户id获取构建菜单联表查询实例
            </summary>
            <param name="tenantId"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysMenuService.DeleteMenuCache">
            <summary>
            清除菜单和按钮缓存
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysMenuService.GetMenuIdList">
            <summary>
            获取当前用户菜单Id集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysMenuService.ExcludeParentMenuOfFullySelected(System.Collections.Generic.List{System.Int64})">
            <summary>
            排除前端存在全选的父级菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.SysEmailService">
            <summary>
            系统邮件发送服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysEmailService.SendEmail(System.String,System.String,System.String)">
            <summary>
            发送邮件 📧
            </summary>
            <param name="content"></param>
            <param name="title"></param>
            <param name="toEmail"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.SysMessageService">
            <summary>
            系统消息发送服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysMessageService.SendAllUser(Admin.NET.Core.MessageInput)">
            <summary>
            发送消息给所有人 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysMessageService.SendOtherUser(Admin.NET.Core.MessageInput)">
            <summary>
            发送消息给除了发送人的其他人 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysMessageService.SendUser(Admin.NET.Core.MessageInput)">
            <summary>
            发送消息给某个人 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysMessageService.SendUsers(Admin.NET.Core.MessageInput)">
            <summary>
            发送消息给某些人 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.SysSmsService">
            <summary>
            系统短信服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysSmsService.SendSms(System.String,System.String)">
            <summary>
            发送短信 📨
            </summary>
            <param name="phoneNumber"></param>
            <param name="templateId">短信模板id</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysSmsService.VerifyCode(Admin.NET.Core.SmsVerifyCodeInput)">
            <summary>
            校验短信验证码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysSmsService.AliyunSendSms(System.String,System.String)">
            <summary>
            阿里云发送短信 📨
            </summary>
            <param name="phoneNumber">手机号</param>
            <param name="templateId">短信模板id</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysSmsService.AliyunSendSmsTemplate(System.String,System.Object,System.String)">
            <summary>
            发送短信模板
            </summary>
            <param name="phoneNumber">手机号</param>
            <param name="templateParam">短信内容</param>
            <param name="templateId">短信模板id</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysSmsService.TencentSendSms(System.String,System.String)">
            <summary>
            腾讯云发送短信 📨
            </summary>
            <param name="phoneNumber"></param>
            <param name="templateId">短信模板id</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysSmsService.CreateAliyunClient">
            <summary>
            阿里云短信配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysSmsService.CreateTencentClient">
            <summary>
            腾讯云短信配置
            </summary>
            <returns></returns>
        </member>
        <member name="P:Admin.NET.Core.Service.PageNoticeInput.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageNoticeInput.Type">
            <summary>
            类型（1通知 2公告）
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysNoticeService">
            <summary>
            系统通知公告服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysNoticeService.Page(Admin.NET.Core.Service.PageNoticeInput)">
            <summary>
            获取通知公告分页列表 📢
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysNoticeService.AddNotice(Admin.NET.Core.Service.AddNoticeInput)">
            <summary>
            增加通知公告 📢
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysNoticeService.UpdateNotice(Admin.NET.Core.Service.UpdateNoticeInput)">
            <summary>
            更新通知公告 📢
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysNoticeService.DeleteNotice(Admin.NET.Core.Service.DeleteNoticeInput)">
            <summary>
            删除通知公告 📢
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysNoticeService.Public(Admin.NET.Core.Service.NoticeInput)">
            <summary>
            发布通知公告 📢
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysNoticeService.SetRead(Admin.NET.Core.Service.NoticeInput)">
            <summary>
            设置通知公告已读状态 📢
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysNoticeService.PageReceived(Admin.NET.Core.Service.PageNoticeInput)">
            <summary>
            获取接收的通知公告
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysNoticeService.GetUnReadList">
            <summary>
            获取未读的通知公告 📢
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysNoticeService.InitNoticeInfo(Admin.NET.Core.SysNotice)">
            <summary>
            初始化通知公告信息
            </summary>
            <param name="notice"></param>
        </member>
        <member name="T:Admin.NET.Core.Service.SysOAuthService">
            <summary>
            系统OAuth服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOAuthService.SignIn(System.String,System.String)">
            <summary>
            第三方登录 🔖
            </summary>
            <param name="provider"></param>
            <param name="redirectUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOAuthService.SignInCallback(System.String,System.String)">
            <summary>
            授权回调 🔖
            </summary>
            <param name="provider"></param>
            <param name="redirectUrl"></param>
            <returns></returns>
        </member>
        <member name="P:Admin.NET.Core.Service.PageOnlineUserInput.UserName">
            <summary>
            账号名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageOnlineUserInput.RealName">
            <summary>
            真实姓名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageOnlineUserInput.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysOnlineUserService">
            <summary>
            系统在线用户服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOnlineUserService.Page(Admin.NET.Core.Service.PageOnlineUserInput)">
            <summary>
            获取在线用户分页列表 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOnlineUserService.ForceOffline(Admin.NET.Core.SysOnlineUser)">
            <summary>
            强制下线 🔖
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOnlineUserService.PublicNotice(Admin.NET.Core.SysNotice,System.Collections.Generic.List{System.Int64})">
            <summary>
            发布站内消息
            </summary>
            <param name="notice"></param>
            <param name="userIds"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOnlineUserService.SingleLogin(System.Int64)">
            <summary>
            单用户登录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOnlineUserService.ForceOffline(System.Int64)">
            <summary>
            通过用户ID踢掉在线用户
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.OpenAccessInput">
            <summary>
            开放接口身份输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.OpenAccessInput.AccessKey">
            <summary>
            身份标识
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddOpenAccessInput.AccessKey">
            <summary>
            身份标识
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddOpenAccessInput.AccessSecret">
            <summary>
            密钥
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddOpenAccessInput.BindUserId">
            <summary>
            绑定用户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.GenerateSignatureInput.AccessKey">
            <summary>
            身份标识
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.GenerateSignatureInput.AccessSecret">
            <summary>
            密钥
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.GenerateSignatureInput.Method">
            <summary>
            请求方法
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.GenerateSignatureInput.Url">
            <summary>
            请求接口地址
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.GenerateSignatureInput.Timestamp">
            <summary>
            时间戳
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.GenerateSignatureInput.Nonce">
            <summary>
            随机数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.OpenAccessOutput.BindUserAccount">
            <summary>
            绑定用户账号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.OpenAccessOutput.BindTenantName">
            <summary>
            绑定租户名称
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysOpenAccessService">
            <summary>
            开放接口身份服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOpenAccessService.#ctor(Admin.NET.Core.SqlSugarRepository{Admin.NET.Core.SysOpenAccess},Admin.NET.Core.Service.SysCacheService)">
            <summary>
            开放接口身份服务构造函数
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOpenAccessService.GenerateSignature(Admin.NET.Core.Service.GenerateSignatureInput)">
            <summary>
            生成签名
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOpenAccessService.Page(Admin.NET.Core.Service.OpenAccessInput)">
            <summary>
            获取开放接口身份分页列表 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOpenAccessService.AddOpenAccess(Admin.NET.Core.Service.AddOpenAccessInput)">
            <summary>
            增加开放接口身份 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOpenAccessService.UpdateOpenAccess(Admin.NET.Core.Service.UpdateOpenAccessInput)">
            <summary>
            更新开放接口身份 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOpenAccessService.DeleteOpenAccess(Admin.NET.Core.Service.DeleteOpenAccessInput)">
            <summary>
            删除开放接口身份 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOpenAccessService.CreateSecret">
            <summary>
            创建密钥 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOpenAccessService.GetByKey(System.String)">
            <summary>
            根据 Key 获取对象
            </summary>
            <param name="accessKey"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOpenAccessService.GetSignatureAuthenticationEventImpl">
            <summary>
            Signature 身份验证事件默认实现
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.OrgInput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.OrgInput.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.OrgInput.Type">
            <summary>
            机构类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.OrgInput.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddOrgInput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddOrgInput.Type">
            <summary>
            机构类型
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysOrgService">
            <summary>
            系统机构服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOrgService.GetList(Admin.NET.Core.Service.OrgInput)">
            <summary>
            获取机构列表 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOrgService.HandlerOrgTree(System.Collections.Generic.List{Admin.NET.Core.SysOrg},System.Collections.Generic.List{System.Int64})">
            <summary>
            递归禁用没权限的机构
            </summary>
            <param name="orgTree"></param>
            <param name="userOrgIdList"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOrgService.AddOrg(Admin.NET.Core.Service.AddOrgInput)">
            <summary>
            增加机构 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOrgService.BatchAddOrgs(System.Collections.Generic.List{Admin.NET.Core.SysOrg})">
            <summary>
            批量增加机构
            </summary>
            <param name="orgs"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOrgService.UpdateOrg(Admin.NET.Core.Service.UpdateOrgInput)">
            <summary>
            更新机构 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOrgService.DeleteOrg(Admin.NET.Core.Service.DeleteOrgInput)">
            <summary>
            删除机构 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOrgService.DeleteAllUserOrgCache(System.Int64,System.Int64)">
            <summary>
            删除与此机构、父机构有关的用户机构缓存
            </summary>
            <param name="orgId"></param>
            <param name="orgPid"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOrgService.GetUserOrgIdList">
            <summary>
            获取当前用户机构Id集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOrgService.GetUserOrgIdList(System.Int64,System.Int64)">
            <summary>
            根据指定用户Id获取机构Id集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOrgService.GetUserRoleOrgIdList(System.Int64,System.Int64)">
            <summary>
            获取用户角色机构Id集合
            </summary>
            <param name="userId"></param>
            <param name="userOrgId">用户的机构Id</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOrgService.GetUserHasRole(System.Int64,Admin.NET.Core.SysRole)">
            <summary>
            判定用户是否有某角色权限
            </summary>
            <param name="userId"></param>
            <param name="role">角色代码</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOrgService.GetUserOrgIdList(System.Collections.Generic.List{Admin.NET.Core.SysRole},System.Int64,System.Int64)">
            <summary>
            根据角色Id集合获取机构Id集合
            </summary>
            <param name="roleList"></param>
            <param name="userId"></param>
            <param name="userOrgId">用户的机构Id</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOrgService.GetOrgIdListByDataScope(System.Int64,System.Int32)">
            <summary>
            根据数据范围获取机构Id集合
            </summary>
            <param name="userOrgId">用户的机构Id</param>
            <param name="dataScope"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysOrgService.GetChildIdListWithSelfById(System.Int64)">
            <summary>
            根据节点Id获取子节点Id集合(包含自己)
            </summary>
            <param name="pid"></param>
            <returns></returns>
        </member>
        <member name="P:Admin.NET.Core.Service.PagePluginInput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PagePluginInput.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PagePluginInput.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddPluginInput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysPluginService">
            <summary>
            系统动态插件服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysPluginService.Page(Admin.NET.Core.Service.PagePluginInput)">
            <summary>
            获取动态插件列表 🧩
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysPluginService.AddPlugin(Admin.NET.Core.Service.AddPluginInput)">
            <summary>
            增加动态插件 🧩
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysPluginService.UpdatePlugin(Admin.NET.Core.Service.UpdatePluginInput)">
            <summary>
            更新动态插件 🧩
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysPluginService.DeletePlugin(Admin.NET.Core.Service.DeletePluginInput)">
            <summary>
            删除动态插件 🧩
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysPluginService.CompileAssembly(System.String,System.String)">
            <summary>
            添加动态程序集/接口 🧩
            </summary>
            <param name="csharpCode"></param>
            <param name="assemblyName">程序集名称</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysPluginService.RemoveAssembly(System.String)">
            <summary>
            移除动态程序集/接口 🧩
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PosInput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PosInput.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PosInput.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddPosInput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysPosService">
            <summary>
            系统职位服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysPosService.GetList(Admin.NET.Core.Service.PosInput)">
            <summary>
            获取职位列表 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysPosService.AddPos(Admin.NET.Core.Service.AddPosInput)">
            <summary>
            增加职位 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysPosService.UpdatePos(Admin.NET.Core.Service.UpdatePosInput)">
            <summary>
            更新职位 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysPosService.DeletePos(Admin.NET.Core.Service.DeletePosInput)">
            <summary>
            删除职位 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="P:Admin.NET.Core.Service.PagePrintInput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PagePrintInput.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PagePrintInput.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddPrintInput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysPrintService">
            <summary>
            系统打印模板服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysPrintService.Page(Admin.NET.Core.Service.PagePrintInput)">
            <summary>
            获取打印模板列表 🖨️
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysPrintService.GetPrint(System.String)">
            <summary>
            获取打印模板 🖨️
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysPrintService.AddPrint(Admin.NET.Core.Service.AddPrintInput)">
            <summary>
            增加打印模板 🖨️
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysPrintService.UpdatePrint(Admin.NET.Core.Service.UpdatePrintInput)">
            <summary>
            更新打印模板 🖨️
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysPrintService.DeletePrint(Admin.NET.Core.Service.DeletePrintInput)">
            <summary>
            删除打印模板 🖨️
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="P:Admin.NET.Core.Service.PageRegionInput.Pid">
            <summary>
            父节点Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageRegionInput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageRegionInput.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddRegionInput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysRegionService">
            <summary>
            系统行政区域服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRegionService.Page(Admin.NET.Core.Service.PageRegionInput)">
            <summary>
            获取行政区域分页列表 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRegionService.GetList(Admin.NET.Core.Service.RegionInput)">
            <summary>
            获取行政区域列表 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRegionService.GetTree">
            <summary>
            获取行政区域树 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRegionService.AddRegion(Admin.NET.Core.Service.AddRegionInput)">
            <summary>
            增加行政区域 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRegionService.UpdateRegion(Admin.NET.Core.Service.UpdateRegionInput)">
            <summary>
            更新行政区域 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRegionService.DeleteRegion(Admin.NET.Core.Service.DeleteRegionInput)">
            <summary>
            删除行政区域 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRegionService.Sync">
            <summary>
            同步行政区域 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRegionService.SyncByMap(System.Int32)">
            <summary>
            从统计局地图页面同步
            </summary>
            <param name="syncLevel"></param>
        </member>
        <member name="P:Admin.NET.Core.Service.RoleInput.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageRoleInput.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageRoleInput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageRoleInput.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddRoleInput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddRoleInput.MenuIdList">
            <summary>
            菜单Id集合
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.RoleMenuInput">
            <summary>
            系统角色菜单
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.RoleMenuInput.MenuIdList">
            <summary>
            菜单Id集合
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.RoleMenuOutput">
            <summary>
            角色菜单输出参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.RoleMenuOutput.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.RoleMenuOutput.Title">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.RoleOrgInput">
            <summary>
            授权角色机构
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.RoleOrgInput.DataScope">
            <summary>
            数据范围
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.RoleOrgInput.OrgIdList">
            <summary>
            机构Id集合
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.RoleOutput">
            <summary>
            角色列表输出参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.RoleOutput.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.RoleOutput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.RoleOutput.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.RoleOutput.tenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysRoleMenuService">
            <summary>
            系统角色菜单服务
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRoleMenuService.GetRoleMenuIdList(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据角色Id集合获取菜单Id集合
            </summary>
            <param name="roleIdList"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRoleMenuService.GrantRoleMenu(Admin.NET.Core.Service.RoleMenuInput)">
            <summary>
            授权角色菜单
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRoleMenuService.DeleteRoleMenuByMenuIdList(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据菜单Id集合删除角色菜单
            </summary>
            <param name="menuIdList"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRoleMenuService.DeleteRoleMenuByRoleId(System.Int64)">
            <summary>
            根据角色Id删除角色菜单
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.SysRoleOrgService">
            <summary>
            系统角色机构服务
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRoleOrgService.GrantRoleOrg(Admin.NET.Core.Service.RoleOrgInput)">
            <summary>
            授权角色机构
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRoleOrgService.GetRoleOrgIdList(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据角色Id集合获取角色机构Id集合
            </summary>
            <param name="roleIdList"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRoleOrgService.DeleteRoleOrgByOrgIdList(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据机构Id集合删除角色机构
            </summary>
            <param name="orgIdList"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRoleOrgService.DeleteRoleOrgByRoleId(System.Int64)">
            <summary>
            根据角色Id删除角色机构
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.SysRoleService">
            <summary>
            系统角色服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRoleService.Page(Admin.NET.Core.Service.PageRoleInput)">
            <summary>
            获取角色分页列表 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRoleService.GetList">
            <summary>
            获取角色列表 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRoleService.AddRole(Admin.NET.Core.Service.AddRoleInput)">
            <summary>
            增加角色 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRoleService.UpdateRoleMenu(Admin.NET.Core.Service.AddRoleInput)">
            <summary>
            更新角色菜单权限
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRoleService.UpdateRole(Admin.NET.Core.Service.UpdateRoleInput)">
            <summary>
            更新角色 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRoleService.DeleteRole(Admin.NET.Core.Service.DeleteRoleInput)">
            <summary>
            删除角色 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRoleService.GrantMenu(Admin.NET.Core.Service.RoleMenuInput)">
            <summary>
            授权角色菜单 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRoleService.GrantDataScope(Admin.NET.Core.Service.RoleOrgInput)">
            <summary>
            授权角色数据范围 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRoleService.GetOwnMenuList(Admin.NET.Core.Service.RoleInput)">
            <summary>
            根据角色Id获取菜单Id集合 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRoleService.GetOwnOrgList(Admin.NET.Core.Service.RoleInput)">
            <summary>
            根据角色Id获取机构Id集合 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysRoleService.SetStatus(Admin.NET.Core.Service.RoleInput)">
            <summary>
            设置角色状态 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="P:Admin.NET.Core.Service.ScheduleInput.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.ListScheduleInput.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddScheduleInput.Content">
            <summary>
            日程内容
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysScheduleService">
            <summary>
            系统日程服务
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysScheduleService.Page(Admin.NET.Core.Service.ListScheduleInput)">
            <summary>
            获取日程列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysScheduleService.GetDetail(System.Int64)">
            <summary>
            获取日程详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysScheduleService.AddUserSchedule(Admin.NET.Core.Service.AddScheduleInput)">
            <summary>
            增加日程
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysScheduleService.UpdateUserSchedule(Admin.NET.Core.Service.UpdateScheduleInput)">
            <summary>
            更新日程
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysScheduleService.DeleteUserSchedule(Admin.NET.Core.Service.DeleteScheduleInput)">
            <summary>
            删除日程
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysScheduleService.SetStatus(Admin.NET.Core.Service.ScheduleInput)">
            <summary>
            设置日程状态
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.SysServerService">
            <summary>
            系统服务器监控服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysServerService.HardwareInfo">
            <summary>
            获取服务器硬件信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysServerService.RuntimeInfo">
            <summary>
            获取服务器运行时信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysServerService.NuGetPackagesInfo">
            <summary>
            获取框架主要程序集
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysServerService.GetServerBase">
            <summary>
            获取服务器配置信息 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysServerService.GetServerUsed">
            <summary>
            获取服务器使用信息 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysServerService.GetServerDisk">
            <summary>
            获取服务器磁盘信息 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysServerService.GetAssemblyList">
            <summary>
            获取框架主要程序集 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="P:Admin.NET.Core.Service.PageTemplateInput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageTemplateInput.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageTemplateInput.GroupName">
            <summary>
            分组名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageTemplateInput.Type">
            <summary>
            模板类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageTemplateInput.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.AddTemplateInput">
            <summary>
            新增模板输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddTemplateInput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddTemplateInput.Type">
            <summary>
            模板类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddTemplateInput.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddTemplateInput.GroupName">
            <summary>
            分组名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddTemplateInput.Content">
            <summary>
            模板内容
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.UpdateTemplateInput">
            <summary>
            更新模板输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UpdateTemplateInput.Id">
            <summary>
            主键Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.ProViewTemplateInput">
            <summary>
            预览模板输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.ProViewTemplateInput.Data">
            <summary>
            渲染参数
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.RenderTemplateInput">
            <summary>
            模板渲染输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.RenderTemplateInput.Content">
            <summary>
            模板内容
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.RenderTemplateInput.Data">
            <summary>
            渲染参数
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysTemplateService">
            <summary>
            系统消息模板服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTemplateService.Page(Admin.NET.Core.Service.PageTemplateInput)">
            <summary>
            获取模板列表 📑
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTemplateService.GetTemplate(System.String)">
            <summary>
            获取模板 📑
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTemplateService.ProView(Admin.NET.Core.Service.ProViewTemplateInput)">
            <summary>
            预览模板内容 📑
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTemplateService.AddTemplate(Admin.NET.Core.Service.AddTemplateInput)">
            <summary>
            增加模板 📑
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTemplateService.UpdateTemplate(Admin.NET.Core.Service.UpdateTemplateInput)">
            <summary>
            更新模板 📑
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTemplateService.DeleteTemplate(Admin.NET.Core.BaseIdInput)">
            <summary>
            删除模板 📑
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTemplateService.GetGroupList">
            <summary>
            获取分组列表 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTemplateService.Render(Admin.NET.Core.Service.RenderTemplateInput)">
            <summary>
            渲染模板内容 📑
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTemplateService.RenderAsync(System.String,System.Object)">
            <summary>
            渲染模板内容 📑
            </summary>
            <param name="content"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTemplateService.RenderByCode(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            根据编码渲染模板内容
            </summary>
            <param name="code"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="P:Admin.NET.Core.Service.TenantInput.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageTenantInput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageTenantInput.Phone">
            <summary>
            电话
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddTenantInput.Name">
            <summary>
            租户名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddTenantInput.AdminAccount">
            <summary>
            租管账号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddTenantInput.Title">
            <summary>
            系统主标题
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddTenantInput.ViceTitle">
            <summary>
            系统副标题
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddTenantInput.ViceDesc">
            <summary>
            系统描述
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddTenantInput.Copyright">
            <summary>
            版权说明
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddTenantInput.Icp">
            <summary>
            ICP备案号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddTenantInput.IcpUrl">
            <summary>
            ICP地址
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddTenantInput.LogoBase64">
            <summary>
            Logo图片Base64码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddTenantInput.LogoFileName">
            <summary>
            Logo文件名
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.TenantMenuInput">
            <summary>
            租户菜单
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.TenantMenuInput.MenuIdList">
            <summary>
            菜单Id集合
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.TenantUserInput.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.TenantIdInput.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.TenantOutput.Name">
            <summary>
            租户名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.TenantOutput.AdminAccount">
            <summary>
            管理员账号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.TenantOutput.Email">
            <summary>
            电子邮箱
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.TenantOutput.Phone">
            <summary>
            电话
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysTenantService">
            <summary>
            系统租户管理服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.Page(Admin.NET.Core.Service.PageTenantInput)">
            <summary>
            获取租户分页列表 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.GetList">
            <summary>
            获取租户列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.GetCurrentTenantSysInfo">
            <summary>
            获取当前租户系统信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.GetTenantDbList">
            <summary>
            获取库隔离的租户列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.AddTenant(Admin.NET.Core.Service.AddTenantInput)">
            <summary>
            增加租户 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.SetLogoUrl(Admin.NET.Core.SysTenant,System.String,System.String)">
            <summary>
            设置logo
            </summary>
            <param name="tenant"></param>
            <param name="logoBase64"></param>
            <param name="logoFileName"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.SetStatus(Admin.NET.Core.Service.TenantInput)">
            <summary>
            设置租户状态 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.InitNewTenant(Admin.NET.Core.Service.TenantOutput)">
            <summary>
            新增租户初始化
            </summary>
            <param name="tenant"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.GetTenantDefaultMenuList(System.Boolean)">
            <summary>
            获取租户默认菜单
            </summary>
            <param name="ignoreHome">如果某租户需要定制主页，可以忽略</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.GetSeedDataTypes(Admin.NET.Core.DbConnectionConfig,System.String)">
            <summary>
            获取种子数据类型
            </summary>
            <param name="config">数据库连接配置</param>
            <param name="typeName"></param>
            <returns>种子数据类型列表</returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.GetBaseRoleMenuIdList">
            <summary>
            获取租户默认菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.DeleteTenant(Admin.NET.Core.Service.DeleteTenantInput)">
            <summary>
            删除租户 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.UpdateTenant(Admin.NET.Core.Service.UpdateTenantInput)">
            <summary>
            更新租户 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.GrantMenu(Admin.NET.Core.Service.TenantMenuInput)">
            <summary>
            授权租户菜单 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.GetTenantMenuList(Admin.NET.Core.BaseIdInput)">
            <summary>
            获取租户菜单Id集合 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.ResetPwd(Admin.NET.Core.Service.TenantUserInput)">
            <summary>
            重置租户管理员密码 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.ChangeTenant(Admin.NET.Core.BaseIdInput)">
            <summary>
            切换租户 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.GoTenant(Admin.NET.Core.BaseIdInput)">
            <summary>
            进入租管端 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.SyncGrantMenu(Admin.NET.Core.BaseIdInput)">
            <summary>
            同步授权菜单(用于版本更新后，同步授权数据) 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.GetAccessTokenInNotSingleLogin(Admin.NET.Core.SysUser)">
            <summary>
            在非单用户登录模式下获取登录令牌
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.CacheTenant(System.Int64)">
            <summary>
            缓存所有租户
            </summary>
            <param name="tenantId"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.CreateDb(Admin.NET.Core.Service.TenantInput)">
            <summary>
            创建租户数据库 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.UserList(Admin.NET.Core.Service.TenantIdInput)">
            <summary>
            获取租户下的用户列表 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysTenantService.GetTenantDbConnectionScope(System.Int64)">
            <summary>
            获取租户数据库连接
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.RestoreInput">
            <summary>
            还原输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.RestoreInput.FileName">
            <summary>
            文件名
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.WebHookInput">
            <summary>
            WebHook输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WebHookInput.Key">
            <summary>
            密钥
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.BackupOutput.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.BackupOutput.FileName">
            <summary>
            文件名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.BackupOutput.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysUpdateService">
            <summary>
            系统更新管理服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUpdateService.List">
            <summary>
            备份列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUpdateService.Restore(Admin.NET.Core.Service.RestoreInput)">
            <summary>
            还原
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUpdateService.Update">
            <summary>
            从远端更新系统
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUpdateService.WebHook(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            仓库WebHook接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUpdateService.GetWebHookKey">
            <summary>
            获取WebHook接口密钥
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUpdateService.LogList">
            <summary>
            获取日志列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUpdateService.ClearLog">
            <summary>
            清空日志
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUpdateService.CheckConfig">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUpdateService.PrintfLog(System.String)">
            <summary>
            打印日志
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUpdateService.RunCommandAsync(System.String,System.String,System.String)">
            <summary>
            执行命令
            </summary>
            <param name="command">命令</param>
            <param name="arguments">参数</param>
            <param name="workingDirectory">工作目录</param>
        </member>
        <member name="P:Admin.NET.Core.Service.UserExtOrgInput.OrgId">
            <summary>
            机构Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UserExtOrgInput.PosId">
            <summary>
            职位Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UserExtOrgInput.JobNum">
            <summary>
            工号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UserExtOrgInput.PosLevel">
            <summary>
            职级
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UserExtOrgInput.JoinDate">
            <summary>
            入职日期
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.UserInput">
            <summary>
            设置用户状态输入参数
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.PageUserInput">
            <summary>
            获取用户分页列表输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageUserInput.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageUserInput.Account">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageUserInput.RealName">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageUserInput.PosName">
            <summary>
            职位名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageUserInput.Phone">
            <summary>
            手机号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageUserInput.OrgId">
            <summary>
            查询时所选机构Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.AddUserInput">
            <summary>
            增加用户输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddUserInput.Account">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddUserInput.RealName">
            <summary>
            真实姓名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddUserInput.DomainAccount">
            <summary>
            域用户
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddUserInput.RoleIdList">
            <summary>
            角色集合
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddUserInput.ExtOrgIdList">
            <summary>
            扩展机构集合
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.UpdateUserInput">
            <summary>
            更新用户输入参数
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.DeleteUserInput">
            <summary>
            删除用户输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.DeleteUserInput.OrgId">
            <summary>
            机构Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.ResetPwdUserInput">
            <summary>
            重置用户密码输入参数
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.ChangePwdInput">
            <summary>
            修改用户密码输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.ChangePwdInput.PasswordOld">
            <summary>
            当前密码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.ChangePwdInput.PasswordNew">
            <summary>
            新密码
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.UnlockLoginInput">
            <summary>
            解除登录锁定输入参数
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.UserMenuInput">
            <summary>
            系统用户菜单快捷导航输入
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UserMenuInput.MenuIdList">
            <summary>
            收藏菜单Id集合
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UserOutput.OrgName">
            <summary>
            机构名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UserOutput.PosName">
            <summary>
            职位名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UserOutput.RoleName">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UserOutput.DomainAccount">
            <summary>
            域用户
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.PageUserRegWayInput">
            <summary>
            注册方案分页查询输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageUserRegWayInput.Name">
            <summary>
            方案名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.PageUserRegWayInput.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.AddUserRegWayInput">
            <summary>
            注册方案增加输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddUserRegWayInput.Name">
            <summary>
            方案名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddUserRegWayInput.AccountType">
            <summary>
            账号类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddUserRegWayInput.RoleId">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddUserRegWayInput.OrgId">
            <summary>
            机构
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddUserRegWayInput.PosId">
            <summary>
            职位
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.UpdateUserRegWayInput">
            <summary>
            注册方案更新输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UpdateUserRegWayInput.Id">
            <summary>
            主键Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.UserRegWayOutput">
            <summary>
            注册方案输出参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UserRegWayOutput.RoleName">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UserRegWayOutput.OrgName">
            <summary>
            机构名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UserRegWayOutput.PosName">
            <summary>
            职位名称
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.UserRoleInput">
            <summary>
            授权用户角色
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UserRoleInput.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UserRoleInput.RoleIdList">
            <summary>
            角色Id集合
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysUserExtOrgService">
            <summary>
            系统用户扩展机构服务
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserExtOrgService.GetUserExtOrgList(System.Int64)">
            <summary>
            获取用户扩展机构集合
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserExtOrgService.UpdateUserExtOrg(System.Int64,System.Collections.Generic.List{Admin.NET.Core.SysUserExtOrg})">
            <summary>
            更新用户扩展机构
            </summary>
            <param name="userId"></param>
            <param name="extOrgList"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserExtOrgService.DeleteUserExtOrgByOrgIdList(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据机构Id集合删除扩展机构
            </summary>
            <param name="orgIdList"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserExtOrgService.DeleteUserExtOrgByUserId(System.Int64)">
            <summary>
            根据用户Id删除扩展机构
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserExtOrgService.HasUserOrg(System.Int64)">
            <summary>
            根据机构Id判断是否有用户
            </summary>
            <param name="orgId"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserExtOrgService.HasUserPos(System.Int64)">
            <summary>
            根据职位Id判断是否有用户
            </summary>
            <param name="posId"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.SysUserLdapService">
            <summary>
            用户域账号服务
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserLdapService.InsertUserLdapList(System.Int64,System.Collections.Generic.List{Admin.NET.Core.SysUserLdap})">
            <summary>
            批量插入域账号
            </summary>
            <param name="tenantId"></param>
            <param name="sysUserLdapList"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserLdapService.AddUserLdap(System.Int64,System.Int64,System.String,System.String)">
            <summary>
            增加域账号
            </summary>
            <param name="tenantId"></param>
            <param name="userId"></param>
            <param name="account"></param>
            <param name="domainAccount"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserLdapService.DeleteUserLdapByUserId(System.Int64)">
            <summary>
            删除域账号
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.SysUserMenuService">
            <summary>
            系统用户菜单快捷导航服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserMenuService.AddUserMenu(Admin.NET.Core.Service.UserMenuInput)">
            <summary>
            收藏菜单 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserMenuService.DeleteUserMenu(Admin.NET.Core.Service.UserMenuInput)">
            <summary>
            取消收藏菜单 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserMenuService.GetUserMenuList">
            <summary>
            获取当前用户收藏的菜单集合 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserMenuService.GetUserMenuIdList">
            <summary>
            获取当前用户收藏的菜单Id集合 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserMenuService.DeleteUserMenuList(System.Int64)">
            <summary>
            删除指定用户的收藏菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserMenuService.DeleteMenuList(System.Collections.Generic.List{System.Int64})">
            <summary>
            批量删除收藏菜单
            </summary>
            <param name="ids"></param>
        </member>
        <member name="T:Admin.NET.Core.Service.SysUserRegWayService">
            <summary>
            系统用户注册方案服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserRegWayService.List(Admin.NET.Core.Service.PageUserRegWayInput)">
            <summary>
            查询注册方案列表 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserRegWayService.Add(Admin.NET.Core.Service.AddUserRegWayInput)">
            <summary>
            增加注册方案 ➕
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserRegWayService.Update(Admin.NET.Core.Service.UpdateUserRegWayInput)">
            <summary>
            更新注册方案 ✏️
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserRegWayService.CheckData(Admin.NET.Core.Service.AddUserRegWayInput)">
            <summary>
            检查数据
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserRegWayService.Delete(Admin.NET.Core.BaseIdInput)">
            <summary>
            删除注册方案 ❌
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.SysUserRoleService">
            <summary>
            系统用户角色服务
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserRoleService.GrantUserRole(Admin.NET.Core.Service.UserRoleInput)">
            <summary>
            授权用户角色
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserRoleService.DeleteUserRoleByRoleId(System.Int64)">
            <summary>
            根据角色Id删除用户角色
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserRoleService.DeleteUserRoleByUserId(System.Int64)">
            <summary>
            根据用户Id删除用户角色
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserRoleService.GetUserRoleList(System.Int64)">
            <summary>
            根据用户Id获取角色集合
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserRoleService.GetUserRoleIdList(System.Int64)">
            <summary>
            根据用户Id获取角色Id集合
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserRoleService.GetUserIdList(System.Int64)">
            <summary>
            根据角色Id获取用户Id集合
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.SysUserService">
            <summary>
            系统用户服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserService.Page(Admin.NET.Core.Service.PageUserInput)">
            <summary>
            获取用户分页列表 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserService.AddUser(Admin.NET.Core.Service.AddUserInput)">
            <summary>
            增加用户 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserService.RegisterUser(Admin.NET.Core.Service.AddUserInput)">
            <summary>
            注册用户 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserService.UpdateUser(Admin.NET.Core.Service.UpdateUserInput)">
            <summary>
            更新用户 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserService.UpdateRoleAndExtOrg(Admin.NET.Core.Service.AddUserInput)">
            <summary>
            更新角色和扩展机构
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserService.DeleteUser(Admin.NET.Core.Service.DeleteUserInput)">
            <summary>
            删除用户 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserService.GetBaseInfo">
            <summary>
            查看用户基本信息 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserService.GetOrgInfo">
            <summary>
            查询用户组织机构信息 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserService.UpdateBaseInfo(Admin.NET.Core.SysUser)">
            <summary>
            更新用户基本信息 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserService.SetStatus(Admin.NET.Core.Service.UserInput)">
            <summary>
            设置用户状态 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserService.GrantRole(Admin.NET.Core.Service.UserRoleInput)">
            <summary>
            授权用户角色 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserService.ChangePwd(Admin.NET.Core.Service.ChangePwdInput)">
            <summary>
            修改用户密码 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserService.ResetPwd(Admin.NET.Core.Service.ResetPwdUserInput)">
            <summary>
            重置用户密码 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserService.UnlockLogin(Admin.NET.Core.Service.UnlockLoginInput)">
            <summary>
            解除登录锁定 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserService.GetOwnRoleList(System.Int64)">
            <summary>
            获取用户拥有角色集合 🔖
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysUserService.GetOwnExtOrgList(System.Int64)">
            <summary>
            获取用户扩展机构集合 🔖
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.GenAuthUrlInput">
            <summary>
            生成网页授权Url
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.GenAuthUrlInput.RedirectUrl">
            <summary>
            RedirectUrl
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.GenAuthUrlInput.Scope">
            <summary>
            Scope
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.GenAuthUrlInput.State">
            <summary>
            State
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.WechatOAuth2Input">
            <summary>
            获取微信用户OpenId
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WechatOAuth2Input.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.WechatUserLogin">
            <summary>
            微信用户登录
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WechatUserLogin.OpenId">
            <summary>
            OpenId
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SignatureInput">
            <summary>
            获取配置签名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.SignatureInput.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.MessageTemplateSendInput">
            <summary>
            获取消息模板列表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MessageTemplateSendInput.TemplateId">
            <summary>
            订阅模板Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MessageTemplateSendInput.ToUserOpenId">
            <summary>
            接收者的OpenId
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MessageTemplateSendInput.Data">
            <summary>
            模板数据，格式形如 { "key1": { "value": any }, "key2": { "value": any } }
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MessageTemplateSendInput.Url">
            <summary>
            模板跳转链接
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.MessageTemplateSendInput.MiniProgramPagePath">
            <summary>
            所需跳转到小程序的具体页面路径，支持带参数,（示例index?foo=bar）
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.DeleteMessageTemplateInput">
            <summary>
            删除消息模板
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.DeleteMessageTemplateInput.TemplateId">
            <summary>
            订阅模板Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UploadAvatarInput.OpenId">
            <summary>
            小程序用户身份标识
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UploadAvatarInput.File">
            <summary>
            文件
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UploadAvatarInput.FileType">
            <summary>
            文件类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.UploadAvatarInput.Path">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.SetNickNameInput.OpenId">
            <summary>
            小程序用户身份标识
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.SetNickNameInput.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WechatPayTransactionInput.OpenId">
            <summary>
            OpenId
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WechatPayTransactionInput.Total">
            <summary>
            订单金额
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WechatPayTransactionInput.Description">
            <summary>
            商品描述
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WechatPayTransactionInput.Attachment">
            <summary>
            附加数据
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WechatPayTransactionInput.GoodsTag">
            <summary>
            优惠标记
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WechatPayTransactionInput.Tags">
            <summary>
            业务标签，用来区分做什么业务
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WechatPayTransactionInput.BusinessId">
            <summary>
            对应业务的主键
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WechatPayParaInput.PrepayId">
            <summary>
            订单Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WechatPayRefundDomesticInput.TradeId">
            <summary>
            商户端生成的业务流水号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WechatPayRefundDomesticInput.Reason">
            <summary>
            退款原因
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WechatPayRefundDomesticInput.Refund">
            <summary>
            退款金额
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WechatPayRefundDomesticInput.Total">
            <summary>
            原订单金额
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WechatPayPageInput.CreateTimeRange">
            <summary>
            添加时间范围
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WechatPayOutput.OpenId">
            <summary>
            OpenId
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WechatPayOutput.Total">
            <summary>
            订单金额
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WechatPayOutput.Attachment">
            <summary>
            附加数据
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WechatPayOutput.GoodsTag">
            <summary>
            优惠标记
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WechatUserInput.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WechatUserInput.Mobile">
            <summary>
            手机号码
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.JsCode2SessionInput">
            <summary>
            获取微信用户OpenId
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.JsCode2SessionInput.JsCode">
            <summary>
            JsCode
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.WxPhoneInput">
            <summary>
            获取微信用户电话号码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WxPhoneInput.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.WxOpenIdLoginInput">
            <summary>
            微信小程序登录
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WxOpenIdLoginInput.OpenId">
            <summary>
            OpenId
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.WxPhoneLoginInput">
            <summary>
            微信手机号登录
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.WxPhoneLoginInput.PhoneNumber">
            <summary>
            电话号码
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SendSubscribeMessageInput">
            <summary>
            发送订阅消息
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.SendSubscribeMessageInput.TemplateId">
            <summary>
            订阅模板Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.SendSubscribeMessageInput.ToUserOpenId">
            <summary>
            接收者的OpenId
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.SendSubscribeMessageInput.Data">
            <summary>
            模板内容，格式形如 { "key1": { "value": any }, "key2": { "value": any } }
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.SendSubscribeMessageInput.MiniprogramState">
            <summary>
            跳转小程序类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.SendSubscribeMessageInput.Language">
            <summary>
            语言类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.SendSubscribeMessageInput.MiniProgramPagePath">
            <summary>
            点击模板卡片后的跳转页面（仅限本小程序内的页面），支持带参数（示例pages/app/index?foo=bar）
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.AddSubscribeMessageTemplateInput">
            <summary>
            增加订阅消息模板
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddSubscribeMessageTemplateInput.TemplateTitleId">
            <summary>
            模板标题Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddSubscribeMessageTemplateInput.KeyworkIdList">
            <summary>
            模板关键词列表,例如 [3,5,4]
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.AddSubscribeMessageTemplateInput.SceneDescription">
            <summary>
            服务场景描述，15个字以内
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.GenerateQRImageInput">
            <summary>
            生成带参数小程序二维码(总共生成的码数量限制为 100,000)
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.GenerateQRImageInput.PagePath">
            <summary>
            扫码进入的小程序页面路径，最大长度 128 个字符，不能为空； eg: pages/index?id=0001
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.GenerateQRImageInput.ImageName">
            <summary>
            文件保存的名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.GenerateQRImageInput.Width">
            <summary>
            图片宽度 默认430
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.GenerateQRImageUnLimitInput">
            <summary>
            生成带参数小程序二维码(获取不受限制的小程序码)
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.GenerateQRImageUnLimitInput.Scene">
            <summary>
            二维码携带的参数 eg:a=1（最大32个可见字符，只支持数字，大小写英文以及部分特殊字符：<!-- !#$&'()*+,/:;=?@-._~ -->）
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.GenerateQRImageOutput.Success">
            <summary>
            生成状态
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.GenerateQRImageOutput.ImgPath">
            <summary>
            生成图片的绝对路径
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.GenerateQRImageOutput.RelativeImgPath">
            <summary>
            生成图片的相对路径
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Service.GenerateQRImageOutput.Message">
            <summary>
            生成图片的错误信息
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysWechatPayService">
            <summary>
            微信支付服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatPayService.CreateTenpayClient">
            <summary>
            初始化微信支付客户端
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatPayService.Page(Admin.NET.Core.Service.WechatPayPageInput)">
            <summary>
            分页查询支付列表 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatPayService.ListRefund(System.String)">
            <summary>
            查询退款信息列表
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatPayService.GenerateParametersForJsapiPay(Admin.NET.Core.Service.WechatPayParaInput)">
            <summary>
            生成JSAPI调起支付所需参数 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatPayService.CreatePayTransaction(Admin.NET.Core.Service.WechatPayTransactionInput)">
            <summary>
            微信支付下单(商户直连) 🔖
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatPayService.CreatePayTransactionNative(Admin.NET.Core.Service.WechatPayTransactionInput)">
            <summary>
            微信支付下单(商户直连)Native
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatPayService.CreatePayPartnerTransaction(Admin.NET.Core.Service.WechatPayTransactionInput)">
            <summary>
            微信支付下单(服务商模式) 🔖
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatPayService.GetPayInfo(System.String)">
            <summary>
            获取支付订单详情(本地库) 🔖
            </summary>
            <param name="tradeId"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatPayService.GetPayInfoFromWechat(System.String)">
            <summary>
            获取支付订单详情(微信接口) 🔖
            </summary>
            <param name="tradeId"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatPayService.CreateRefundDomestic(Admin.NET.Core.Service.WechatPayRefundDomesticInput)">
            <summary>
            退款申请
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatPayService.GetRefundInfoFromWechat(System.String)">
            <summary>
            获取退款订单详情(微信接口)
            </summary>
            <param name="refundId"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatPayService.PayCallBack">
            <summary>
            微信支付成功回调(商户直连)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatPayService.PayPartnerCallBack">
            <summary>
            微信支付成功回调(服务商模式) 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.SysWechatService">
            <summary>
            微信公众号服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatService.GenAuthUrl(Admin.NET.Core.Service.GenAuthUrlInput)">
            <summary>
            生成网页授权Url 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatService.SnsOAuth2(Admin.NET.Core.Service.WechatOAuth2Input)">
            <summary>
            获取微信用户OpenId 🔖
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatService.OpenIdLogin(Admin.NET.Core.Service.WechatUserLogin)">
            <summary>
            微信用户登录OpenId 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatService.GenConfigPara(Admin.NET.Core.Service.SignatureInput)">
            <summary>
            获取配置签名参数(wx.config) 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatService.GetMessageTemplateList">
            <summary>
            获取模板列表 🔖
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatService.SendTemplateMessage(Admin.NET.Core.Service.MessageTemplateSendInput)">
            <summary>
            发送模板消息 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatService.DeleteMessageTemplate(Admin.NET.Core.Service.DeleteMessageTemplateInput)">
            <summary>
            删除模板 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatService.GetCgibinToken">
            <summary>
            获取Access_token
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.SysWechatUserService">
            <summary>
            微信账号服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatUserService.Page(Admin.NET.Core.Service.WechatUserInput)">
            <summary>
            获取微信用户列表 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatUserService.AddWechatUser(Admin.NET.Core.SysWechatUser)">
            <summary>
            增加微信用户 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatUserService.UpdateWechatUser(Admin.NET.Core.SysWechatUser)">
            <summary>
            更新微信用户 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWechatUserService.DeleteWechatUser(Admin.NET.Core.Service.DeleteWechatUserInput)">
            <summary>
            删除微信用户 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.Service.SysWxOpenService">
            <summary>
            微信小程序服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWxOpenService.GetWxOpenId(Admin.NET.Core.Service.JsCode2SessionInput)">
            <summary>
            获取微信用户OpenId 🔖
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWxOpenService.GetWxPhone(Admin.NET.Core.Service.WxPhoneInput)">
            <summary>
            获取微信用户电话号码 🔖
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWxOpenService.WxOpenIdLogin(Admin.NET.Core.Service.WxOpenIdLoginInput)">
            <summary>
            微信小程序登录OpenId 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWxOpenService.UploadAvatar(Admin.NET.Core.Service.UploadAvatarInput)">
            <summary>
            上传小程序头像
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWxOpenService.SetNickName(Admin.NET.Core.Service.SetNickNameInput)">
            <summary>
            设置小程序用户昵称
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWxOpenService.GetUserInfo(System.String)">
            <summary>
            获取小程序用户信息
            </summary>
            <param name="openid"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWxOpenService.GetMessageTemplateList">
            <summary>
            获取订阅消息模板列表 🔖
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWxOpenService.SendSubscribeMessage(Admin.NET.Core.Service.SendSubscribeMessageInput)">
            <summary>
            发送订阅消息 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWxOpenService.AddSubscribeMessageTemplate(Admin.NET.Core.Service.AddSubscribeMessageTemplateInput)">
            <summary>
            增加订阅消息模板 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWxOpenService.GenerateQRImageAsync(Admin.NET.Core.Service.GenerateQRImageInput)">
            <summary>
            生成带参数小程序二维码(总共生成的码数量限制为 100,000)
            </summary>
            <param name="input"> 扫码进入的小程序页面路径，最大长度 128 个字符，不能为空； eg: pages / index ? id = AY000001 </param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWxOpenService.GenerateQRImageUnlimitAsync(Admin.NET.Core.Service.GenerateQRImageUnLimitInput)">
            <summary>
            生成二维码(获取不受限制的小程序码)
            </summary>
            <param name="input">入参</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.SysWxOpenService.GetCgibinToken">
            <summary>
            获取Access_token
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Service.WechatApiClientFactory">
            <summary>
            微信API客户端
            </summary>
        </member>
        <member name="M:Admin.NET.Core.Service.WechatApiClientFactory.CreateWechatClient">
            <summary>
            微信公众号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.WechatApiClientFactory.CreateWxOpenClient">
            <summary>
            微信小程序
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.WechatApiClientFactory.TryGetWechatAccessTokenAsync">
            <summary>
            获取微信公众号AccessToken
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.WechatApiClientFactory.TryGetWxOpenAccessTokenAsync">
            <summary>
            获取微信小程序AccessToken
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.WechatApiClientFactory.CheckWechatAccessTokenAsync">
            <summary>
            检查微信公众号AccessToken
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.WechatApiClientFactory.CheckWxOpenAccessTokenAsync">
            <summary>
            检查微信小程序AccessToken
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Service.WechatApiClientFactory.TryGetWechatJsApiTicketAsync">
            <summary>
            获取微信JS接口临时票据jsapi_ticket
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.SysLdapService">
            <summary>
            系统域登录配置服务 🧩
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SysLdapService.Page(Admin.NET.Core.Service.SysLdapInput)">
            <summary>
            获取系统域登录配置分页列表 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SysLdapService.Add(Admin.NET.Core.Service.AddSysLdapInput)">
            <summary>
            增加系统域登录配置 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SysLdapService.Update(Admin.NET.Core.Service.UpdateSysLdapInput)">
            <summary>
            更新系统域登录配置 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SysLdapService.Delete(Admin.NET.Core.Service.DeleteSysLdapInput)">
            <summary>
            删除系统域登录配置 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SysLdapService.GetDetail(Admin.NET.Core.Service.DetailSysLdapInput)">
            <summary>
            获取系统域登录配置详情 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SysLdapService.GetList">
            <summary>
            获取系统域登录配置列表 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SysLdapService.AuthAccount(System.Nullable{System.Int64},System.String,System.String)">
            <summary>
            验证账号
            </summary>
            <param name="account">域用户</param>
            <param name="password">密码</param>
            <param name="tenantId">租户</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SysLdapService.SyncUserTenant(System.Int64)">
            <summary>
            同步域用户 🔖
            </summary>
            <param name="tenantId"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SysLdapService.SyncUser(Admin.NET.Core.Service.SyncSysLdapInput)">
            <summary>
            同步域用户 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SysLdapService.SyncUser(Admin.NET.Core.SysLdap)">
            <summary>
            同步域用户 🔖
            </summary>
            <param name="sysLdap"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SysLdapService.GetDepartmentCode(Novell.Directory.Ldap.LdapAttributeSet,System.String)">
            <summary>
            获取部门代码
            </summary>
            <param name="attrs"></param>
            <param name="bindAttrCode"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SysLdapService.CreateSysUserLdap(Novell.Directory.Ldap.LdapAttributeSet,System.String,System.String,System.String)">
            <summary>
            创建同步对象
            </summary>
            <param name="attrs"></param>
            <param name="bindAttrAccount"></param>
            <param name="bindAttrEmployeeId"></param>
            <param name="deptCode"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SysLdapService.SearchDnLdapUser(Novell.Directory.Ldap.LdapConnection,Admin.NET.Core.SysLdap,System.Collections.Generic.List{Admin.NET.Core.SysUserLdap},System.String,System.String)">
            <summary>
            遍历查询域用户
            </summary>
            <param name="ldapConn"></param>
            <param name="sysLdap"></param>
            <param name="userLdapList"></param>
            <param name="baseDn"></param>
            <param name="deptCode"></param>
        </member>
        <member name="M:Admin.NET.Core.SysLdapService.SyncDept(Admin.NET.Core.Service.SyncSysLdapInput)">
            <summary>
            同步域组织 🔖
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SysLdapService.SearchDnLdapDept(Novell.Directory.Ldap.LdapConnection,Admin.NET.Core.SysLdap,System.Collections.Generic.List{Admin.NET.Core.SysOrg},System.String,Admin.NET.Core.SysOrg)">
            <summary>
            遍历查询域用户
            </summary>
            <param name="ldapConn"></param>
            <param name="sysLdap"></param>
            <param name="listOrgs"></param>
            <param name="baseDn"></param>
            <param name="org"></param>
        </member>
        <member name="M:Admin.NET.Core.SysLdapService.CreateSysOrg(Novell.Directory.Ldap.LdapAttributeSet,Admin.NET.Core.SysLdap,System.Collections.Generic.List{Admin.NET.Core.SysOrg},Admin.NET.Core.SysOrg)">
            <summary>
            创建架构对象
            </summary>
            <param name="attrs"></param>
            <param name="sysLdap"></param>
            <param name="listOrgs"></param>
            <param name="org"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.BaseService`1">
            <summary>
            实体操作基服务
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Admin.NET.Core.BaseService`1.GetDetail(System.Int64)">
            <summary>
            获取详情 🔖
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.BaseService`1.GetList">
            <summary>
            获取集合 🔖
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.BaseService`1.Add(`0)">
            <summary>
            增加 🔖
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.BaseService`1.Update(`0)">
            <summary>
            更新 🔖
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.BaseService`1.Delete(System.Int64)">
            <summary>
            删除 🔖
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.BaiDuTranslationService">
            <summary>
            百度翻译
            </summary>
        </member>
        <member name="F:Admin.NET.Core.BaiDuTranslationService._appId">
            <summary>
            百度翻译appId
            </summary>
        </member>
        <member name="F:Admin.NET.Core.BaiDuTranslationService._appKey">
            <summary>
            百度翻译appKey
            </summary>
        </member>
        <member name="F:Admin.NET.Core.BaiDuTranslationService._baseUrl">
            <summary>
            百度翻译api地址
            </summary>
        </member>
        <member name="M:Admin.NET.Core.BaiDuTranslationService.#ctor(Furion.HttpRemote.IHttpRemoteService)">
            <summary>
            初始化一个<see cref="T:Admin.NET.Core.BaiDuTranslationService"/>类型的新实例.
            </summary>
            <param name="httpRemoteService"></param>
        </member>
        <member name="M:Admin.NET.Core.BaiDuTranslationService.Translation(System.String,System.String,System.String)">
             <summary>
             百度在线翻译
             </summary>
             <param name="from">翻译源语种</param>
             <param name="to">翻译目标语种</param>
             <param name="content">文本内容</param>
            <remarks>
            源语种和目标语种支持：
            zh:简体中文
            cht:繁體中文(台灣)
            yue:繁體中文(香港)
            en:英语
            de:德语
            spa:西班牙语
            fin:芬兰语
            fra:法语
            it:意大利语
            jp:日语
            kor:韩语
            nor:挪威语
            pl:波兰语
            pt:葡萄牙语
            ru:俄语
            th:泰语
            id:印度尼西亚语
            may:马来西亚
            vie:越南语
            
            更多语种请查看：https://api.fanyi.baidu.com/doc/21
             </remarks>
             <returns>翻译后的文本内容</returns>
        </member>
        <member name="M:Admin.NET.Core.BaiDuTranslationService.GeneratePageI18nFile">
            <summary>
            生成前端页面i18n文件
            </summary>
        </member>
        <member name="M:Admin.NET.Core.BaiDuTranslationService.GenerateMenuI18nFile">
            <summary>
            生成前端菜单i18n文件
            </summary>
        </member>
        <member name="T:Admin.NET.Core.BaiDuTranslationResult">
            <summary>
            百度翻译结果
            </summary>
        </member>
        <member name="P:Admin.NET.Core.BaiDuTranslationResult.From">
            <summary>
            源语种
            </summary>
        </member>
        <member name="P:Admin.NET.Core.BaiDuTranslationResult.To">
            <summary>
            目标语种
            </summary>
        </member>
        <member name="P:Admin.NET.Core.BaiDuTranslationResult.trans_result">
            <summary>
            翻译结果
            </summary>
        </member>
        <member name="P:Admin.NET.Core.BaiDuTranslationResult.error_code">
            <summary>
            错误码 正常为0
            </summary>
        </member>
        <member name="P:Admin.NET.Core.BaiDuTranslationResult.error_msg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="T:Admin.NET.Core.TransResult">
            <summary>
            翻译结果
            </summary>
        </member>
        <member name="P:Admin.NET.Core.TransResult.Src">
            <summary>
            源字符
            </summary>
        </member>
        <member name="P:Admin.NET.Core.TransResult.Dst">
            <summary>
            目标字符
            </summary>
        </member>
        <member name="T:Admin.NET.Core.ExportLogDto">
            <summary>
            导出日志数据
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ExportLogDto.LogName">
            <summary>
            记录器类别名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ExportLogDto.LogLevel">
            <summary>
            日志级别
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ExportLogDto.EventId">
            <summary>
            事件Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ExportLogDto.Message">
            <summary>
            日志消息
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ExportLogDto.Exception">
            <summary>
            异常对象
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ExportLogDto.State">
            <summary>
            当前状态值
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ExportLogDto.LogDateTime">
            <summary>
            日志记录时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ExportLogDto.ThreadId">
            <summary>
            线程Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.ExportLogDto.TraceId">
            <summary>
            请求跟踪Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.MessageInput.ReceiveUserId">
            <summary>
            接收者用户Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.MessageInput.ReceiveUserName">
            <summary>
            接收者名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.MessageInput.UserIds">
            <summary>
            用户ID列表
            </summary>
        </member>
        <member name="P:Admin.NET.Core.MessageInput.Title">
            <summary>
            消息标题
            </summary>
        </member>
        <member name="P:Admin.NET.Core.MessageInput.MessageType">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="P:Admin.NET.Core.MessageInput.Message">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="P:Admin.NET.Core.MessageInput.SendUserId">
            <summary>
            发送者Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.MessageInput.SendUserName">
            <summary>
            发送者名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.MessageInput.SendTime">
            <summary>
            发送时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SmsVerifyCodeInput.Phone">
            <summary>
            手机号码
            </summary>
            <example>admin</example>
        </member>
        <member name="P:Admin.NET.Core.SmsVerifyCodeInput.Code">
            <summary>
            验证码
            </summary>
            <example>123456</example>
        </member>
        <member name="M:Admin.NET.Core.OAuthSetup.AddOAuth(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            三方授权登录OAuth注册
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Admin.NET.Core.UserManager">
            <summary>
            当前登录用户
            </summary>
        </member>
        <member name="P:Admin.NET.Core.UserManager.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:Admin.NET.Core.UserManager.TenantId">
            <summary>
            租户ID
            </summary>
        </member>
        <member name="P:Admin.NET.Core.UserManager.Account">
            <summary>
            用户账号
            </summary>
        </member>
        <member name="P:Admin.NET.Core.UserManager.RealName">
            <summary>
            真实姓名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.UserManager.AccountType">
            <summary>
            是否超级管理员
            </summary>
        </member>
        <member name="P:Admin.NET.Core.UserManager.SuperAdmin">
            <summary>
            是否超级管理员
            </summary>
        </member>
        <member name="P:Admin.NET.Core.UserManager.SysAdmin">
            <summary>
            是否系统管理员
            </summary>
        </member>
        <member name="P:Admin.NET.Core.UserManager.OrgId">
            <summary>
            组织机构Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.UserManager.OpenId">
            <summary>
            微信OpenId
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SignalRSetup.AddSignalR(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Newtonsoft.Json.JsonSerializerSettings})">
            <summary>
            即时消息SignalR注册
            </summary>
            <param name="services"></param>
            <param name="SetNewtonsoftJsonSetting"></param>
        </member>
        <member name="T:Admin.NET.Core.GetAccessSecretContext">
            <summary>
            获取 AccessKey 关联 AccessSecret 方法的上下文
            </summary>
        </member>
        <member name="P:Admin.NET.Core.GetAccessSecretContext.AccessKey">
            <summary>
            身份标识
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SignatureAuthenticationDefaults">
            <summary>
            Signature 身份验证处理程序相关的默认值
            </summary>
        </member>
        <member name="F:Admin.NET.Core.SignatureAuthenticationDefaults.AuthenticationScheme">
            <summary>
            SignatureAuthenticationOptions.AuthenticationScheme 使用的默认值
            </summary>
        </member>
        <member name="F:Admin.NET.Core.SignatureAuthenticationDefaults.AuthenticateFailMsgKey">
            <summary>
            附加在 HttpContext Item 中验证失败消息的 Key
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SignatureAuthenticationEvent">
            <summary>
            Signature 身份验证事件
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SignatureAuthenticationEvent.OnGetAccessSecret">
            <summary>
            获取或设置获取 AccessKey 的 AccessSecret 的逻辑处理
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SignatureAuthenticationEvent.OnChallenge">
            <summary>
            获取或设置质询的逻辑处理
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SignatureAuthenticationEvent.OnValidated">
            <summary>
            获取或设置已验证的逻辑处理
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SignatureAuthenticationEvent.GetAccessSecret(Admin.NET.Core.GetAccessSecretContext)">
            <summary>
            获取 AccessKey 的 AccessSecret
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SignatureAuthenticationEvent.Challenge(Admin.NET.Core.SignatureChallengeContext)">
            <summary>
            质询
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SignatureAuthenticationEvent.Validated(Admin.NET.Core.SignatureValidatedContext)">
            <summary>
            已验证成功
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.SignatureAuthenticationExtensions">
            <summary>
            Signature 身份验证扩展
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SignatureAuthenticationExtensions.AddSignatureAuthentication(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)">
            <summary>
            注册 Signature 身份验证处理模块
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SignatureAuthenticationExtensions.AddSignatureAuthentication(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.Action{Admin.NET.Core.SignatureAuthenticationOptions})">
            <summary>
            注册 Signature 身份验证处理模块
            </summary>
            <param name="builder"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.SignatureAuthenticationHandler">
            <summary>
            Signature 身份验证处理
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SignatureAuthenticationHandler.CreateEventsAsync">
            <summary>
            确保创建的 Event 类型是 DigestEvents
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SignatureAuthenticationHandler.GetMessageForSign(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取用于签名的消息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SignatureAuthenticationHandler.SignData(System.Byte[],System.String)">
            <summary>
            对数据进行签名
            </summary>
            <param name="secret"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SignatureAuthenticationHandler.AuthenticateResultFailAsync(System.String)">
            <summary>
            返回验证失败结果，并在 Items 中增加 <see cref="F:Admin.NET.Core.SignatureAuthenticationDefaults.AuthenticateFailMsgKey"/>，记录身份验证失败消息
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.SignatureAuthenticationOptions">
            <summary>
            Signature 身份验证选项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SignatureAuthenticationOptions.AllowedDateDrift">
            <summary>
            请求时间允许的偏差范围
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SignatureAuthenticationOptions.Events">
            <summary>
            Signature 身份验证事件
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SignatureChallengeContext">
            <summary>
            Signature 身份验证质询上下文
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SignatureChallengeContext.AuthenticateFailure">
            <summary>
            在认证期间出现的异常
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SignatureChallengeContext.Handled">
            <summary>
            指定是否已被处理，如果已处理，则跳过默认认证逻辑
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SignatureValidatedContext">
            <summary>
            Signature 身份验证已验证上下文
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SignatureValidatedContext.AccessKey">
            <summary>
            身份标识
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SignatureValidatedContext.AccessSecret">
            <summary>
            密钥
            </summary>
        </member>
        <member name="T:Admin.NET.Core.ISqlSugarEntitySeedData`1">
            <summary>
            实体种子数据接口
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Admin.NET.Core.ISqlSugarEntitySeedData`1.HasData">
            <summary>
            种子数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.ISqlSugarRepository`1">
            <summary>
            分表操作仓储接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Admin.NET.Core.ISqlSugarRepository`1.SplitTableInsertAsync(`0)">
            <summary>
            创建数据
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ISqlSugarRepository`1.SplitTableInsertAsync(System.Collections.Generic.List{`0})">
            <summary>
            批量创建数据
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ISqlSugarRepository`1.SplitTableUpdateAsync(`0)">
            <summary>
            更新数据
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ISqlSugarRepository`1.SplitTableUpdateAsync(System.Collections.Generic.List{`0})">
            <summary>
            批量更新数据
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ISqlSugarRepository`1.SplitTableDeleteableAsync(`0)">
            <summary>
            删除数据
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ISqlSugarRepository`1.SplitTableDeleteableAsync(System.Collections.Generic.List{`0})">
            <summary>
            批量删除数据
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ISqlSugarRepository`1.SplitTableGetFirstAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取第一条
            </summary>
            <param name="whereExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ISqlSugarRepository`1.SplitTableIsAnyAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            判断是否存在
            </summary>
            <param name="whereExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ISqlSugarRepository`1.SplitTableGetListAsync">
            <summary>
            获取列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ISqlSugarRepository`1.SplitTableGetListAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取列表
            </summary>
            <param name="whereExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ISqlSugarRepository`1.SplitTableGetListAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.String[])">
            <summary>
            获取列表
            </summary>
            <param name="whereExpression"></param>
            <param name="tableNames">表名</param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.ISqlSugarView">
            <summary>
            视图实体接口
            </summary>
        </member>
        <member name="M:Admin.NET.Core.ISqlSugarView.GetQueryableSqlString(SqlSugar.SqlSugarScopeProvider)">
            <summary>
            获取视图查询sql语句
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="F:Admin.NET.Core.SqlSugarFilter.Cache">
            <summary>
            缓存全局查询过滤器（内存缓存）
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarFilter.DeleteUserOrgCache(System.Int64,System.String)">
            <summary>
            删除用户机构缓存
            </summary>
            <param name="userId"></param>
            <param name="dbConfigId"></param>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarFilter.DeleteCustomCache(System.Int64,System.String)">
            <summary>
            删除自定义过滤器缓存
            </summary>
            <param name="userId"></param>
            <param name="dbConfigId"></param>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarFilter.SetOrgEntityFilter(SqlSugar.SqlSugarScopeProvider)">
            <summary>
            配置用户机构集合过滤器
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarFilter.SetDataScopeFilter(SqlSugar.SqlSugarScopeProvider)">
            <summary>
            配置用户仅本人数据过滤器
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarFilter.SetCustomEntityFilter(SqlSugar.SqlSugarScopeProvider)">
            <summary>
            配置自定义过滤器
            </summary>
        </member>
        <member name="T:Admin.NET.Core.IEntityFilter">
            <summary>
            自定义实体过滤器接口
            </summary>
        </member>
        <member name="M:Admin.NET.Core.IEntityFilter.AddEntityFilter">
            <summary>
            实体过滤器
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.SqlSugarPagedList`1">
            <summary>
            分页泛型集合
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="P:Admin.NET.Core.SqlSugarPagedList`1.Page">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SqlSugarPagedList`1.PageSize">
            <summary>
            页容量
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SqlSugarPagedList`1.Total">
            <summary>
            总条数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SqlSugarPagedList`1.TotalPages">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SqlSugarPagedList`1.Items">
            <summary>
            当前页集合
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SqlSugarPagedList`1.HasPrevPage">
            <summary>
            是否有上一页
            </summary>
        </member>
        <member name="P:Admin.NET.Core.SqlSugarPagedList`1.HasNextPage">
            <summary>
            是否有下一页
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SqlSugarPagedExtensions">
            <summary>
            分页拓展类
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarPagedExtensions.ToPagedList``2(SqlSugar.ISugarQueryable{``0},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            分页拓展
            </summary>
            <param name="query"><see cref="T:SqlSugar.ISugarQueryable`1"/>对象</param>
            <param name="pageIndex">当前页码，从1开始</param>
            <param name="pageSize">页码容量</param>
            <param name="expression">查询结果 Select 表达式</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarPagedExtensions.ToPagedList``1(SqlSugar.ISugarQueryable{``0},System.Int32,System.Int32)">
            <summary>
            分页拓展
            </summary>
            <param name="query"><see cref="T:SqlSugar.ISugarQueryable`1"/>对象</param>
            <param name="pageIndex">当前页码，从1开始</param>
            <param name="pageSize">页码容量</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarPagedExtensions.ToPagedListAsync``2(SqlSugar.ISugarQueryable{``0},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            分页拓展
            </summary>
            <param name="query"><see cref="T:SqlSugar.ISugarQueryable`1"/>对象</param>
            <param name="pageIndex">当前页码，从1开始</param>
            <param name="pageSize">页码容量</param>
            <param name="expression">查询结果 Select 表达式</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarPagedExtensions.ToPagedListAsync``1(SqlSugar.ISugarQueryable{``0},System.Int32,System.Int32)">
            <summary>
            分页拓展
            </summary>
            <param name="query"><see cref="T:SqlSugar.ISugarQueryable`1"/>对象</param>
            <param name="pageIndex">当前页码，从1开始</param>
            <param name="pageSize">页码容量</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarPagedExtensions.ToPagedListDataMaskAsync``1(SqlSugar.ISugarQueryable{``0},System.Int32,System.Int32)">
            <summary>
            脱敏分页拓展
            </summary>
            <param name="query"><see cref="T:SqlSugar.ISugarQueryable`1"/>对象</param>
            <param name="pageIndex">当前页码，从1开始</param>
            <param name="pageSize">页码容量</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarPagedExtensions.ToPagedListDataMask``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            脱敏分页拓展
            </summary>
            <param name="list">集合对象</param>
            <param name="pageIndex">当前页码，从1开始</param>
            <param name="pageSize">页码容量</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarPagedExtensions.ToPagedList``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            分页拓展
            </summary>
            <param name="list">集合对象</param>
            <param name="pageIndex">当前页码，从1开始</param>
            <param name="pageSize">页码容量</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarPagedExtensions.CreateSqlSugarPagedList``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32,System.Int32)">
            <summary>
            创建 <see cref="T:Admin.NET.Core.SqlSugarPagedList`1"/> 对象
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="items">分页内容的对象集合</param>
            <param name="total">总条数</param>
            <param name="pageIndex">当前页码，从1开始</param>
            <param name="pageSize">页码容量</param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.SqlSugarRepository`1">
            <summary>
            SqlSugar 实体仓储
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarSetup.AddSqlSugar(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            SqlSugar 上下文初始化
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarSetup.SetDbConfig(Admin.NET.Core.DbConnectionConfig)">
            <summary>
            配置连接属性
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarSetup.SetDbAop(SqlSugar.SqlSugarScopeProvider,System.Boolean,System.Boolean)">
            <summary>
            配置Aop
            </summary>
            <param name="db"></param>
            <param name="enableConsoleSql"></param>
            <param name="superAdminIgnoreIDeletedFilter"></param>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarSetup.SetDbDiffLog(SqlSugar.SqlSugarScopeProvider,Admin.NET.Core.DbConnectionConfig)">
            <summary>
            开启库表差异化日志
            </summary>
            <param name="db"></param>
            <param name="config"></param>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarSetup.InitView(SqlSugar.SqlSugarScopeProvider)">
            <summary>
            初始化视图
            </summary>
            <param name="dbProvider"></param>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarSetup.WaitForDatabaseReady(SqlSugar.SqlSugarScopeProvider)">
            <summary>
            等待数据库就绪
            </summary>
            <param name="dbProvider"></param>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarSetup.InitDatabase(SqlSugar.SqlSugarScope,Admin.NET.Core.DbConnectionConfig)">
            <summary>
            初始化数据库
            </summary>
            <param name="db">SqlSugarScope 实例</param>
            <param name="config">数据库连接配置</param>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarSetup.GetEntityTypesForInit(Admin.NET.Core.DbConnectionConfig)">
            <summary>
            获取需要初始化的实体类型
            </summary>
            <param name="config">数据库连接配置</param>
            <returns>实体类型列表</returns>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarSetup.IsEntityForConfig(System.Type,Admin.NET.Core.DbConnectionConfig)">
            <summary>
            判断实体是否属于当前配置
            </summary>
            <param name="entityType">实体类型</param>
            <param name="config">数据库连接配置</param>
            <returns>是否属于当前配置</returns>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarSetup.InitializeTables(SqlSugar.SqlSugarScopeProvider,System.Collections.Generic.List{System.Type},Admin.NET.Core.DbConnectionConfig)">
            <summary>
            初始化表结构
            </summary>
            <param name="dbProvider">SqlSugarScopeProvider 实例</param>
            <param name="entityTypes">实体类型列表</param>
            <param name="config">数据库连接配置</param>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarSetup.UpdateNullableColumns(SqlSugar.SqlSugarScopeProvider,System.Type)">
            <summary>
            更新表中不存在于实体的字段为可空
            </summary>
            <param name="dbProvider">SqlSugarScopeProvider 实例</param>
            <param name="entityType">实体类型</param>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarSetup.InitializeTable(SqlSugar.SqlSugarScopeProvider,System.Type)">
            <summary>
            初始化表
            </summary>
            <param name="dbProvider">SqlSugarScopeProvider 实例</param>
            <param name="entityType">实体类型</param>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarSetup.InitSeedData(SqlSugar.SqlSugarScope,Admin.NET.Core.DbConnectionConfig)">
            <summary>
            初始化种子数据
            </summary>
            <param name="db">SqlSugarScope 实例</param>
            <param name="config">数据库连接配置</param>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarSetup.GetSeedDataTypes(Admin.NET.Core.DbConnectionConfig)">
            <summary>
            获取种子数据类型
            </summary>
            <param name="config">数据库连接配置</param>
            <returns>种子数据类型列表</returns>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarSetup.GetSeedData(System.Type)">
            <summary>
            获取种子数据
            </summary>
            <param name="seedType">种子数据类型</param>
            <returns>种子数据列表</returns>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarSetup.AdjustSeedDataIds(System.Collections.Generic.IEnumerable{System.Object},Admin.NET.Core.DbConnectionConfig)">
            <summary>
            调整种子数据的 ID
            </summary>
            <param name="seedData">种子数据列表</param>
            <param name="config">数据库连接配置</param>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarSetup.InsertOrUpdateSeedData(SqlSugar.SqlSugarScopeProvider,System.Type,System.Type,System.Collections.Generic.IEnumerable{System.Object},Admin.NET.Core.DbConnectionConfig,System.Int32@,System.Int32)">
            <summary>
            插入或更新种子数据
            </summary>
            <param name="dbProvider">SqlSugarScopeProvider 实例</param>
            <param name="seedType">种子数据类型</param>
            <param name="entityType">实体类型</param>
            <param name="seedData">种子数据列表</param>
            <param name="config">数据库连接配置</param>
            <param name="count">当前处理的数量</param>
            <param name="sum">总数量</param>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarSetup.InitTenantDatabase(SqlSugar.ITenant,Admin.NET.Core.DbConnectionConfig)">
            <summary>
            初始化租户业务数据库
            </summary>
            <param name="iTenant"></param>
            <param name="config"></param>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarSetup.Retry(System.Action,System.Int32,System.Int32)">
            <summary>
            简单的重试机制
            </summary>
            <param name="action"></param>
            <param name="maxRetry"></param>
            <param name="retryIntervalMs"></param>
        </member>
        <member name="T:Admin.NET.Core.SqlSugarTypeProvider">
            <summary>
            扩展支持 SqlFunc，不支持 Subqueryable
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SqlSugarUnitOfWork">
            <summary>
            SqlSugar 事务和工作单元
            </summary>
        </member>
        <member name="F:Admin.NET.Core.SqlSugarUnitOfWork._sqlSugarClient">
            <summary>
            SqlSugar 对象
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarUnitOfWork.#ctor(SqlSugar.ISqlSugarClient)">
            <summary>
            构造函数
            </summary>
            <param name="sqlSugarClient"></param>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarUnitOfWork.BeginTransaction(Microsoft.AspNetCore.Mvc.Filters.FilterContext,Furion.DatabaseAccessor.UnitOfWorkAttribute)">
            <summary>
            开启工作单元处理
            </summary>
            <param name="context"></param>
            <param name="unitOfWork"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarUnitOfWork.CommitTransaction(Microsoft.AspNetCore.Mvc.Filters.FilterContext,Furion.DatabaseAccessor.UnitOfWorkAttribute)">
            <summary>
            提交工作单元处理
            </summary>
            <param name="resultContext"></param>
            <param name="unitOfWork"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarUnitOfWork.RollbackTransaction(Microsoft.AspNetCore.Mvc.Filters.FilterContext,Furion.DatabaseAccessor.UnitOfWorkAttribute)">
            <summary>
            回滚工作单元处理
            </summary>
            <param name="resultContext"></param>
            <param name="unitOfWork"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Admin.NET.Core.SqlSugarUnitOfWork.OnCompleted(Microsoft.AspNetCore.Mvc.Filters.FilterContext,Microsoft.AspNetCore.Mvc.Filters.FilterContext)">
            <summary>
            执行完毕（无论成功失败）
            </summary>
            <param name="context"></param>
            <param name="resultContext"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Admin.NET.Core.Update.AutoVersionUpdate">
            <summary>
            自动版本更新中间件拓展
            </summary>
            <remarks>
            使用方法
            1.在 Admin.NET.Web.Core 的 Startup.cs 中的 Configure 方法中调用 app.UseAutoVersionUpdate()。
            2.在入口项目 Admin.NET.Web.Entry 的根目录下创建一个名为 UpdateScripts 的文件夹，并在其中放置 .sql 后缀的脚本文件
            3.脚本文件命名格式为版本号，例如 1.0.0.sql、1.0.1.sql 等，版本号应符合语义化版本规范。
            4.脚本的属性：复制到输出目录，设置为：始终复制。
            5.设置主节点的 Admin.NET.Application 的 Configuration/App.json 的 WorkerId 为 1。
            6.设置入口项目 Admin.NET.Web.Entry.csproj 的 Version。
            ==================================================
            更新新版本时
            1.需在 UpdateScripts 文件夹中添加新的脚本文件，脚本文件名应为新版本号。
            2.设置入口项目 Admin.NET.Web.Entry.csproj 的 Version
            </remarks>
        </member>
        <member name="M:Admin.NET.Core.Update.AutoVersionUpdate.UseAutoVersionUpdate(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            使用自动版本更新中间件
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Update.AutoVersionUpdate.GetEntryAssemblyCurrentVersion">
            <summary>
            获取入口程序集当前版本信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Update.AutoVersionUpdate.SetEntryAssemblyCurrentVersion(System.String,System.Boolean)">
            <summary>
            设置入口程序集当前版本信息
            </summary>
            <param name="version"></param>
            <param name="isRunScript"></param>
        </member>
        <member name="M:Admin.NET.Core.Update.AutoVersionUpdate.GetEntryAssemblyHistoryVersionInfo">
            <summary>
            获取入口程序集上一次运行版本信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Update.AutoVersionUpdate.GetScriptSqlVersions">
            <summary>
            获取程序目录下的脚本 SQL 文件版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.Update.AutoVersionUpdate.HandleSqlScript(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String,System.String)">
            <summary>
            保存当前版本信息
            </summary>
            <param name="app"></param>
            <param name="sql"></param>
            <param name="sqlVersion"></param>
        </member>
        <member name="T:Admin.NET.Core.AdminResultProvider">
            <summary>
            全局规范化结果
            </summary>
        </member>
        <member name="M:Admin.NET.Core.AdminResultProvider.OnAuthorizeException(Microsoft.AspNetCore.Http.DefaultHttpContext,Furion.FriendlyException.ExceptionMetadata)">
            <summary>
            JWT 授权异常返回值
            </summary>
            <param name="context"></param>
            <param name="metadata"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.AdminResultProvider.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Furion.FriendlyException.ExceptionMetadata)">
            <summary>
            异常返回值
            </summary>
            <param name="context"></param>
            <param name="metadata"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.AdminResultProvider.OnSucceeded(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,System.Object)">
            <summary>
            成功返回值
            </summary>
            <param name="context"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.AdminResultProvider.OnValidateFailed(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Furion.DataValidation.ValidationMetadata)">
            <summary>
            验证失败返回值
            </summary>
            <param name="context"></param>
            <param name="metadata"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.AdminResultProvider.OnResponseStatusCodes(Microsoft.AspNetCore.Http.HttpContext,System.Int32,Furion.UnifyResult.UnifyResultSettingsOptions)">
            <summary>
            特定状态码返回值
            </summary>
            <param name="context"></param>
            <param name="statusCode"></param>
            <param name="unifyResultSettings"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.AdminResultProvider.Ok(System.String,System.Object)">
            <summary>
            返回成功结果集
            </summary>
            <param name="message"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.AdminResultProvider.Error(System.String,System.Int32,System.Object)">
            <summary>
            返回失败结果集
            </summary>
            <param name="message"></param>
            <param name="code"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.AdminResultProvider.RESTfulResult(System.Int32,System.Boolean,System.Object,System.Object)">
            <summary>
            返回 RESTful 风格结果集
            </summary>
            <param name="statusCode"></param>
            <param name="succeeded"></param>
            <param name="data"></param>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.AdminResult`1">
            <summary>
            全局返回结果
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Admin.NET.Core.AdminResult`1.Code">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.AdminResult`1.Type">
            <summary>
            类型success、warning、error
            </summary>
        </member>
        <member name="P:Admin.NET.Core.AdminResult`1.Message">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Admin.NET.Core.AdminResult`1.Result">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:Admin.NET.Core.AdminResult`1.Extras">
            <summary>
            附加数据
            </summary>
        </member>
        <member name="P:Admin.NET.Core.AdminResult`1.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Search">
            <summary>
            模糊查询条件
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Search.Fields">
            <summary>
            字段名称集合
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Search.Keyword">
            <summary>
            关键字
            </summary>
        </member>
        <member name="T:Admin.NET.Core.Filter">
            <summary>
            筛选过滤条件
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Filter.Logic">
            <summary>
            过滤条件
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Filter.Filters">
            <summary>
            筛选过滤条件子项
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Filter.Field">
            <summary>
            字段名称
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Filter.Operator">
            <summary>
            逻辑运算符
            </summary>
        </member>
        <member name="P:Admin.NET.Core.Filter.Value">
            <summary>
            字段值
            </summary>
        </member>
        <member name="T:Admin.NET.Core.BaseFilter">
            <summary>
            过滤条件基类
            </summary>
        </member>
        <member name="P:Admin.NET.Core.BaseFilter.Search">
            <summary>
            模糊查询条件
            </summary>
        </member>
        <member name="P:Admin.NET.Core.BaseFilter.Keyword">
            <summary>
            模糊查询关键字
            </summary>
        </member>
        <member name="P:Admin.NET.Core.BaseFilter.Filter">
            <summary>
            筛选过滤条件
            </summary>
        </member>
        <member name="T:Admin.NET.Core.BaseIdInput">
            <summary>
            主键Id输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.BaseIdInput.Id">
            <summary>
            主键Id
            </summary>
        </member>
        <member name="T:Admin.NET.Core.BaseImportInput">
            <summary>
            数据导入输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.BaseImportInput.Id">
            <summary>
            记录Id
            </summary>
        </member>
        <member name="P:Admin.NET.Core.BaseImportInput.Error">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="T:Admin.NET.Core.BasePageInput">
            <summary>
            全局分页查询输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.BasePageInput.Page">
            <summary>
            当前页码
            </summary>
        </member>
        <member name="P:Admin.NET.Core.BasePageInput.PageSize">
            <summary>
            页码容量
            </summary>
        </member>
        <member name="P:Admin.NET.Core.BasePageInput.Field">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="P:Admin.NET.Core.BasePageInput.Order">
            <summary>
            排序方向
            </summary>
        </member>
        <member name="P:Admin.NET.Core.BasePageInput.DescStr">
            <summary>
            降序排序
            </summary>
        </member>
        <member name="T:Admin.NET.Core.BasePageTimeInput">
            <summary>
            全局分页查询输入参数(带时间)
            </summary>
        </member>
        <member name="P:Admin.NET.Core.BasePageTimeInput.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:Admin.NET.Core.BasePageTimeInput.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="T:Admin.NET.Core.BaseStatusInput">
            <summary>
            设置状态输入参数
            </summary>
        </member>
        <member name="P:Admin.NET.Core.BaseStatusInput.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="T:Admin.NET.Core.ChinaDateTimeConverter">
            <summary>
            JSON时间序列化yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="T:Admin.NET.Core.ChinaDateTimeConverterHH">
            <summary>
            JSON时间序列化yyyy-MM-dd HH:mm
            </summary>
        </member>
        <member name="T:Admin.NET.Core.ChinaDateTimeConverterDate">
            <summary>
            JSON时间序列化yyyy-MM-dd
            </summary>
        </member>
        <member name="T:Admin.NET.Core.CodeGenUtil">
            <summary>
            代码生成帮助类
            </summary>
        </member>
        <member name="M:Admin.NET.Core.CodeGenUtil.CamelColumnName(System.String,System.String[])">
            <summary>
            转换大驼峰法命名
            </summary>
            <param name="columnName">字段名</param>
            <param name="dbColumnNames">EntityBase 实体属性名称</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.CodeGenUtil.DataTypeToEff(System.String)">
            <summary>
            数据类型转显示类型
            </summary>
            <param name="dataType"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.CodeGenUtil.GetPropertyInfoArray(System.Type)">
            <summary>
            获取类型的PropertyInfo列表
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.CommonUtil">
            <summary>
            通用工具类
            </summary>
        </member>
        <member name="M:Admin.NET.Core.CommonUtil.GetFixedHashCode(System.String,System.Int64)">
            <summary>
            根据字符串获取固定整型哈希值
            </summary>
            <param name="str"></param>
            <param name="startNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.CommonUtil.ExecPercent(System.Decimal,System.Decimal)">
            <summary>
            生成百分数
            </summary>
            <param name="passCount"></param>
            <param name="allCount"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.CommonUtil.GetLocalhost">
            <summary>
            获取服务地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.CommonUtil.SerializeObjectToXml``1(``0)">
            <summary>
            对象序列化XML
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.CommonUtil.SerializeStringToXml(System.String)">
            <summary>
            字符串转XML格式
            </summary>
            <param name="xmlStr"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.CommonUtil.ExportExcelTemplate``1(System.String)">
            <summary>
            导出模板Excel
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.CommonUtil.ExportExcelData``1(System.Collections.Generic.ICollection{``0},System.String)">
            <summary>
            导出数据excel
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.CommonUtil.ExportExcelData``2(SqlSugar.ISugarQueryable{``0},System.Func{``0,``1,``1})">
            <summary>
            导出数据excel,包括字典转换
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.CommonUtil.ImportExcelData``1(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            导入数据Excel
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.CommonUtil.ImportExcelData``1(Microsoft.AspNetCore.Http.IFormFile,System.Func{Magicodes.ExporterAndImporter.Core.Models.ImportResult{``0},Magicodes.ExporterAndImporter.Core.Models.ImportResult{``0}})">
            <summary>
            导入Excel数据并错误标记
            </summary>
            <typeparam name="T"></typeparam>
            <param name="file"></param>
            <param name="importResultCallback"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.CommonUtil.ImportExcelDataAsync``1(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            导入数据Excel
            </summary>
            <typeparam name="T"></typeparam>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.CommonUtil.ParseList``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1,``1})">
            <summary>
            对象转换 含字典转换
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TTarget"></typeparam>
            <param name="data"></param>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.CommonUtil.GetImportPropertMap``2">
            <summary>
            获取导入属性映射
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TTarget"></typeparam>
            <returns>整理导入对象的 属性名称， 字典数据，原属性信息，目标属性信息 </returns>
        </member>
        <member name="M:Admin.NET.Core.CommonUtil.GetExportPropertMap``2">
            <summary>
            获取导出属性映射
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TTarget"></typeparam>
            <returns>整理导入对象的 属性名称， 字典数据，原属性信息，目标属性信息 </returns>
        </member>
        <member name="M:Admin.NET.Core.CommonUtil.GetExportDictMap``1">
            <summary>
            获取属性映射
            </summary>
            <typeparam name="TTarget"></typeparam>
            <returns>整理导入对象的 属性名称， 字典数据，原属性信息，目标属性信息 </returns>
        </member>
        <member name="M:Admin.NET.Core.CommonUtil.GetIpAddress(System.String)">
            <summary>
            解析IP地址
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.CommonUtil.GetClientDeviceInfo(System.String)">
            <summary>
            获取客户端设备信息（操作系统+浏览器）
            </summary>
            <param name="userAgent"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ComputerUtil.GetComputerInfo">
            <summary>
            内存信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ComputerUtil.GetOSInfo">
            <summary>
            获取正确的操作系统版本（Linux获取发行版本）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ComputerUtil.GetDiskInfos">
            <summary>
            磁盘信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ComputerUtil.GetIpFromOnline">
            <summary>
            获取外网IP地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ComputerUtil.GetRunTime">
            <summary>
            获取系统运行时间
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.IpCnResp">
            <summary>
            IP信息
            </summary>
        </member>
        <member name="T:Admin.NET.Core.MemoryMetrics">
            <summary>
            内存信息
            </summary>
        </member>
        <member name="P:Admin.NET.Core.MemoryMetrics.UsedRam">
            <summary>
            已用内存
            </summary>
        </member>
        <member name="P:Admin.NET.Core.MemoryMetrics.CpuRates">
            <summary>
            CPU使用率%
            </summary>
        </member>
        <member name="P:Admin.NET.Core.MemoryMetrics.TotalRam">
            <summary>
            总内存 GB
            </summary>
        </member>
        <member name="P:Admin.NET.Core.MemoryMetrics.RamRate">
            <summary>
            内存使用率 %
            </summary>
        </member>
        <member name="P:Admin.NET.Core.MemoryMetrics.FreeRam">
            <summary>
            空闲内存
            </summary>
        </member>
        <member name="T:Admin.NET.Core.DiskInfo">
            <summary>
            磁盘信息
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DiskInfo.DiskName">
            <summary>
            磁盘名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DiskInfo.TypeName">
            <summary>
            类型名
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DiskInfo.TotalFree">
            <summary>
            总剩余
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DiskInfo.TotalSize">
            <summary>
            总量
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DiskInfo.Used">
            <summary>
            已使用
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DiskInfo.AvailableFreeSpace">
            <summary>
            可使用
            </summary>
        </member>
        <member name="P:Admin.NET.Core.DiskInfo.AvailablePercent">
            <summary>
            使用百分比
            </summary>
        </member>
        <member name="M:Admin.NET.Core.MemoryMetricsClient.GetWindowsMetrics">
            <summary>
            windows系统获取内存信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.MemoryMetricsClient.GetUnixMetrics">
            <summary>
            Unix系统获取
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.MemoryMetricsClient.GetMacOSMetrics">
            <summary>
            macOS系统获取
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ShellUtil.Bash(System.String)">
            <summary>
            linux 系统命令
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ShellUtil.Cmd(System.String,System.String)">
            <summary>
            windows CMD 系统命令
            </summary>
            <param name="fileName"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ShellUtil.PowerShell(System.String)">
            <summary>
            Windows POWERSHELL 系统命令
            </summary>
            <param name="script"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ShellHelper.Bash(System.String)">
            <summary>
            Linux 系统命令
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ShellHelper.Cmd(System.String,System.String)">
            <summary>
            Windows CMD 系统命令
            </summary>
            <param name="fileName"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ShellHelper.PowerShell(System.String)">
            <summary>
            Windows POWERSHELL 系统命令
            </summary>
            <param name="script"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.CryptogramUtil.Encrypt(System.String)">
            <summary>
            加密
            </summary>
            <param name="plainText"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.CryptogramUtil.Decrypt(System.String)">
            <summary>
            解密
            </summary>
            <param name="cipherText"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.CryptogramUtil.SM2Encrypt(System.String)">
            <summary>
            SM2加密
            </summary>
            <param name="plainText"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.CryptogramUtil.SM2Decrypt(System.String)">
            <summary>
            SM2解密
            </summary>
            <param name="cipherText"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.CryptogramUtil.SM4EncryptECB(System.String)">
            <summary>
            SM4加密（ECB）
            </summary>
            <param name="plainText"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.CryptogramUtil.SM4DecryptECB(System.String)">
            <summary>
            SM4解密（ECB）
            </summary>
            <param name="cipherText"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.CryptogramUtil.SM4EncryptCBC(System.String)">
            <summary>
            SM4加密（CBC）
            </summary>
            <param name="plainText"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.CryptogramUtil.SM4DecryptCBC(System.String)">
            <summary>
            SM4解密（CBC）
            </summary>
            <param name="cipherText"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.CustomJsonPropertyConverter">
            <summary>
            自定义属性名称转换器
            </summary>
        </member>
        <member name="T:Admin.NET.Core.DateTimeUtil">
            <summary>
            时间帮助类
            </summary>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.Init(System.TimeSpan)">
            <summary>
            实例化类
            </summary>
            <param name="timeSpan"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.Init(System.DateTime)">
            <summary>
            实例化类
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.ConvertUnixTime(System.Int64)">
            <summary>
            根据unix时间戳的长度自动判断是秒还是以毫秒为单位
            </summary>
            <param name="unixTime"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetBeginTime(System.Nullable{System.DateTime},System.Int32)">
            <summary>
            获取开始时间
            </summary>
            <param name="dateTime"></param>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.ToLocalTimeDateBySeconds(System.Int64)">
            <summary>
             时间戳转本地时间-时间戳精确到秒
            </summary>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.ToUnixTimestampBySeconds(System.DateTime)">
            <summary>
             时间转时间戳Unix-时间戳精确到秒
            </summary>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.ToLocalTimeDateByMilliseconds(System.Int64)">
            <summary>
             时间戳转本地时间-时间戳精确到毫秒
            </summary>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.ToUnixTimestampByMilliseconds(System.DateTime)">
            <summary>
             时间转时间戳Unix-时间戳精确到毫秒
            </summary>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.FormatTime(System.Int64,System.Boolean)">
            <summary>
            毫秒转天时分秒
            </summary>
            <param name="ms">TotalMilliseconds</param>
            <param name="isSimplify">是否简化显示</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetUnixTimeStamp(System.DateTime)">
            <summary>
            获取unix时间戳
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetDayMinDate(System.DateTime)">
            <summary>
            获取日期天的最小时间
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetDayMaxDate(System.DateTime)">
            <summary>
            获取日期天的最大时间
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.FormatDateTime(System.Nullable{System.DateTime})">
            <summary>
            根据日期是否在当前年份来格式化日期
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetTodayTimeList(System.DateTime)">
            <summary>
            获取日期范围00:00:00 - 23:59:59
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetWeekByDate(System.DateTime)">
            <summary>
            获取星期几
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetWeekNumInMonth(System.DateTime)">
            <summary>
            获取这个月的第几周
            </summary>
            <param name="daytime"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetTodayRange">
            <summary>
            获取今天的时间范围
            </summary>
            <returns>返回包含开始时间和结束时间的元组</returns>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetMonthRange">
            <summary>
            获取本月的时间范围
            </summary>
            <returns>返回包含开始时间和结束时间的元组</returns>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetFirstDayOfMonth">
            <summary>
            获取本月的第一天开始时间
            </summary>
            <returns>返回当月的第一天</returns>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetLastDayOfMonth">
            <summary>
            获取本月的最后一天截至时间
            </summary>
            <returns>返回当月的最后一天</returns>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetYearRange">
            <summary>
            获取今年的时间范围
            </summary>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetFirstDayOfYear">
            <summary>
            获取今年的第一天时间范围
            </summary>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetLastDayOfYear">
            <summary>
            获取今年的最后一天时间范围
            </summary>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetDayBeforeYesterdayRange">
            <summary>
            获取前天时间范围
            </summary>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetYesterdayRange">
            <summary>
            获取昨天时间范围
            </summary>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetLastWeekRange">
            <summary>
            获取上一周时间范围
            </summary>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetThisWeekRange">
            <summary>
            获取本周时间范围
            </summary>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetLastMonthRange">
            <summary>
            获取上月时间范围
            </summary>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetLast3DaysRange">
            <summary>
            获取近3天的时间范围
            </summary>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetLast7DaysRange">
            <summary>
            获取近7天的时间范围
            </summary>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetLast15DaysRange">
            <summary>
            获取近15天的时间范围
            </summary>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetLast3MonthsRange">
            <summary>
            获取近3个月的时间范围
            </summary>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetFirstHalfYearRange">
            <summary>
            获取上半年的时间范围
            </summary>
        </member>
        <member name="M:Admin.NET.Core.DateTimeUtil.GetSecondHalfYearRange">
            <summary>
            获取下半年的时间范围
            </summary>
        </member>
        <member name="M:Admin.NET.Core.ExcelHelper.ImportData``2(Microsoft.AspNetCore.Http.IFormFile,System.Action{System.Collections.Generic.List{``0},System.Action{SqlSugar.StorageableResult{``1},System.Collections.Generic.List{``0},System.Collections.Generic.List{``1}}})">
            <summary>
            数据导入
            </summary>
            <param name="file"></param>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ExcelHelper.ExportData(System.Object,System.String)">
            <summary>
            导出Xlsx数据
            </summary>
            <param name="list"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.ExcelHelper.ExportTemplate``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Func{OfficeOpenXml.ExcelWorksheet,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.String}})">
            <summary>
            根据类型导出Xlsx模板
            </summary>
            <param name="list"></param>
            <param name="filename"></param>
            <param name="addListValidationFun"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.FileHelper">
            <summary>
            文件帮助类
            </summary>
        </member>
        <member name="M:Admin.NET.Core.FileHelper.TryDelete(System.String)">
            <summary>
            尝试删除文件/目录
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.FileHelper.CopyDirectory(System.String,System.String,System.Boolean)">
            <summary>
            复制目录
            </summary>
            <param name="sourceDir"></param>
            <param name="destinationDir"></param>
            <param name="overwrite"></param>
        </member>
        <member name="M:Admin.NET.Core.FileHelper.InsertsStringAtSpecifiedLocationInFile(System.String,System.String,System.Char,System.Int32,System.Boolean)">
            <summary>
            在文件倒数第lastIndex个identifier前插入内容（备份原文件）
            </summary>
            <param name="filePath">文件路径</param>
            <param name="insertContent">要插入的内容</param>
            <param name="identifier">标识符号</param>
            <param name="lastIndex">倒数第几个标识符</param>
            <param name="createBackup">是否创建备份文件</param>
        </member>
        <member name="M:Admin.NET.Core.FileHelper.WriteToFileAsync(System.String,System.Text.StringBuilder)">
            <summary>
            写入文件内容
            </summary>
            <param name="filePath"></param>
            <param name="sb"></param>
        </member>
        <member name="T:Admin.NET.Core.GiteeHelper">
            <summary>
            Gitee接口帮助类
            </summary>
        </member>
        <member name="M:Admin.NET.Core.GiteeHelper.DownloadRepoZip(System.String,System.String,System.String,System.String)">
            <summary>
            下载仓库 zip
            </summary>
            <remarks>https://gitee.com/api/v5/swagger#/getV5ReposOwnerRepoZipball</remarks>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.GiteeHelper.BuilderQueryString(System.Object)">
            <summary>
            构建Query参数
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.GM">
            
             用BC的注意点：
             这个版本的BC对SM3withSM2的结果为asn1格式的r和s，如果需要直接拼接的r||s需要自己转换。下面rsAsn1ToPlainByteArray、rsPlainByteArrayToAsn1就在干这事。
             这个版本的BC对SM2的结果为C1||C2||C3，据说为旧标准，新标准为C1||C3||C2，用新标准的需要自己转换。下面（被注释掉的）changeC1C2C3ToC1C3C2、changeC1C3C2ToC1C2C3就在干这事。java版的高版本有加上C1C3C2，csharp版没准以后也会加，但目前还没有，java版的目前可以初始化时“ SM2Engine sm2Engine = new SM2Engine(SM2Engine.Mode.C1C3C2);”。
            
        </member>
        <member name="M:Admin.NET.Core.GM.SignSm3WithSm2(System.Byte[],System.Byte[],Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            
             @param msg
             @param userId
             @param privateKey
             @return r||s，直接拼接byte数组的rs
        </member>
        <member name="M:Admin.NET.Core.GM.SignSm3WithSm2Asn1Rs(System.Byte[],System.Byte[],Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            @param msg
            @param userId
            @param privateKey
            @return rs in <b>asn1 format</b>
        </member>
        <member name="M:Admin.NET.Core.GM.VerifySm3WithSm2(System.Byte[],System.Byte[],System.Byte[],Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            
             @param msg
             @param userId
             @param rs r||s，直接拼接byte数组的rs
             @param publicKey
             @return
        </member>
        <member name="M:Admin.NET.Core.GM.VerifySm3WithSm2Asn1Rs(System.Byte[],System.Byte[],System.Byte[],Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            
             @param msg
             @param userId
             @param rs in <b>asn1 format</b>
             @param publicKey
             @return
        </member>
        <member name="M:Admin.NET.Core.GM.ChangeC1C2C3ToC1C3C2(System.Byte[])">
            bc加解密使用旧标c1||c2||c3，此方法在加密后调用，将结果转化为c1||c3||c2
            @param c1c2c3
            @return
        </member>
        <member name="M:Admin.NET.Core.GM.ChangeC1C3C2ToC1C2C3(System.Byte[])">
            bc加解密使用旧标c1||c3||c2，此方法在解密前调用，将密文转化为c1||c2||c3再去解密
            @param c1c3c2
            @return
        </member>
        <member name="M:Admin.NET.Core.GM.Sm2Decrypt(System.Byte[],Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            c1||c3||c2
            @param data
            @param key
            @return
        </member>
        <member name="M:Admin.NET.Core.GM.Sm2Encrypt(System.Byte[],Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            c1||c3||c2
            @param data
            @param key
            @return
        </member>
        <member name="M:Admin.NET.Core.GM.Sm2EncryptOld(System.Byte[],Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            c1||c2||c3
            @param data
            @param key
            @return
        </member>
        <member name="M:Admin.NET.Core.GM.Sm2DecryptOld(System.Byte[],Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            c1||c2||c3
            @param data
            @param key
            @return
        </member>
        <member name="M:Admin.NET.Core.GM.Sm3(System.Byte[])">
            @param bytes
            @return
        </member>
        <member name="M:Admin.NET.Core.GM.RsAsn1ToPlainByteArray(System.Byte[])">
            BC的SM3withSM2签名得到的结果的rs是asn1格式的，这个方法转化成直接拼接r||s
            @param rsDer rs in asn1 format
            @return sign result in plain byte array
        </member>
        <member name="M:Admin.NET.Core.GM.RsPlainByteArrayToAsn1(System.Byte[])">
            BC的SM3withSM2验签需要的rs是asn1格式的，这个方法将直接拼接r||s的字节数组转化成asn1格式
            @param sign in plain byte array
            @return rs result in asn1 format
        </member>
        <member name="M:Admin.NET.Core.GM.Join(System.Byte[][])">
             字节数组拼接
            
             @param params
             @return
        </member>
        <member name="M:Admin.NET.Core.GM.KDF(System.Byte[],System.Int32)">
             密钥派生函数
            
             @param Z
             @param klen
             生成klen字节数长度的密钥
             @return
        </member>
        <member name="M:Admin.NET.Core.GM.ReadSm2File(System.Byte[],System.String)">
            cfca官网CSP沙箱导出的sm2文件
            @param pem 二进制原文
            @param pwd 密码
            @return
        </member>
        <member name="M:Admin.NET.Core.GM.ReadSm2X509Cert(System.Byte[])">
            
             @param cert
             @return
        </member>
        <member name="T:Admin.NET.Core.GMUtil">
            <summary>
            GM工具类
            </summary>
        </member>
        <member name="M:Admin.NET.Core.GMUtil.SM2Encrypt(System.String,System.String)">
            <summary>
            SM2加密
            </summary>
            <param name="publicKeyHex"></param>
            <param name="data_string"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.GMUtil.SM2Decrypt(System.String,System.String)">
            <summary>
            SM2解密
            </summary>
            <param name="privateKey_string"></param>
            <param name="encryptedData_string"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.GMUtil.SM4EncryptECB(System.String,System.String)">
            <summary>
            SM4加密（ECB）
            </summary>
            <param name="key_string"></param>
            <param name="plainText"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.GMUtil.SM4DecryptECB(System.String,System.String)">
            <summary>
            SM4解密（ECB）
            </summary>
            <param name="key_string"></param>
            <param name="cipherText"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.GMUtil.SM4EncryptCBC(System.String,System.String,System.String)">
            <summary>
            SM4加密（CBC）
            </summary>
            <param name="key_string"></param>
            <param name="iv_string"></param>
            <param name="plainText"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.GMUtil.SM4DecryptCBC(System.String,System.String,System.String)">
            <summary>
            SM4解密（CBC）
            </summary>
            <param name="key_string"></param>
            <param name="iv_string"></param>
            <param name="cipherText"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.GMUtil.HandleSm4Padding(System.Byte[],System.Int32)">
            <summary>
            补足 16 进制字符串的 0 字符，返回不带 0x 的16进制字符串
            </summary>
            <param name="input"></param>
            <param name="mode">1表示加密，0表示解密</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.MiniExcelUtil.ExportExcelTemplate``1(System.String)">
            <summary>
            导出模板Excel
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.MiniExcelUtil.GetImportExcelData``1(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            获取导入数据Excel
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.MiniExcelUtil.GetExportDataExcelUrl``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            获取导出数据excel地址
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.NewtonsoftJsonSerializerProvider">
            <summary>
            自定义序列化提供器 Newtonsoft.Json 实现
            </summary>
        </member>
        <member name="M:Admin.NET.Core.NewtonsoftJsonSerializerProvider.Serialize(System.Object,System.Object)">
            <summary>
            序列化对象
            </summary>
            <param name="value"></param>
            <param name="jsonSerializerOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.NewtonsoftJsonSerializerProvider.Deserialize``1(System.String,System.Object)">
            <summary>
            反序列化字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <param name="jsonSerializerOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.NewtonsoftJsonSerializerProvider.Deserialize(System.String,System.Type,System.Object)">
            <summary>
            反序列化字符串
            </summary>
            <param name="json"></param>
            <param name="returnType"></param>
            <param name="jsonSerializerOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.NewtonsoftJsonSerializerProvider.GetSerializerOptions">
            <summary>
            返回读取全局配置的 JSON 选项
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.TreeNode">
            <summary>
            树形节点
            </summary>
        </member>
        <member name="T:Admin.NET.Core.PathTreeBuilder">
            <summary>
            根据路径数组生成树结构
            </summary>
        </member>
        <member name="T:Admin.NET.Core.ReflectionUtil">
            <summary>
            反射工具类
            </summary>
        </member>
        <member name="M:Admin.NET.Core.ReflectionUtil.GetDescriptionValue``1(System.Reflection.FieldInfo)">
            <summary>
            获取字段特性
            </summary>
            <param name="field"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.RegularValidate">
            <summary>
            正则校验
            </summary>
        </member>
        <member name="M:Admin.NET.Core.RegularValidate.ValidatePassword(System.String)">
            <summary>
            验证密码规则
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="T:Admin.NET.Core.SafeMath">
            <summary>
            安全的基本数学运算方法类
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SafeMath.Add``1(System.Object,System.Object,System.Int32,``0,System.Boolean)">
            <summary>
            安全加法
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
            <param name="precision">保留小数位数</param>
            <param name="defaultValue">默认值</param>
            <param name="throwOnError">是否抛出异常</param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SafeMath.Sub``1(System.Object,System.Object,System.Int32,``0,System.Boolean)">
            <summary>
            安全减法
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
            <param name="precision">保留小数位数</param>
            <param name="defaultValue">默认值</param>
            <param name="throwOnError">是否抛出异常</param>
        </member>
        <member name="M:Admin.NET.Core.SafeMath.Mult``1(System.Object,System.Object,System.Int32,``0,System.Boolean)">
            <summary>
            安全乘法
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
            <param name="precision">保留小数位数</param>
            <param name="defaultValue">默认值</param>
            <param name="throwOnError">是否抛出异常</param>
        </member>
        <member name="M:Admin.NET.Core.SafeMath.Div``1(System.Object,System.Object,System.Int32,``0,System.Boolean)">
            <summary>
            安全除法
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
            <param name="precision">保留小数位数</param>
            <param name="defaultValue">默认值</param>
            <param name="throwOnDivideByZero">是否抛出除以零异常</param>
        </member>
        <member name="M:Admin.NET.Core.SafeMath.SafeConvert``1(System.Object,``0)">
            <summary>
            安全类型转换
            </summary>
            <param name="value">数据源</param>
            <param name="defaultValue">默认值</param>
        </member>
        <member name="M:Admin.NET.Core.SafeMath.PerformOperation``1(System.Object,System.Object,System.Func{System.Decimal,System.Decimal,System.Decimal},System.Int32,``0,System.Boolean)">
            <summary>
            执行数学运算
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SafeMath.ConvertToDecimal(System.Object)">
            <summary>
            将输入值转换为 decimal
            </summary>
        </member>
        <member name="T:Admin.NET.Core.SSHHelper">
            <summary>
            SSH/Sftp 工具类
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SSHHelper.Connect">
            <summary>
            连接
            </summary>
        </member>
        <member name="M:Admin.NET.Core.SSHHelper.Exists(System.String)">
            <summary>
            是否存在同名文件
            </summary>
            <param name="ftpFileName"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SSHHelper.DeleteFile(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="ftpFileName"></param>
        </member>
        <member name="M:Admin.NET.Core.SSHHelper.DownloadFile(System.String,System.String)">
            <summary>
            下载到指定目录
            </summary>
            <param name="ftpFileName"></param>
            <param name="localFileName"></param>
        </member>
        <member name="M:Admin.NET.Core.SSHHelper.ReadAllBytes(System.String)">
            <summary>
            读取字节
            </summary>
            <param name="ftpFileName"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SSHHelper.OpenRead(System.String)">
            <summary>
            读取流
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SSHHelper.DownloadFileWithResume(System.String,System.String)">
            <summary>
            继续下载
            </summary>
            <param name="ftpFileName"></param>
            <param name="localFileName"></param>
        </member>
        <member name="M:Admin.NET.Core.SSHHelper.RenameFile(System.String,System.String)">
            <summary>
            重命名
            </summary>
            <param name="oldPath"></param>
            <param name="newPath"></param>
        </member>
        <member name="M:Admin.NET.Core.SSHHelper.GetFileList(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            指定目录下文件
            </summary>
            <param name="folder"></param>
            <param name="filters"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.SSHHelper.UploadFile(System.String,System.String)">
            <summary>
            上传指定目录文件
            </summary>
            <param name="localFileName"></param>
            <param name="ftpFileName"></param>
        </member>
        <member name="M:Admin.NET.Core.SSHHelper.UploadFile(System.Byte[],System.String)">
            <summary>
            上传字节
            </summary>
            <param name="bs"></param>
            <param name="ftpFileName"></param>
        </member>
        <member name="M:Admin.NET.Core.SSHHelper.UploadFile(System.IO.Stream,System.String)">
            <summary>
            上传流
            </summary>
            <param name="fileStream"></param>
            <param name="ftpFileName"></param>
        </member>
        <member name="M:Admin.NET.Core.SSHHelper.CreateDir(Renci.SshNet.SftpClient,System.String)">
            <summary>
            创建目录
            </summary>
            <param name="sftp"></param>
            <param name="dir"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Admin.NET.Core.SSHHelper.Dispose">
            <summary>
            释放对象
            </summary>
        </member>
        <member name="T:Admin.NET.Core.TripleDES">
            <summary>
            3DES文件加解密
            </summary>
        </member>
        <member name="M:Admin.NET.Core.TripleDES.EncryptFile(System.String,System.String,System.String)">
            <summary>
            加密文件
            </summary>
            <param name="inputFile">待加密文件路径</param>
            <param name="outputFile">加密后的文件路径</param>
            <param name="password">密码 （24位长度）</param>
        </member>
        <member name="M:Admin.NET.Core.TripleDES.DecryptFile(System.String,System.String,System.String)">
            <summary>
            加密文件
            </summary>
            <param name="inputFile">加密的文件路径</param>
            <param name="outputFile">解密后的文件路径</param>
            <param name="password">密码 （24位长度）</param>
        </member>
        <member name="T:Admin.NET.Core.VerifyFileExtensionName">
            <summary>
            验证文件类型
            </summary>
        </member>
        <member name="M:Admin.NET.Core.VerifyFileExtensionName.IsSameType(System.IO.Stream,System.String)">
            <summary>
            文件格式和文件内容格式是否一致
            </summary>
            <param name="stream"></param>
            <param name="suffix"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.NET.Core.VerifyFileExtensionName.GetFileHeader(System.Byte[])">
            根据文件转换成的字节数组获取文件头信息
            @param 文件路径
            @return 文件头信息
        </member>
        <member name="M:Admin.NET.Core.VerifyFileExtensionName.BytesToHexString(System.Byte[])">
            将要读取文件头信息的文件的byte数组转换成string类型表示
            下面这段代码就是用来对文件类型作验证的方法，
            将字节数组的前四位转换成16进制字符串，并且转换的时候，要先和0xFF做一次与运算。
            这是因为，整个文件流的字节数组中，有很多是负数，进行了与运算后，可以将前面的符号位都去掉，
            这样转换成的16进制字符串最多保留两位，如果是正数又小于10，那么转换后只有一位，
            需要在前面补0，这样做的目的是方便比较，取完前四位这个循环就可以终止了
            @param src要读取文件头信息的文件的byte数组
            @return 文件头信息
        </member>
        <member name="T:Admin.NET.Core.XlsxFileResult`1">
            <summary>
            Excel文件ActionResult
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Admin.NET.Core.XlsxFileResult`1.#ctor(System.Collections.Generic.ICollection{`0},System.String)">
             <summary>
            
             </summary>
             <param name="data"></param>
             <param name="fileDownloadName"></param>
        </member>
        <member name="T:Admin.NET.Core.XlsxFileResult">
             <summary>
            
             </summary>
        </member>
        <member name="M:Admin.NET.Core.XlsxFileResult.#ctor(System.IO.Stream,System.String)">
             <summary>
            
             </summary>
             <param name="stream"></param>
             <param name="fileDownloadName"></param>
        </member>
        <member name="M:Admin.NET.Core.XlsxFileResult.#ctor(System.Byte[],System.String)">
             <summary>
            
             </summary>
             <param name="bytes"></param>
             <param name="fileDownloadName"></param>
        </member>
        <member name="T:Admin.NET.Core.XlsxFileResultBase">
            <summary>
            基类
            </summary>
        </member>
        <member name="M:Admin.NET.Core.XlsxFileResultBase.DownloadExcelFileAsync(Microsoft.AspNetCore.Mvc.ActionContext,System.IO.Stream,System.String)">
            <summary>
            下载Excel文件
            </summary>
            <param name="context"></param>
            <param name="stream"></param>
            <param name="downloadFileName"></param>
            <returns></returns>
        </member>
    </members>
</doc>
